{"version":3,"file":"static/js/264.81e5d5bd.chunk.js","mappings":"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","sources":["../node_modules/@fullcalendar/daygrid/index.js","../node_modules/@fullcalendar/daygrid/internal.js","../node_modules/@fullcalendar/interaction/index.js","../node_modules/@fullcalendar/list/internal.js","../node_modules/@fullcalendar/list/index.js","../node_modules/@fullcalendar/react/src/index.tsx","../node_modules/@fullcalendar/timegrid/internal.js","../node_modules/@fullcalendar/timegrid/index.js"],"sourcesContent":["import { createPlugin } from '@fullcalendar/core/index.js';\nimport { DayGridView as DayTableView, TableDateProfileGenerator } from './internal.js';\nimport '@fullcalendar/core/internal.js';\nimport '@fullcalendar/core/preact.js';\n\nvar index = createPlugin({\n    name: '@fullcalendar/daygrid',\n    initialView: 'dayGridMonth',\n    views: {\n        dayGrid: {\n            component: DayTableView,\n            dateProfileGeneratorClass: TableDateProfileGenerator,\n        },\n        dayGridDay: {\n            type: 'dayGrid',\n            duration: { days: 1 },\n        },\n        dayGridWeek: {\n            type: 'dayGrid',\n            duration: { weeks: 1 },\n        },\n        dayGridMonth: {\n            type: 'dayGrid',\n            duration: { months: 1 },\n            fixedWeekCount: true,\n        },\n        dayGridYear: {\n            type: 'dayGrid',\n            duration: { years: 1 },\n        },\n    },\n});\n\nexport { index as default };\n","import { injectStyles, createFormatter, BaseComponent, StandardEvent, buildSegTimeText, EventContainer, getSegAnchorAttrs, memoize, MoreLinkContainer, getSegMeta, DateComponent, getUniqueDomId, setRef, DayCellContainer, WeekNumberContainer, buildNavLinkAttrs, hasCustomDayCellContent, addMs, intersectRanges, addDays, SegHierarchy, buildEntryKey, intersectSpans, RefMap, sortEventSegs, isPropsEqual, buildEventRangeKey, BgEvent, renderFill, PositionCache, NowTimer, formatIsoMonthStr, formatDayString, Slicer, DateProfileGenerator, addWeeks, diffWeeks, getStickyHeaderDates, ViewContainer, SimpleScrollGrid, getStickyFooterScrollbar, renderScrollShim, DayHeader, DaySeriesModel, DayTableModel } from '@fullcalendar/core/internal.js';\nimport { createElement, Fragment, createRef } from '@fullcalendar/core/preact.js';\n\nvar css_248z = \":root{--fc-daygrid-event-dot-width:8px}.fc-daygrid-day-events:after,.fc-daygrid-day-events:before,.fc-daygrid-day-frame:after,.fc-daygrid-day-frame:before,.fc-daygrid-event-harness:after,.fc-daygrid-event-harness:before{clear:both;content:\\\"\\\";display:table}.fc .fc-daygrid-body{position:relative;z-index:1}.fc .fc-daygrid-day.fc-day-today{background-color:var(--fc-today-bg-color)}.fc .fc-daygrid-day-frame{min-height:100%;position:relative}.fc .fc-daygrid-day-top{display:flex;flex-direction:row-reverse}.fc .fc-day-other .fc-daygrid-day-top{opacity:.3}.fc .fc-daygrid-day-number{padding:4px;position:relative;z-index:4}.fc .fc-daygrid-month-start{font-size:1.1em;font-weight:700}.fc .fc-daygrid-day-events{margin-top:1px}.fc .fc-daygrid-body-balanced .fc-daygrid-day-events{left:0;position:absolute;right:0}.fc .fc-daygrid-body-unbalanced .fc-daygrid-day-events{min-height:2em;position:relative}.fc .fc-daygrid-body-natural .fc-daygrid-day-events{margin-bottom:1em}.fc .fc-daygrid-event-harness{position:relative}.fc .fc-daygrid-event-harness-abs{left:0;position:absolute;right:0;top:0}.fc .fc-daygrid-bg-harness{bottom:0;position:absolute;top:0}.fc .fc-daygrid-day-bg .fc-non-business{z-index:1}.fc .fc-daygrid-day-bg .fc-bg-event{z-index:2}.fc .fc-daygrid-day-bg .fc-highlight{z-index:3}.fc .fc-daygrid-event{margin-top:1px;z-index:6}.fc .fc-daygrid-event.fc-event-mirror{z-index:7}.fc .fc-daygrid-day-bottom{font-size:.85em;margin:0 2px}.fc .fc-daygrid-day-bottom:after,.fc .fc-daygrid-day-bottom:before{clear:both;content:\\\"\\\";display:table}.fc .fc-daygrid-more-link{border-radius:3px;cursor:pointer;line-height:1;margin-top:1px;max-width:100%;overflow:hidden;padding:2px;position:relative;white-space:nowrap;z-index:4}.fc .fc-daygrid-more-link:hover{background-color:rgba(0,0,0,.1)}.fc .fc-daygrid-week-number{background-color:var(--fc-neutral-bg-color);color:var(--fc-neutral-text-color);min-width:1.5em;padding:2px;position:absolute;text-align:center;top:0;z-index:5}.fc .fc-more-popover .fc-popover-body{min-width:220px;padding:10px}.fc-direction-ltr .fc-daygrid-event.fc-event-start,.fc-direction-rtl .fc-daygrid-event.fc-event-end{margin-left:2px}.fc-direction-ltr .fc-daygrid-event.fc-event-end,.fc-direction-rtl .fc-daygrid-event.fc-event-start{margin-right:2px}.fc-direction-ltr .fc-daygrid-more-link{float:left}.fc-direction-ltr .fc-daygrid-week-number{border-radius:0 0 3px 0;left:0}.fc-direction-rtl .fc-daygrid-more-link{float:right}.fc-direction-rtl .fc-daygrid-week-number{border-radius:0 0 0 3px;right:0}.fc-liquid-hack .fc-daygrid-day-frame{position:static}.fc-daygrid-event{border-radius:3px;font-size:var(--fc-small-font-size);position:relative;white-space:nowrap}.fc-daygrid-block-event .fc-event-time{font-weight:700}.fc-daygrid-block-event .fc-event-time,.fc-daygrid-block-event .fc-event-title{padding:1px}.fc-daygrid-dot-event{align-items:center;display:flex;padding:2px 0}.fc-daygrid-dot-event .fc-event-title{flex-grow:1;flex-shrink:1;font-weight:700;min-width:0;overflow:hidden}.fc-daygrid-dot-event.fc-event-mirror,.fc-daygrid-dot-event:hover{background:rgba(0,0,0,.1)}.fc-daygrid-dot-event.fc-event-selected:before{bottom:-10px;top:-10px}.fc-daygrid-event-dot{border:calc(var(--fc-daygrid-event-dot-width)/2) solid var(--fc-event-border-color);border-radius:calc(var(--fc-daygrid-event-dot-width)/2);box-sizing:content-box;height:0;margin:0 4px;width:0}.fc-direction-ltr .fc-daygrid-event .fc-event-time{margin-right:3px}.fc-direction-rtl .fc-daygrid-event .fc-event-time{margin-left:3px}\";\ninjectStyles(css_248z);\n\nfunction splitSegsByRow(segs, rowCnt) {\n    let byRow = [];\n    for (let i = 0; i < rowCnt; i += 1) {\n        byRow[i] = [];\n    }\n    for (let seg of segs) {\n        byRow[seg.row].push(seg);\n    }\n    return byRow;\n}\nfunction splitSegsByFirstCol(segs, colCnt) {\n    let byCol = [];\n    for (let i = 0; i < colCnt; i += 1) {\n        byCol[i] = [];\n    }\n    for (let seg of segs) {\n        byCol[seg.firstCol].push(seg);\n    }\n    return byCol;\n}\nfunction splitInteractionByRow(ui, rowCnt) {\n    let byRow = [];\n    if (!ui) {\n        for (let i = 0; i < rowCnt; i += 1) {\n            byRow[i] = null;\n        }\n    }\n    else {\n        for (let i = 0; i < rowCnt; i += 1) {\n            byRow[i] = {\n                affectedInstances: ui.affectedInstances,\n                isEvent: ui.isEvent,\n                segs: [],\n            };\n        }\n        for (let seg of ui.segs) {\n            byRow[seg.row].segs.push(seg);\n        }\n    }\n    return byRow;\n}\n\nconst DEFAULT_TABLE_EVENT_TIME_FORMAT = createFormatter({\n    hour: 'numeric',\n    minute: '2-digit',\n    omitZeroMinute: true,\n    meridiem: 'narrow',\n});\nfunction hasListItemDisplay(seg) {\n    let { display } = seg.eventRange.ui;\n    return display === 'list-item' || (display === 'auto' &&\n        !seg.eventRange.def.allDay &&\n        seg.firstCol === seg.lastCol && // can't be multi-day\n        seg.isStart && // \"\n        seg.isEnd // \"\n    );\n}\n\nclass TableBlockEvent extends BaseComponent {\n    render() {\n        let { props } = this;\n        return (createElement(StandardEvent, Object.assign({}, props, { elClasses: ['fc-daygrid-event', 'fc-daygrid-block-event', 'fc-h-event'], defaultTimeFormat: DEFAULT_TABLE_EVENT_TIME_FORMAT, defaultDisplayEventEnd: props.defaultDisplayEventEnd, disableResizing: !props.seg.eventRange.def.allDay })));\n    }\n}\n\nclass TableListItemEvent extends BaseComponent {\n    render() {\n        let { props, context } = this;\n        let { options } = context;\n        let { seg } = props;\n        let timeFormat = options.eventTimeFormat || DEFAULT_TABLE_EVENT_TIME_FORMAT;\n        let timeText = buildSegTimeText(seg, timeFormat, context, true, props.defaultDisplayEventEnd);\n        return (createElement(EventContainer, Object.assign({}, props, { elTag: \"a\", elClasses: ['fc-daygrid-event', 'fc-daygrid-dot-event'], elAttrs: getSegAnchorAttrs(props.seg, context), defaultGenerator: renderInnerContent, timeText: timeText, isResizing: false, isDateSelecting: false })));\n    }\n}\nfunction renderInnerContent(renderProps) {\n    return (createElement(Fragment, null,\n        createElement(\"div\", { className: \"fc-daygrid-event-dot\", style: { borderColor: renderProps.borderColor || renderProps.backgroundColor } }),\n        renderProps.timeText && (createElement(\"div\", { className: \"fc-event-time\" }, renderProps.timeText)),\n        createElement(\"div\", { className: \"fc-event-title\" }, renderProps.event.title || createElement(Fragment, null, \"\\u00A0\"))));\n}\n\nclass TableCellMoreLink extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.compileSegs = memoize(compileSegs);\n    }\n    render() {\n        let { props } = this;\n        let { allSegs, invisibleSegs } = this.compileSegs(props.singlePlacements);\n        return (createElement(MoreLinkContainer, { elClasses: ['fc-daygrid-more-link'], dateProfile: props.dateProfile, todayRange: props.todayRange, allDayDate: props.allDayDate, moreCnt: props.moreCnt, allSegs: allSegs, hiddenSegs: invisibleSegs, alignmentElRef: props.alignmentElRef, alignGridTop: props.alignGridTop, extraDateSpan: props.extraDateSpan, popoverContent: () => {\n                let isForcedInvisible = (props.eventDrag ? props.eventDrag.affectedInstances : null) ||\n                    (props.eventResize ? props.eventResize.affectedInstances : null) ||\n                    {};\n                return (createElement(Fragment, null, allSegs.map((seg) => {\n                    let instanceId = seg.eventRange.instance.instanceId;\n                    return (createElement(\"div\", { className: \"fc-daygrid-event-harness\", key: instanceId, style: {\n                            visibility: isForcedInvisible[instanceId] ? 'hidden' : '',\n                        } }, hasListItemDisplay(seg) ? (createElement(TableListItemEvent, Object.assign({ seg: seg, isDragging: false, isSelected: instanceId === props.eventSelection, defaultDisplayEventEnd: false }, getSegMeta(seg, props.todayRange)))) : (createElement(TableBlockEvent, Object.assign({ seg: seg, isDragging: false, isResizing: false, isDateSelecting: false, isSelected: instanceId === props.eventSelection, defaultDisplayEventEnd: false }, getSegMeta(seg, props.todayRange))))));\n                })));\n            } }));\n    }\n}\nfunction compileSegs(singlePlacements) {\n    let allSegs = [];\n    let invisibleSegs = [];\n    for (let placement of singlePlacements) {\n        allSegs.push(placement.seg);\n        if (!placement.isVisible) {\n            invisibleSegs.push(placement.seg);\n        }\n    }\n    return { allSegs, invisibleSegs };\n}\n\nconst DEFAULT_WEEK_NUM_FORMAT = createFormatter({ week: 'narrow' });\nclass TableCell extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.rootElRef = createRef();\n        this.state = {\n            dayNumberId: getUniqueDomId(),\n        };\n        this.handleRootEl = (el) => {\n            setRef(this.rootElRef, el);\n            setRef(this.props.elRef, el);\n        };\n    }\n    render() {\n        let { context, props, state, rootElRef } = this;\n        let { options, dateEnv } = context;\n        let { date, dateProfile } = props;\n        // TODO: memoize this?\n        const isMonthStart = props.showDayNumber &&\n            shouldDisplayMonthStart(date, dateProfile.currentRange, dateEnv);\n        return (createElement(DayCellContainer, { elTag: \"td\", elRef: this.handleRootEl, elClasses: [\n                'fc-daygrid-day',\n                ...(props.extraClassNames || []),\n            ], elAttrs: Object.assign(Object.assign(Object.assign({}, props.extraDataAttrs), (props.showDayNumber ? { 'aria-labelledby': state.dayNumberId } : {})), { role: 'gridcell' }), defaultGenerator: renderTopInner, date: date, dateProfile: dateProfile, todayRange: props.todayRange, showDayNumber: props.showDayNumber, isMonthStart: isMonthStart, extraRenderProps: props.extraRenderProps }, (InnerContent, renderProps) => (createElement(\"div\", { ref: props.innerElRef, className: \"fc-daygrid-day-frame fc-scrollgrid-sync-inner\", style: { minHeight: props.minHeight } },\n            props.showWeekNumber && (createElement(WeekNumberContainer, { elTag: \"a\", elClasses: ['fc-daygrid-week-number'], elAttrs: buildNavLinkAttrs(context, date, 'week'), date: date, defaultFormat: DEFAULT_WEEK_NUM_FORMAT })),\n            !renderProps.isDisabled &&\n                (props.showDayNumber || hasCustomDayCellContent(options) || props.forceDayTop) ? (createElement(\"div\", { className: \"fc-daygrid-day-top\" },\n                createElement(InnerContent, { elTag: \"a\", elClasses: [\n                        'fc-daygrid-day-number',\n                        isMonthStart && 'fc-daygrid-month-start',\n                    ], elAttrs: Object.assign(Object.assign({}, buildNavLinkAttrs(context, date)), { id: state.dayNumberId }) }))) : props.showDayNumber ? (\n            // for creating correct amount of space (see issue #7162)\n            createElement(\"div\", { className: \"fc-daygrid-day-top\", style: { visibility: 'hidden' } },\n                createElement(\"a\", { className: \"fc-daygrid-day-number\" }, \"\\u00A0\"))) : undefined,\n            createElement(\"div\", { className: \"fc-daygrid-day-events\", ref: props.fgContentElRef },\n                props.fgContent,\n                createElement(\"div\", { className: \"fc-daygrid-day-bottom\", style: { marginTop: props.moreMarginTop } },\n                    createElement(TableCellMoreLink, { allDayDate: date, singlePlacements: props.singlePlacements, moreCnt: props.moreCnt, alignmentElRef: rootElRef, alignGridTop: !props.showDayNumber, extraDateSpan: props.extraDateSpan, dateProfile: props.dateProfile, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, todayRange: props.todayRange }))),\n            createElement(\"div\", { className: \"fc-daygrid-day-bg\" }, props.bgContent)))));\n    }\n}\nfunction renderTopInner(props) {\n    return props.dayNumberText || createElement(Fragment, null, \"\\u00A0\");\n}\nfunction shouldDisplayMonthStart(date, currentRange, dateEnv) {\n    const { start: currentStart, end: currentEnd } = currentRange;\n    const currentEndIncl = addMs(currentEnd, -1);\n    const currentFirstYear = dateEnv.getYear(currentStart);\n    const currentFirstMonth = dateEnv.getMonth(currentStart);\n    const currentLastYear = dateEnv.getYear(currentEndIncl);\n    const currentLastMonth = dateEnv.getMonth(currentEndIncl);\n    // spans more than one month?\n    return !(currentFirstYear === currentLastYear && currentFirstMonth === currentLastMonth) &&\n        Boolean(\n        // first date in current view?\n        date.valueOf() === currentStart.valueOf() ||\n            // a month-start that's within the current range?\n            (dateEnv.getDay(date) === 1 && date.valueOf() < currentEnd.valueOf()));\n}\n\nfunction generateSegKey(seg) {\n    return seg.eventRange.instance.instanceId + ':' + seg.firstCol;\n}\nfunction generateSegUid(seg) {\n    return generateSegKey(seg) + ':' + seg.lastCol;\n}\nfunction computeFgSegPlacement(segs, // assumed already sorted\ndayMaxEvents, dayMaxEventRows, strictOrder, segHeights, maxContentHeight, cells) {\n    let hierarchy = new DayGridSegHierarchy((segEntry) => {\n        // TODO: more DRY with generateSegUid\n        let segUid = segs[segEntry.index].eventRange.instance.instanceId +\n            ':' + segEntry.span.start +\n            ':' + (segEntry.span.end - 1);\n        return segHeights[segUid];\n    });\n    hierarchy.allowReslicing = true;\n    hierarchy.strictOrder = strictOrder;\n    if (dayMaxEvents === true || dayMaxEventRows === true) {\n        hierarchy.maxCoord = maxContentHeight;\n        hierarchy.hiddenConsumes = true;\n    }\n    else if (typeof dayMaxEvents === 'number') {\n        hierarchy.maxStackCnt = dayMaxEvents;\n    }\n    else if (typeof dayMaxEventRows === 'number') {\n        hierarchy.maxStackCnt = dayMaxEventRows;\n        hierarchy.hiddenConsumes = true;\n    }\n    // create segInputs only for segs with known heights\n    let segInputs = [];\n    let unknownHeightSegs = [];\n    for (let i = 0; i < segs.length; i += 1) {\n        let seg = segs[i];\n        let segUid = generateSegUid(seg);\n        let eventHeight = segHeights[segUid];\n        if (eventHeight != null) {\n            segInputs.push({\n                index: i,\n                span: {\n                    start: seg.firstCol,\n                    end: seg.lastCol + 1,\n                },\n            });\n        }\n        else {\n            unknownHeightSegs.push(seg);\n        }\n    }\n    let hiddenEntries = hierarchy.addSegs(segInputs);\n    let segRects = hierarchy.toRects();\n    let { singleColPlacements, multiColPlacements, leftoverMargins } = placeRects(segRects, segs, cells);\n    let moreCnts = [];\n    let moreMarginTops = [];\n    // add segs with unknown heights\n    for (let seg of unknownHeightSegs) {\n        multiColPlacements[seg.firstCol].push({\n            seg,\n            isVisible: false,\n            isAbsolute: true,\n            absoluteTop: 0,\n            marginTop: 0,\n        });\n        for (let col = seg.firstCol; col <= seg.lastCol; col += 1) {\n            singleColPlacements[col].push({\n                seg: resliceSeg(seg, col, col + 1, cells),\n                isVisible: false,\n                isAbsolute: false,\n                absoluteTop: 0,\n                marginTop: 0,\n            });\n        }\n    }\n    // add the hidden entries\n    for (let col = 0; col < cells.length; col += 1) {\n        moreCnts.push(0);\n    }\n    for (let hiddenEntry of hiddenEntries) {\n        let seg = segs[hiddenEntry.index];\n        let hiddenSpan = hiddenEntry.span;\n        multiColPlacements[hiddenSpan.start].push({\n            seg: resliceSeg(seg, hiddenSpan.start, hiddenSpan.end, cells),\n            isVisible: false,\n            isAbsolute: true,\n            absoluteTop: 0,\n            marginTop: 0,\n        });\n        for (let col = hiddenSpan.start; col < hiddenSpan.end; col += 1) {\n            moreCnts[col] += 1;\n            singleColPlacements[col].push({\n                seg: resliceSeg(seg, col, col + 1, cells),\n                isVisible: false,\n                isAbsolute: false,\n                absoluteTop: 0,\n                marginTop: 0,\n            });\n        }\n    }\n    // deal with leftover margins\n    for (let col = 0; col < cells.length; col += 1) {\n        moreMarginTops.push(leftoverMargins[col]);\n    }\n    return { singleColPlacements, multiColPlacements, moreCnts, moreMarginTops };\n}\n// rects ordered by top coord, then left\nfunction placeRects(allRects, segs, cells) {\n    let rectsByEachCol = groupRectsByEachCol(allRects, cells.length);\n    let singleColPlacements = [];\n    let multiColPlacements = [];\n    let leftoverMargins = [];\n    for (let col = 0; col < cells.length; col += 1) {\n        let rects = rectsByEachCol[col];\n        // compute all static segs in singlePlacements\n        let singlePlacements = [];\n        let currentHeight = 0;\n        let currentMarginTop = 0;\n        for (let rect of rects) {\n            let seg = segs[rect.index];\n            singlePlacements.push({\n                seg: resliceSeg(seg, col, col + 1, cells),\n                isVisible: true,\n                isAbsolute: false,\n                absoluteTop: rect.levelCoord,\n                marginTop: rect.levelCoord - currentHeight,\n            });\n            currentHeight = rect.levelCoord + rect.thickness;\n        }\n        // compute mixed static/absolute segs in multiPlacements\n        let multiPlacements = [];\n        currentHeight = 0;\n        currentMarginTop = 0;\n        for (let rect of rects) {\n            let seg = segs[rect.index];\n            let isAbsolute = rect.span.end - rect.span.start > 1; // multi-column?\n            let isFirstCol = rect.span.start === col;\n            currentMarginTop += rect.levelCoord - currentHeight; // amount of space since bottom of previous seg\n            currentHeight = rect.levelCoord + rect.thickness; // height will now be bottom of current seg\n            if (isAbsolute) {\n                currentMarginTop += rect.thickness;\n                if (isFirstCol) {\n                    multiPlacements.push({\n                        seg: resliceSeg(seg, rect.span.start, rect.span.end, cells),\n                        isVisible: true,\n                        isAbsolute: true,\n                        absoluteTop: rect.levelCoord,\n                        marginTop: 0,\n                    });\n                }\n            }\n            else if (isFirstCol) {\n                multiPlacements.push({\n                    seg: resliceSeg(seg, rect.span.start, rect.span.end, cells),\n                    isVisible: true,\n                    isAbsolute: false,\n                    absoluteTop: rect.levelCoord,\n                    marginTop: currentMarginTop, // claim the margin\n                });\n                currentMarginTop = 0;\n            }\n        }\n        singleColPlacements.push(singlePlacements);\n        multiColPlacements.push(multiPlacements);\n        leftoverMargins.push(currentMarginTop);\n    }\n    return { singleColPlacements, multiColPlacements, leftoverMargins };\n}\nfunction groupRectsByEachCol(rects, colCnt) {\n    let rectsByEachCol = [];\n    for (let col = 0; col < colCnt; col += 1) {\n        rectsByEachCol.push([]);\n    }\n    for (let rect of rects) {\n        for (let col = rect.span.start; col < rect.span.end; col += 1) {\n            rectsByEachCol[col].push(rect);\n        }\n    }\n    return rectsByEachCol;\n}\nfunction resliceSeg(seg, spanStart, spanEnd, cells) {\n    if (seg.firstCol === spanStart && seg.lastCol === spanEnd - 1) {\n        return seg;\n    }\n    let eventRange = seg.eventRange;\n    let origRange = eventRange.range;\n    let slicedRange = intersectRanges(origRange, {\n        start: cells[spanStart].date,\n        end: addDays(cells[spanEnd - 1].date, 1),\n    });\n    return Object.assign(Object.assign({}, seg), { firstCol: spanStart, lastCol: spanEnd - 1, eventRange: {\n            def: eventRange.def,\n            ui: Object.assign(Object.assign({}, eventRange.ui), { durationEditable: false }),\n            instance: eventRange.instance,\n            range: slicedRange,\n        }, isStart: seg.isStart && slicedRange.start.valueOf() === origRange.start.valueOf(), isEnd: seg.isEnd && slicedRange.end.valueOf() === origRange.end.valueOf() });\n}\nclass DayGridSegHierarchy extends SegHierarchy {\n    constructor() {\n        super(...arguments);\n        // config\n        this.hiddenConsumes = false;\n        // allows us to keep hidden entries in the hierarchy so they take up space\n        this.forceHidden = {};\n    }\n    addSegs(segInputs) {\n        const hiddenSegs = super.addSegs(segInputs);\n        const { entriesByLevel } = this;\n        const excludeHidden = (entry) => !this.forceHidden[buildEntryKey(entry)];\n        // remove the forced-hidden segs\n        for (let level = 0; level < entriesByLevel.length; level += 1) {\n            entriesByLevel[level] = entriesByLevel[level].filter(excludeHidden);\n        }\n        return hiddenSegs;\n    }\n    handleInvalidInsertion(insertion, entry, hiddenEntries) {\n        const { entriesByLevel, forceHidden } = this;\n        const { touchingEntry, touchingLevel, touchingLateral } = insertion;\n        if (this.hiddenConsumes && touchingEntry) {\n            const touchingEntryId = buildEntryKey(touchingEntry);\n            // if not already hidden\n            if (!forceHidden[touchingEntryId]) {\n                if (this.allowReslicing) {\n                    const placeholderEntry = Object.assign(Object.assign({}, touchingEntry), { span: intersectSpans(touchingEntry.span, entry.span) });\n                    const placeholderEntryId = buildEntryKey(placeholderEntry);\n                    forceHidden[placeholderEntryId] = true;\n                    entriesByLevel[touchingLevel][touchingLateral] = placeholderEntry; // replace touchingEntry with our placeholder\n                    this.splitEntry(touchingEntry, entry, hiddenEntries); // split up the touchingEntry, reinsert it\n                }\n                else {\n                    forceHidden[touchingEntryId] = true;\n                    hiddenEntries.push(touchingEntry);\n                }\n            }\n        }\n        return super.handleInvalidInsertion(insertion, entry, hiddenEntries);\n    }\n}\n\nclass TableRow extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.cellElRefs = new RefMap(); // the <td>\n        this.frameElRefs = new RefMap(); // the fc-daygrid-day-frame\n        this.fgElRefs = new RefMap(); // the fc-daygrid-day-events\n        this.segHarnessRefs = new RefMap(); // indexed by \"instanceId:firstCol\"\n        this.rootElRef = createRef();\n        this.state = {\n            framePositions: null,\n            maxContentHeight: null,\n            segHeights: {},\n        };\n        this.handleResize = (isForced) => {\n            if (isForced) {\n                this.updateSizing(true); // isExternal=true\n            }\n        };\n    }\n    render() {\n        let { props, state, context } = this;\n        let { options } = context;\n        let colCnt = props.cells.length;\n        let businessHoursByCol = splitSegsByFirstCol(props.businessHourSegs, colCnt);\n        let bgEventSegsByCol = splitSegsByFirstCol(props.bgEventSegs, colCnt);\n        let highlightSegsByCol = splitSegsByFirstCol(this.getHighlightSegs(), colCnt);\n        let mirrorSegsByCol = splitSegsByFirstCol(this.getMirrorSegs(), colCnt);\n        let { singleColPlacements, multiColPlacements, moreCnts, moreMarginTops } = computeFgSegPlacement(sortEventSegs(props.fgEventSegs, options.eventOrder), props.dayMaxEvents, props.dayMaxEventRows, options.eventOrderStrict, state.segHeights, state.maxContentHeight, props.cells);\n        let isForcedInvisible = // TODO: messy way to compute this\n         (props.eventDrag && props.eventDrag.affectedInstances) ||\n            (props.eventResize && props.eventResize.affectedInstances) ||\n            {};\n        return (createElement(\"tr\", { ref: this.rootElRef, role: \"row\" },\n            props.renderIntro && props.renderIntro(),\n            props.cells.map((cell, col) => {\n                let normalFgNodes = this.renderFgSegs(col, props.forPrint ? singleColPlacements[col] : multiColPlacements[col], props.todayRange, isForcedInvisible);\n                let mirrorFgNodes = this.renderFgSegs(col, buildMirrorPlacements(mirrorSegsByCol[col], multiColPlacements), props.todayRange, {}, Boolean(props.eventDrag), Boolean(props.eventResize), false);\n                return (createElement(TableCell, { key: cell.key, elRef: this.cellElRefs.createRef(cell.key), innerElRef: this.frameElRefs.createRef(cell.key) /* FF <td> problem, but okay to use for left/right. TODO: rename prop */, dateProfile: props.dateProfile, date: cell.date, showDayNumber: props.showDayNumbers, showWeekNumber: props.showWeekNumbers && col === 0, forceDayTop: props.showWeekNumbers /* even displaying weeknum for row, not necessarily day */, todayRange: props.todayRange, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, extraRenderProps: cell.extraRenderProps, extraDataAttrs: cell.extraDataAttrs, extraClassNames: cell.extraClassNames, extraDateSpan: cell.extraDateSpan, moreCnt: moreCnts[col], moreMarginTop: moreMarginTops[col], singlePlacements: singleColPlacements[col], fgContentElRef: this.fgElRefs.createRef(cell.key), fgContent: ( // Fragment scopes the keys\n                    createElement(Fragment, null,\n                        createElement(Fragment, null, normalFgNodes),\n                        createElement(Fragment, null, mirrorFgNodes))), bgContent: ( // Fragment scopes the keys\n                    createElement(Fragment, null,\n                        this.renderFillSegs(highlightSegsByCol[col], 'highlight'),\n                        this.renderFillSegs(businessHoursByCol[col], 'non-business'),\n                        this.renderFillSegs(bgEventSegsByCol[col], 'bg-event'))), minHeight: props.cellMinHeight }));\n            })));\n    }\n    componentDidMount() {\n        this.updateSizing(true);\n        this.context.addResizeHandler(this.handleResize);\n    }\n    componentDidUpdate(prevProps, prevState) {\n        let currentProps = this.props;\n        this.updateSizing(!isPropsEqual(prevProps, currentProps));\n    }\n    componentWillUnmount() {\n        this.context.removeResizeHandler(this.handleResize);\n    }\n    getHighlightSegs() {\n        let { props } = this;\n        if (props.eventDrag && props.eventDrag.segs.length) { // messy check\n            return props.eventDrag.segs;\n        }\n        if (props.eventResize && props.eventResize.segs.length) { // messy check\n            return props.eventResize.segs;\n        }\n        return props.dateSelectionSegs;\n    }\n    getMirrorSegs() {\n        let { props } = this;\n        if (props.eventResize && props.eventResize.segs.length) { // messy check\n            return props.eventResize.segs;\n        }\n        return [];\n    }\n    renderFgSegs(col, segPlacements, todayRange, isForcedInvisible, isDragging, isResizing, isDateSelecting) {\n        let { context } = this;\n        let { eventSelection } = this.props;\n        let { framePositions } = this.state;\n        let defaultDisplayEventEnd = this.props.cells.length === 1; // colCnt === 1\n        let isMirror = isDragging || isResizing || isDateSelecting;\n        let nodes = [];\n        if (framePositions) {\n            for (let placement of segPlacements) {\n                let { seg } = placement;\n                let { instanceId } = seg.eventRange.instance;\n                let isVisible = placement.isVisible && !isForcedInvisible[instanceId];\n                let isAbsolute = placement.isAbsolute;\n                let left = '';\n                let right = '';\n                if (isAbsolute) {\n                    if (context.isRtl) {\n                        right = 0;\n                        left = framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol];\n                    }\n                    else {\n                        left = 0;\n                        right = framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol];\n                    }\n                }\n                /*\n                known bug: events that are force to be list-item but span multiple days still take up space in later columns\n                todo: in print view, for multi-day events, don't display title within non-start/end segs\n                */\n                nodes.push(createElement(\"div\", { className: 'fc-daygrid-event-harness' + (isAbsolute ? ' fc-daygrid-event-harness-abs' : ''), key: generateSegKey(seg), ref: isMirror ? null : this.segHarnessRefs.createRef(generateSegUid(seg)), style: {\n                        visibility: isVisible ? '' : 'hidden',\n                        marginTop: isAbsolute ? '' : placement.marginTop,\n                        top: isAbsolute ? placement.absoluteTop : '',\n                        left,\n                        right,\n                    } }, hasListItemDisplay(seg) ? (createElement(TableListItemEvent, Object.assign({ seg: seg, isDragging: isDragging, isSelected: instanceId === eventSelection, defaultDisplayEventEnd: defaultDisplayEventEnd }, getSegMeta(seg, todayRange)))) : (createElement(TableBlockEvent, Object.assign({ seg: seg, isDragging: isDragging, isResizing: isResizing, isDateSelecting: isDateSelecting, isSelected: instanceId === eventSelection, defaultDisplayEventEnd: defaultDisplayEventEnd }, getSegMeta(seg, todayRange))))));\n            }\n        }\n        return nodes;\n    }\n    renderFillSegs(segs, fillType) {\n        let { isRtl } = this.context;\n        let { todayRange } = this.props;\n        let { framePositions } = this.state;\n        let nodes = [];\n        if (framePositions) {\n            for (let seg of segs) {\n                let leftRightCss = isRtl ? {\n                    right: 0,\n                    left: framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol],\n                } : {\n                    left: 0,\n                    right: framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol],\n                };\n                nodes.push(createElement(\"div\", { key: buildEventRangeKey(seg.eventRange), className: \"fc-daygrid-bg-harness\", style: leftRightCss }, fillType === 'bg-event' ?\n                    createElement(BgEvent, Object.assign({ seg: seg }, getSegMeta(seg, todayRange))) :\n                    renderFill(fillType)));\n            }\n        }\n        return createElement(Fragment, {}, ...nodes);\n    }\n    updateSizing(isExternalSizingChange) {\n        let { props, state, frameElRefs } = this;\n        if (!props.forPrint &&\n            props.clientWidth !== null // positioning ready?\n        ) {\n            if (isExternalSizingChange) {\n                let frameEls = props.cells.map((cell) => frameElRefs.currentMap[cell.key]);\n                if (frameEls.length) {\n                    let originEl = this.rootElRef.current;\n                    let newPositionCache = new PositionCache(originEl, frameEls, true, // isHorizontal\n                    false);\n                    if (!state.framePositions || !state.framePositions.similarTo(newPositionCache)) {\n                        this.setState({\n                            framePositions: new PositionCache(originEl, frameEls, true, // isHorizontal\n                            false),\n                        });\n                    }\n                }\n            }\n            const oldSegHeights = this.state.segHeights;\n            const newSegHeights = this.querySegHeights();\n            const limitByContentHeight = props.dayMaxEvents === true || props.dayMaxEventRows === true;\n            this.safeSetState({\n                // HACK to prevent oscillations of events being shown/hidden from max-event-rows\n                // Essentially, once you compute an element's height, never null-out.\n                // TODO: always display all events, as visibility:hidden?\n                segHeights: Object.assign(Object.assign({}, oldSegHeights), newSegHeights),\n                maxContentHeight: limitByContentHeight ? this.computeMaxContentHeight() : null,\n            });\n        }\n    }\n    querySegHeights() {\n        let segElMap = this.segHarnessRefs.currentMap;\n        let segHeights = {};\n        // get the max height amongst instance segs\n        for (let segUid in segElMap) {\n            let height = Math.round(segElMap[segUid].getBoundingClientRect().height);\n            segHeights[segUid] = Math.max(segHeights[segUid] || 0, height);\n        }\n        return segHeights;\n    }\n    computeMaxContentHeight() {\n        let firstKey = this.props.cells[0].key;\n        let cellEl = this.cellElRefs.currentMap[firstKey];\n        let fcContainerEl = this.fgElRefs.currentMap[firstKey];\n        return cellEl.getBoundingClientRect().bottom - fcContainerEl.getBoundingClientRect().top;\n    }\n    getCellEls() {\n        let elMap = this.cellElRefs.currentMap;\n        return this.props.cells.map((cell) => elMap[cell.key]);\n    }\n}\nTableRow.addStateEquality({\n    segHeights: isPropsEqual,\n});\nfunction buildMirrorPlacements(mirrorSegs, colPlacements) {\n    if (!mirrorSegs.length) {\n        return [];\n    }\n    let topsByInstanceId = buildAbsoluteTopHash(colPlacements); // TODO: cache this at first render?\n    return mirrorSegs.map((seg) => ({\n        seg,\n        isVisible: true,\n        isAbsolute: true,\n        absoluteTop: topsByInstanceId[seg.eventRange.instance.instanceId],\n        marginTop: 0,\n    }));\n}\nfunction buildAbsoluteTopHash(colPlacements) {\n    let topsByInstanceId = {};\n    for (let placements of colPlacements) {\n        for (let placement of placements) {\n            topsByInstanceId[placement.seg.eventRange.instance.instanceId] = placement.absoluteTop;\n        }\n    }\n    return topsByInstanceId;\n}\n\nclass TableRows extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.splitBusinessHourSegs = memoize(splitSegsByRow);\n        this.splitBgEventSegs = memoize(splitSegsByRow);\n        this.splitFgEventSegs = memoize(splitSegsByRow);\n        this.splitDateSelectionSegs = memoize(splitSegsByRow);\n        this.splitEventDrag = memoize(splitInteractionByRow);\n        this.splitEventResize = memoize(splitInteractionByRow);\n        this.rowRefs = new RefMap();\n    }\n    render() {\n        let { props, context } = this;\n        let rowCnt = props.cells.length;\n        let businessHourSegsByRow = this.splitBusinessHourSegs(props.businessHourSegs, rowCnt);\n        let bgEventSegsByRow = this.splitBgEventSegs(props.bgEventSegs, rowCnt);\n        let fgEventSegsByRow = this.splitFgEventSegs(props.fgEventSegs, rowCnt);\n        let dateSelectionSegsByRow = this.splitDateSelectionSegs(props.dateSelectionSegs, rowCnt);\n        let eventDragByRow = this.splitEventDrag(props.eventDrag, rowCnt);\n        let eventResizeByRow = this.splitEventResize(props.eventResize, rowCnt);\n        // for DayGrid view with many rows, force a min-height on cells so doesn't appear squished\n        // choose 7 because a month view will have max 6 rows\n        let cellMinHeight = (rowCnt >= 7 && props.clientWidth) ?\n            props.clientWidth / context.options.aspectRatio / 6 :\n            null;\n        return (createElement(NowTimer, { unit: \"day\" }, (nowDate, todayRange) => (createElement(Fragment, null, props.cells.map((cells, row) => (createElement(TableRow, { ref: this.rowRefs.createRef(row), key: cells.length\n                ? cells[0].date.toISOString() /* best? or put key on cell? or use diff formatter? */\n                : row // in case there are no cells (like when resource view is loading)\n            , showDayNumbers: rowCnt > 1, showWeekNumbers: props.showWeekNumbers, todayRange: todayRange, dateProfile: props.dateProfile, cells: cells, renderIntro: props.renderRowIntro, businessHourSegs: businessHourSegsByRow[row], eventSelection: props.eventSelection, bgEventSegs: bgEventSegsByRow[row].filter(isSegAllDay) /* hack */, fgEventSegs: fgEventSegsByRow[row], dateSelectionSegs: dateSelectionSegsByRow[row], eventDrag: eventDragByRow[row], eventResize: eventResizeByRow[row], dayMaxEvents: props.dayMaxEvents, dayMaxEventRows: props.dayMaxEventRows, clientWidth: props.clientWidth, clientHeight: props.clientHeight, cellMinHeight: cellMinHeight, forPrint: props.forPrint })))))));\n    }\n    componentDidMount() {\n        this.registerInteractiveComponent();\n    }\n    componentDidUpdate() {\n        // for if started with zero cells\n        this.registerInteractiveComponent();\n    }\n    registerInteractiveComponent() {\n        if (!this.rootEl) {\n            // HACK: need a daygrid wrapper parent to do positioning\n            // NOTE: a daygrid resource view w/o resources can have zero cells\n            const firstCellEl = this.rowRefs.currentMap[0].getCellEls()[0];\n            const rootEl = firstCellEl ? firstCellEl.closest('.fc-daygrid-body') : null;\n            if (rootEl) {\n                this.rootEl = rootEl;\n                this.context.registerInteractiveComponent(this, {\n                    el: rootEl,\n                    isHitComboAllowed: this.props.isHitComboAllowed,\n                });\n            }\n        }\n    }\n    componentWillUnmount() {\n        if (this.rootEl) {\n            this.context.unregisterInteractiveComponent(this);\n            this.rootEl = null;\n        }\n    }\n    // Hit System\n    // ----------------------------------------------------------------------------------------------------\n    prepareHits() {\n        this.rowPositions = new PositionCache(this.rootEl, this.rowRefs.collect().map((rowObj) => rowObj.getCellEls()[0]), // first cell el in each row. TODO: not optimal\n        false, true);\n        this.colPositions = new PositionCache(this.rootEl, this.rowRefs.currentMap[0].getCellEls(), // cell els in first row\n        true, // horizontal\n        false);\n    }\n    queryHit(positionLeft, positionTop) {\n        let { colPositions, rowPositions } = this;\n        let col = colPositions.leftToIndex(positionLeft);\n        let row = rowPositions.topToIndex(positionTop);\n        if (row != null && col != null) {\n            let cell = this.props.cells[row][col];\n            return {\n                dateProfile: this.props.dateProfile,\n                dateSpan: Object.assign({ range: this.getCellRange(row, col), allDay: true }, cell.extraDateSpan),\n                dayEl: this.getCellEl(row, col),\n                rect: {\n                    left: colPositions.lefts[col],\n                    right: colPositions.rights[col],\n                    top: rowPositions.tops[row],\n                    bottom: rowPositions.bottoms[row],\n                },\n                layer: 0,\n            };\n        }\n        return null;\n    }\n    getCellEl(row, col) {\n        return this.rowRefs.currentMap[row].getCellEls()[col]; // TODO: not optimal\n    }\n    getCellRange(row, col) {\n        let start = this.props.cells[row][col].date;\n        let end = addDays(start, 1);\n        return { start, end };\n    }\n}\nfunction isSegAllDay(seg) {\n    return seg.eventRange.def.allDay;\n}\n\nclass Table extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.elRef = createRef();\n        this.needsScrollReset = false;\n    }\n    render() {\n        let { props } = this;\n        let { dayMaxEventRows, dayMaxEvents, expandRows } = props;\n        let limitViaBalanced = dayMaxEvents === true || dayMaxEventRows === true;\n        // if rows can't expand to fill fixed height, can't do balanced-height event limit\n        // TODO: best place to normalize these options?\n        if (limitViaBalanced && !expandRows) {\n            limitViaBalanced = false;\n            dayMaxEventRows = null;\n            dayMaxEvents = null;\n        }\n        let classNames = [\n            'fc-daygrid-body',\n            limitViaBalanced ? 'fc-daygrid-body-balanced' : 'fc-daygrid-body-unbalanced',\n            expandRows ? '' : 'fc-daygrid-body-natural', // will height of one row depend on the others?\n        ];\n        return (createElement(\"div\", { ref: this.elRef, className: classNames.join(' '), style: {\n                // these props are important to give this wrapper correct dimensions for interactions\n                // TODO: if we set it here, can we avoid giving to inner tables?\n                width: props.clientWidth,\n                minWidth: props.tableMinWidth,\n            } },\n            createElement(\"table\", { role: \"presentation\", className: \"fc-scrollgrid-sync-table\", style: {\n                    width: props.clientWidth,\n                    minWidth: props.tableMinWidth,\n                    height: expandRows ? props.clientHeight : '',\n                } },\n                props.colGroupNode,\n                createElement(\"tbody\", { role: \"presentation\" },\n                    createElement(TableRows, { dateProfile: props.dateProfile, cells: props.cells, renderRowIntro: props.renderRowIntro, showWeekNumbers: props.showWeekNumbers, clientWidth: props.clientWidth, clientHeight: props.clientHeight, businessHourSegs: props.businessHourSegs, bgEventSegs: props.bgEventSegs, fgEventSegs: props.fgEventSegs, dateSelectionSegs: props.dateSelectionSegs, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, dayMaxEvents: dayMaxEvents, dayMaxEventRows: dayMaxEventRows, forPrint: props.forPrint, isHitComboAllowed: props.isHitComboAllowed })))));\n    }\n    componentDidMount() {\n        this.requestScrollReset();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.dateProfile !== this.props.dateProfile) {\n            this.requestScrollReset();\n        }\n        else {\n            this.flushScrollReset();\n        }\n    }\n    requestScrollReset() {\n        this.needsScrollReset = true;\n        this.flushScrollReset();\n    }\n    flushScrollReset() {\n        if (this.needsScrollReset &&\n            this.props.clientWidth // sizes computed?\n        ) {\n            const subjectEl = getScrollSubjectEl(this.elRef.current, this.props.dateProfile);\n            if (subjectEl) {\n                const originEl = subjectEl.closest('.fc-daygrid-body');\n                const scrollEl = originEl.closest('.fc-scroller');\n                const scrollTop = subjectEl.getBoundingClientRect().top -\n                    originEl.getBoundingClientRect().top;\n                scrollEl.scrollTop = scrollTop ? (scrollTop + 1) : 0; // overcome border\n            }\n            this.needsScrollReset = false;\n        }\n    }\n}\nfunction getScrollSubjectEl(containerEl, dateProfile) {\n    let el;\n    if (dateProfile.currentRangeUnit.match(/year|month/)) {\n        el = containerEl.querySelector(`[data-date=\"${formatIsoMonthStr(dateProfile.currentDate)}-01\"]`);\n        // even if view is month-based, first-of-month might be hidden...\n    }\n    if (!el) {\n        el = containerEl.querySelector(`[data-date=\"${formatDayString(dateProfile.currentDate)}\"]`);\n        // could still be hidden if an interior-view hidden day\n    }\n    return el;\n}\n\nclass DayTableSlicer extends Slicer {\n    constructor() {\n        super(...arguments);\n        this.forceDayIfListItem = true;\n    }\n    sliceRange(dateRange, dayTableModel) {\n        return dayTableModel.sliceRange(dateRange);\n    }\n}\n\nclass DayTable extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.slicer = new DayTableSlicer();\n        this.tableRef = createRef();\n    }\n    render() {\n        let { props, context } = this;\n        return (createElement(Table, Object.assign({ ref: this.tableRef }, this.slicer.sliceProps(props, props.dateProfile, props.nextDayThreshold, context, props.dayTableModel), { dateProfile: props.dateProfile, cells: props.dayTableModel.cells, colGroupNode: props.colGroupNode, tableMinWidth: props.tableMinWidth, renderRowIntro: props.renderRowIntro, dayMaxEvents: props.dayMaxEvents, dayMaxEventRows: props.dayMaxEventRows, showWeekNumbers: props.showWeekNumbers, expandRows: props.expandRows, headerAlignElRef: props.headerAlignElRef, clientWidth: props.clientWidth, clientHeight: props.clientHeight, forPrint: props.forPrint })));\n    }\n}\n\nclass TableDateProfileGenerator extends DateProfileGenerator {\n    // Computes the date range that will be rendered\n    buildRenderRange(currentRange, currentRangeUnit, isRangeAllDay) {\n        let renderRange = super.buildRenderRange(currentRange, currentRangeUnit, isRangeAllDay);\n        let { props } = this;\n        return buildDayTableRenderRange({\n            currentRange: renderRange,\n            snapToWeek: /^(year|month)$/.test(currentRangeUnit),\n            fixedWeekCount: props.fixedWeekCount,\n            dateEnv: props.dateEnv,\n        });\n    }\n}\nfunction buildDayTableRenderRange(props) {\n    let { dateEnv, currentRange } = props;\n    let { start, end } = currentRange;\n    let endOfWeek;\n    // year and month views should be aligned with weeks. this is already done for week\n    if (props.snapToWeek) {\n        start = dateEnv.startOfWeek(start);\n        // make end-of-week if not already\n        endOfWeek = dateEnv.startOfWeek(end);\n        if (endOfWeek.valueOf() !== end.valueOf()) {\n            end = addWeeks(endOfWeek, 1);\n        }\n    }\n    // ensure 6 weeks\n    if (props.fixedWeekCount) {\n        // TODO: instead of these date-math gymnastics (for multimonth view),\n        // compute dateprofiles of all months, then use start of first and end of last.\n        let lastMonthRenderStart = dateEnv.startOfWeek(dateEnv.startOfMonth(addDays(currentRange.end, -1)));\n        let rowCnt = Math.ceil(// could be partial weeks due to hiddenDays\n        diffWeeks(lastMonthRenderStart, end));\n        end = addWeeks(end, 6 - rowCnt);\n    }\n    return { start, end };\n}\n\n/* An abstract class for the daygrid views, as well as month view. Renders one or more rows of day cells.\n----------------------------------------------------------------------------------------------------------------------*/\n// It is a manager for a Table subcomponent, which does most of the heavy lifting.\n// It is responsible for managing width/height.\nclass TableView extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.headerElRef = createRef();\n    }\n    renderSimpleLayout(headerRowContent, bodyContent) {\n        let { props, context } = this;\n        let sections = [];\n        let stickyHeaderDates = getStickyHeaderDates(context.options);\n        if (headerRowContent) {\n            sections.push({\n                type: 'header',\n                key: 'header',\n                isSticky: stickyHeaderDates,\n                chunk: {\n                    elRef: this.headerElRef,\n                    tableClassName: 'fc-col-header',\n                    rowContent: headerRowContent,\n                },\n            });\n        }\n        sections.push({\n            type: 'body',\n            key: 'body',\n            liquid: true,\n            chunk: { content: bodyContent },\n        });\n        return (createElement(ViewContainer, { elClasses: ['fc-daygrid'], viewSpec: context.viewSpec },\n            createElement(SimpleScrollGrid, { liquid: !props.isHeightAuto && !props.forPrint, collapsibleWidth: props.forPrint, cols: [] /* TODO: make optional? */, sections: sections })));\n    }\n    renderHScrollLayout(headerRowContent, bodyContent, colCnt, dayMinWidth) {\n        let ScrollGrid = this.context.pluginHooks.scrollGridImpl;\n        if (!ScrollGrid) {\n            throw new Error('No ScrollGrid implementation');\n        }\n        let { props, context } = this;\n        let stickyHeaderDates = !props.forPrint && getStickyHeaderDates(context.options);\n        let stickyFooterScrollbar = !props.forPrint && getStickyFooterScrollbar(context.options);\n        let sections = [];\n        if (headerRowContent) {\n            sections.push({\n                type: 'header',\n                key: 'header',\n                isSticky: stickyHeaderDates,\n                chunks: [{\n                        key: 'main',\n                        elRef: this.headerElRef,\n                        tableClassName: 'fc-col-header',\n                        rowContent: headerRowContent,\n                    }],\n            });\n        }\n        sections.push({\n            type: 'body',\n            key: 'body',\n            liquid: true,\n            chunks: [{\n                    key: 'main',\n                    content: bodyContent,\n                }],\n        });\n        if (stickyFooterScrollbar) {\n            sections.push({\n                type: 'footer',\n                key: 'footer',\n                isSticky: true,\n                chunks: [{\n                        key: 'main',\n                        content: renderScrollShim,\n                    }],\n            });\n        }\n        return (createElement(ViewContainer, { elClasses: ['fc-daygrid'], viewSpec: context.viewSpec },\n            createElement(ScrollGrid, { liquid: !props.isHeightAuto && !props.forPrint, forPrint: props.forPrint, collapsibleWidth: props.forPrint, colGroups: [{ cols: [{ span: colCnt, minWidth: dayMinWidth }] }], sections: sections })));\n    }\n}\n\nclass DayTableView extends TableView {\n    constructor() {\n        super(...arguments);\n        this.buildDayTableModel = memoize(buildDayTableModel);\n        this.headerRef = createRef();\n        this.tableRef = createRef();\n        // can't override any lifecycle methods from parent\n    }\n    render() {\n        let { options, dateProfileGenerator } = this.context;\n        let { props } = this;\n        let dayTableModel = this.buildDayTableModel(props.dateProfile, dateProfileGenerator);\n        let headerContent = options.dayHeaders && (createElement(DayHeader, { ref: this.headerRef, dateProfile: props.dateProfile, dates: dayTableModel.headerDates, datesRepDistinctDays: dayTableModel.rowCnt === 1 }));\n        let bodyContent = (contentArg) => (createElement(DayTable, { ref: this.tableRef, dateProfile: props.dateProfile, dayTableModel: dayTableModel, businessHours: props.businessHours, dateSelection: props.dateSelection, eventStore: props.eventStore, eventUiBases: props.eventUiBases, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, nextDayThreshold: options.nextDayThreshold, colGroupNode: contentArg.tableColGroupNode, tableMinWidth: contentArg.tableMinWidth, dayMaxEvents: options.dayMaxEvents, dayMaxEventRows: options.dayMaxEventRows, showWeekNumbers: options.weekNumbers, expandRows: !props.isHeightAuto, headerAlignElRef: this.headerElRef, clientWidth: contentArg.clientWidth, clientHeight: contentArg.clientHeight, forPrint: props.forPrint }));\n        return options.dayMinWidth\n            ? this.renderHScrollLayout(headerContent, bodyContent, dayTableModel.colCnt, options.dayMinWidth)\n            : this.renderSimpleLayout(headerContent, bodyContent);\n    }\n}\nfunction buildDayTableModel(dateProfile, dateProfileGenerator) {\n    let daySeries = new DaySeriesModel(dateProfile.renderRange, dateProfileGenerator);\n    return new DayTableModel(daySeries, /year|month|week/.test(dateProfile.currentRangeUnit));\n}\n\nexport { DayTableView as DayGridView, DayTable, DayTableSlicer, Table, TableDateProfileGenerator, TableRows, TableView, buildDayTableModel, buildDayTableRenderRange };\n","import { createPlugin } from '@fullcalendar/core/index.js';\nimport { config, Emitter, elementClosest, applyStyle, whenTransitionDone, removeElement, ScrollController, ElementScrollController, computeInnerRect, WindowScrollController, ElementDragging, preventSelection, preventContextMenu, allowSelection, allowContextMenu, computeRect, getClippingParents, pointInsideRect, constrainPoint, intersectRects, getRectCenter, diffPoints, mapHash, rangeContainsRange, isDateSpansEqual, Interaction, interactionSettingsToStore, isDateSelectionValid, enableCursor, disableCursor, triggerDateSelect, compareNumbers, getElSeg, getRelevantEvents, EventImpl, createEmptyEventStore, applyMutationToEventStore, isInteractionValid, buildEventApis, interactionSettingsStore, startOfDay, diffDates, createDuration, getEventTargetViaRoot, identity, eventTupleToStore, parseDragMeta, elementMatches, refineEventDef, parseEventDef, getDefaultEventEnd, createEventInstance, BASE_OPTION_DEFAULTS } from '@fullcalendar/core/internal.js';\n\nconfig.touchMouseIgnoreWait = 500;\nlet ignoreMouseDepth = 0;\nlet listenerCnt = 0;\nlet isWindowTouchMoveCancelled = false;\n/*\nUses a \"pointer\" abstraction, which monitors UI events for both mouse and touch.\nTracks when the pointer \"drags\" on a certain element, meaning down+move+up.\n\nAlso, tracks if there was touch-scrolling.\nAlso, can prevent touch-scrolling from happening.\nAlso, can fire pointermove events when scrolling happens underneath, even when no real pointer movement.\n\nemits:\n- pointerdown\n- pointermove\n- pointerup\n*/\nclass PointerDragging {\n    constructor(containerEl) {\n        this.subjectEl = null;\n        // options that can be directly assigned by caller\n        this.selector = ''; // will cause subjectEl in all emitted events to be this element\n        this.handleSelector = '';\n        this.shouldIgnoreMove = false;\n        this.shouldWatchScroll = true; // for simulating pointermove on scroll\n        // internal states\n        this.isDragging = false;\n        this.isTouchDragging = false;\n        this.wasTouchScroll = false;\n        // Mouse\n        // ----------------------------------------------------------------------------------------------------\n        this.handleMouseDown = (ev) => {\n            if (!this.shouldIgnoreMouse() &&\n                isPrimaryMouseButton(ev) &&\n                this.tryStart(ev)) {\n                let pev = this.createEventFromMouse(ev, true);\n                this.emitter.trigger('pointerdown', pev);\n                this.initScrollWatch(pev);\n                if (!this.shouldIgnoreMove) {\n                    document.addEventListener('mousemove', this.handleMouseMove);\n                }\n                document.addEventListener('mouseup', this.handleMouseUp);\n            }\n        };\n        this.handleMouseMove = (ev) => {\n            let pev = this.createEventFromMouse(ev);\n            this.recordCoords(pev);\n            this.emitter.trigger('pointermove', pev);\n        };\n        this.handleMouseUp = (ev) => {\n            document.removeEventListener('mousemove', this.handleMouseMove);\n            document.removeEventListener('mouseup', this.handleMouseUp);\n            this.emitter.trigger('pointerup', this.createEventFromMouse(ev));\n            this.cleanup(); // call last so that pointerup has access to props\n        };\n        // Touch\n        // ----------------------------------------------------------------------------------------------------\n        this.handleTouchStart = (ev) => {\n            if (this.tryStart(ev)) {\n                this.isTouchDragging = true;\n                let pev = this.createEventFromTouch(ev, true);\n                this.emitter.trigger('pointerdown', pev);\n                this.initScrollWatch(pev);\n                // unlike mouse, need to attach to target, not document\n                // https://stackoverflow.com/a/45760014\n                let targetEl = ev.target;\n                if (!this.shouldIgnoreMove) {\n                    targetEl.addEventListener('touchmove', this.handleTouchMove);\n                }\n                targetEl.addEventListener('touchend', this.handleTouchEnd);\n                targetEl.addEventListener('touchcancel', this.handleTouchEnd); // treat it as a touch end\n                // attach a handler to get called when ANY scroll action happens on the page.\n                // this was impossible to do with normal on/off because 'scroll' doesn't bubble.\n                // http://stackoverflow.com/a/32954565/96342\n                window.addEventListener('scroll', this.handleTouchScroll, true);\n            }\n        };\n        this.handleTouchMove = (ev) => {\n            let pev = this.createEventFromTouch(ev);\n            this.recordCoords(pev);\n            this.emitter.trigger('pointermove', pev);\n        };\n        this.handleTouchEnd = (ev) => {\n            if (this.isDragging) { // done to guard against touchend followed by touchcancel\n                let targetEl = ev.target;\n                targetEl.removeEventListener('touchmove', this.handleTouchMove);\n                targetEl.removeEventListener('touchend', this.handleTouchEnd);\n                targetEl.removeEventListener('touchcancel', this.handleTouchEnd);\n                window.removeEventListener('scroll', this.handleTouchScroll, true); // useCaptured=true\n                this.emitter.trigger('pointerup', this.createEventFromTouch(ev));\n                this.cleanup(); // call last so that pointerup has access to props\n                this.isTouchDragging = false;\n                startIgnoringMouse();\n            }\n        };\n        this.handleTouchScroll = () => {\n            this.wasTouchScroll = true;\n        };\n        this.handleScroll = (ev) => {\n            if (!this.shouldIgnoreMove) {\n                let pageX = (window.pageXOffset - this.prevScrollX) + this.prevPageX;\n                let pageY = (window.pageYOffset - this.prevScrollY) + this.prevPageY;\n                this.emitter.trigger('pointermove', {\n                    origEvent: ev,\n                    isTouch: this.isTouchDragging,\n                    subjectEl: this.subjectEl,\n                    pageX,\n                    pageY,\n                    deltaX: pageX - this.origPageX,\n                    deltaY: pageY - this.origPageY,\n                });\n            }\n        };\n        this.containerEl = containerEl;\n        this.emitter = new Emitter();\n        containerEl.addEventListener('mousedown', this.handleMouseDown);\n        containerEl.addEventListener('touchstart', this.handleTouchStart, { passive: true });\n        listenerCreated();\n    }\n    destroy() {\n        this.containerEl.removeEventListener('mousedown', this.handleMouseDown);\n        this.containerEl.removeEventListener('touchstart', this.handleTouchStart, { passive: true });\n        listenerDestroyed();\n    }\n    tryStart(ev) {\n        let subjectEl = this.querySubjectEl(ev);\n        let downEl = ev.target;\n        if (subjectEl &&\n            (!this.handleSelector || elementClosest(downEl, this.handleSelector))) {\n            this.subjectEl = subjectEl;\n            this.isDragging = true; // do this first so cancelTouchScroll will work\n            this.wasTouchScroll = false;\n            return true;\n        }\n        return false;\n    }\n    cleanup() {\n        isWindowTouchMoveCancelled = false;\n        this.isDragging = false;\n        this.subjectEl = null;\n        // keep wasTouchScroll around for later access\n        this.destroyScrollWatch();\n    }\n    querySubjectEl(ev) {\n        if (this.selector) {\n            return elementClosest(ev.target, this.selector);\n        }\n        return this.containerEl;\n    }\n    shouldIgnoreMouse() {\n        return ignoreMouseDepth || this.isTouchDragging;\n    }\n    // can be called by user of this class, to cancel touch-based scrolling for the current drag\n    cancelTouchScroll() {\n        if (this.isDragging) {\n            isWindowTouchMoveCancelled = true;\n        }\n    }\n    // Scrolling that simulates pointermoves\n    // ----------------------------------------------------------------------------------------------------\n    initScrollWatch(ev) {\n        if (this.shouldWatchScroll) {\n            this.recordCoords(ev);\n            window.addEventListener('scroll', this.handleScroll, true); // useCapture=true\n        }\n    }\n    recordCoords(ev) {\n        if (this.shouldWatchScroll) {\n            this.prevPageX = ev.pageX;\n            this.prevPageY = ev.pageY;\n            this.prevScrollX = window.pageXOffset;\n            this.prevScrollY = window.pageYOffset;\n        }\n    }\n    destroyScrollWatch() {\n        if (this.shouldWatchScroll) {\n            window.removeEventListener('scroll', this.handleScroll, true); // useCaptured=true\n        }\n    }\n    // Event Normalization\n    // ----------------------------------------------------------------------------------------------------\n    createEventFromMouse(ev, isFirst) {\n        let deltaX = 0;\n        let deltaY = 0;\n        // TODO: repeat code\n        if (isFirst) {\n            this.origPageX = ev.pageX;\n            this.origPageY = ev.pageY;\n        }\n        else {\n            deltaX = ev.pageX - this.origPageX;\n            deltaY = ev.pageY - this.origPageY;\n        }\n        return {\n            origEvent: ev,\n            isTouch: false,\n            subjectEl: this.subjectEl,\n            pageX: ev.pageX,\n            pageY: ev.pageY,\n            deltaX,\n            deltaY,\n        };\n    }\n    createEventFromTouch(ev, isFirst) {\n        let touches = ev.touches;\n        let pageX;\n        let pageY;\n        let deltaX = 0;\n        let deltaY = 0;\n        // if touch coords available, prefer,\n        // because FF would give bad ev.pageX ev.pageY\n        if (touches && touches.length) {\n            pageX = touches[0].pageX;\n            pageY = touches[0].pageY;\n        }\n        else {\n            pageX = ev.pageX;\n            pageY = ev.pageY;\n        }\n        // TODO: repeat code\n        if (isFirst) {\n            this.origPageX = pageX;\n            this.origPageY = pageY;\n        }\n        else {\n            deltaX = pageX - this.origPageX;\n            deltaY = pageY - this.origPageY;\n        }\n        return {\n            origEvent: ev,\n            isTouch: true,\n            subjectEl: this.subjectEl,\n            pageX,\n            pageY,\n            deltaX,\n            deltaY,\n        };\n    }\n}\n// Returns a boolean whether this was a left mouse click and no ctrl key (which means right click on Mac)\nfunction isPrimaryMouseButton(ev) {\n    return ev.button === 0 && !ev.ctrlKey;\n}\n// Ignoring fake mouse events generated by touch\n// ----------------------------------------------------------------------------------------------------\nfunction startIgnoringMouse() {\n    ignoreMouseDepth += 1;\n    setTimeout(() => {\n        ignoreMouseDepth -= 1;\n    }, config.touchMouseIgnoreWait);\n}\n// We want to attach touchmove as early as possible for Safari\n// ----------------------------------------------------------------------------------------------------\nfunction listenerCreated() {\n    listenerCnt += 1;\n    if (listenerCnt === 1) {\n        window.addEventListener('touchmove', onWindowTouchMove, { passive: false });\n    }\n}\nfunction listenerDestroyed() {\n    listenerCnt -= 1;\n    if (!listenerCnt) {\n        window.removeEventListener('touchmove', onWindowTouchMove, { passive: false });\n    }\n}\nfunction onWindowTouchMove(ev) {\n    if (isWindowTouchMoveCancelled) {\n        ev.preventDefault();\n    }\n}\n\n/*\nAn effect in which an element follows the movement of a pointer across the screen.\nThe moving element is a clone of some other element.\nMust call start + handleMove + stop.\n*/\nclass ElementMirror {\n    constructor() {\n        this.isVisible = false; // must be explicitly enabled\n        this.sourceEl = null;\n        this.mirrorEl = null;\n        this.sourceElRect = null; // screen coords relative to viewport\n        // options that can be set directly by caller\n        this.parentNode = document.body; // HIGHLY SUGGESTED to set this to sidestep ShadowDOM issues\n        this.zIndex = 9999;\n        this.revertDuration = 0;\n    }\n    start(sourceEl, pageX, pageY) {\n        this.sourceEl = sourceEl;\n        this.sourceElRect = this.sourceEl.getBoundingClientRect();\n        this.origScreenX = pageX - window.pageXOffset;\n        this.origScreenY = pageY - window.pageYOffset;\n        this.deltaX = 0;\n        this.deltaY = 0;\n        this.updateElPosition();\n    }\n    handleMove(pageX, pageY) {\n        this.deltaX = (pageX - window.pageXOffset) - this.origScreenX;\n        this.deltaY = (pageY - window.pageYOffset) - this.origScreenY;\n        this.updateElPosition();\n    }\n    // can be called before start\n    setIsVisible(bool) {\n        if (bool) {\n            if (!this.isVisible) {\n                if (this.mirrorEl) {\n                    this.mirrorEl.style.display = '';\n                }\n                this.isVisible = bool; // needs to happen before updateElPosition\n                this.updateElPosition(); // because was not updating the position while invisible\n            }\n        }\n        else if (this.isVisible) {\n            if (this.mirrorEl) {\n                this.mirrorEl.style.display = 'none';\n            }\n            this.isVisible = bool;\n        }\n    }\n    // always async\n    stop(needsRevertAnimation, callback) {\n        let done = () => {\n            this.cleanup();\n            callback();\n        };\n        if (needsRevertAnimation &&\n            this.mirrorEl &&\n            this.isVisible &&\n            this.revertDuration && // if 0, transition won't work\n            (this.deltaX || this.deltaY) // if same coords, transition won't work\n        ) {\n            this.doRevertAnimation(done, this.revertDuration);\n        }\n        else {\n            setTimeout(done, 0);\n        }\n    }\n    doRevertAnimation(callback, revertDuration) {\n        let mirrorEl = this.mirrorEl;\n        let finalSourceElRect = this.sourceEl.getBoundingClientRect(); // because autoscrolling might have happened\n        mirrorEl.style.transition =\n            'top ' + revertDuration + 'ms,' +\n                'left ' + revertDuration + 'ms';\n        applyStyle(mirrorEl, {\n            left: finalSourceElRect.left,\n            top: finalSourceElRect.top,\n        });\n        whenTransitionDone(mirrorEl, () => {\n            mirrorEl.style.transition = '';\n            callback();\n        });\n    }\n    cleanup() {\n        if (this.mirrorEl) {\n            removeElement(this.mirrorEl);\n            this.mirrorEl = null;\n        }\n        this.sourceEl = null;\n    }\n    updateElPosition() {\n        if (this.sourceEl && this.isVisible) {\n            applyStyle(this.getMirrorEl(), {\n                left: this.sourceElRect.left + this.deltaX,\n                top: this.sourceElRect.top + this.deltaY,\n            });\n        }\n    }\n    getMirrorEl() {\n        let sourceElRect = this.sourceElRect;\n        let mirrorEl = this.mirrorEl;\n        if (!mirrorEl) {\n            mirrorEl = this.mirrorEl = this.sourceEl.cloneNode(true); // cloneChildren=true\n            // we don't want long taps or any mouse interaction causing selection/menus.\n            // would use preventSelection(), but that prevents selectstart, causing problems.\n            mirrorEl.style.userSelect = 'none';\n            mirrorEl.style.webkitUserSelect = 'none';\n            mirrorEl.classList.add('fc-event-dragging');\n            applyStyle(mirrorEl, {\n                position: 'fixed',\n                zIndex: this.zIndex,\n                visibility: '',\n                boxSizing: 'border-box',\n                width: sourceElRect.right - sourceElRect.left,\n                height: sourceElRect.bottom - sourceElRect.top,\n                right: 'auto',\n                bottom: 'auto',\n                margin: 0,\n            });\n            this.parentNode.appendChild(mirrorEl);\n        }\n        return mirrorEl;\n    }\n}\n\n/*\nIs a cache for a given element's scroll information (all the info that ScrollController stores)\nin addition the \"client rectangle\" of the element.. the area within the scrollbars.\n\nThe cache can be in one of two modes:\n- doesListening:false - ignores when the container is scrolled by someone else\n- doesListening:true - watch for scrolling and update the cache\n*/\nclass ScrollGeomCache extends ScrollController {\n    constructor(scrollController, doesListening) {\n        super();\n        this.handleScroll = () => {\n            this.scrollTop = this.scrollController.getScrollTop();\n            this.scrollLeft = this.scrollController.getScrollLeft();\n            this.handleScrollChange();\n        };\n        this.scrollController = scrollController;\n        this.doesListening = doesListening;\n        this.scrollTop = this.origScrollTop = scrollController.getScrollTop();\n        this.scrollLeft = this.origScrollLeft = scrollController.getScrollLeft();\n        this.scrollWidth = scrollController.getScrollWidth();\n        this.scrollHeight = scrollController.getScrollHeight();\n        this.clientWidth = scrollController.getClientWidth();\n        this.clientHeight = scrollController.getClientHeight();\n        this.clientRect = this.computeClientRect(); // do last in case it needs cached values\n        if (this.doesListening) {\n            this.getEventTarget().addEventListener('scroll', this.handleScroll);\n        }\n    }\n    destroy() {\n        if (this.doesListening) {\n            this.getEventTarget().removeEventListener('scroll', this.handleScroll);\n        }\n    }\n    getScrollTop() {\n        return this.scrollTop;\n    }\n    getScrollLeft() {\n        return this.scrollLeft;\n    }\n    setScrollTop(top) {\n        this.scrollController.setScrollTop(top);\n        if (!this.doesListening) {\n            // we are not relying on the element to normalize out-of-bounds scroll values\n            // so we need to sanitize ourselves\n            this.scrollTop = Math.max(Math.min(top, this.getMaxScrollTop()), 0);\n            this.handleScrollChange();\n        }\n    }\n    setScrollLeft(top) {\n        this.scrollController.setScrollLeft(top);\n        if (!this.doesListening) {\n            // we are not relying on the element to normalize out-of-bounds scroll values\n            // so we need to sanitize ourselves\n            this.scrollLeft = Math.max(Math.min(top, this.getMaxScrollLeft()), 0);\n            this.handleScrollChange();\n        }\n    }\n    getClientWidth() {\n        return this.clientWidth;\n    }\n    getClientHeight() {\n        return this.clientHeight;\n    }\n    getScrollWidth() {\n        return this.scrollWidth;\n    }\n    getScrollHeight() {\n        return this.scrollHeight;\n    }\n    handleScrollChange() {\n    }\n}\n\nclass ElementScrollGeomCache extends ScrollGeomCache {\n    constructor(el, doesListening) {\n        super(new ElementScrollController(el), doesListening);\n    }\n    getEventTarget() {\n        return this.scrollController.el;\n    }\n    computeClientRect() {\n        return computeInnerRect(this.scrollController.el);\n    }\n}\n\nclass WindowScrollGeomCache extends ScrollGeomCache {\n    constructor(doesListening) {\n        super(new WindowScrollController(), doesListening);\n    }\n    getEventTarget() {\n        return window;\n    }\n    computeClientRect() {\n        return {\n            left: this.scrollLeft,\n            right: this.scrollLeft + this.clientWidth,\n            top: this.scrollTop,\n            bottom: this.scrollTop + this.clientHeight,\n        };\n    }\n    // the window is the only scroll object that changes it's rectangle relative\n    // to the document's topleft as it scrolls\n    handleScrollChange() {\n        this.clientRect = this.computeClientRect();\n    }\n}\n\n// If available we are using native \"performance\" API instead of \"Date\"\n// Read more about it on MDN:\n// https://developer.mozilla.org/en-US/docs/Web/API/Performance\nconst getTime = typeof performance === 'function' ? performance.now : Date.now;\n/*\nFor a pointer interaction, automatically scrolls certain scroll containers when the pointer\napproaches the edge.\n\nThe caller must call start + handleMove + stop.\n*/\nclass AutoScroller {\n    constructor() {\n        // options that can be set by caller\n        this.isEnabled = true;\n        this.scrollQuery = [window, '.fc-scroller'];\n        this.edgeThreshold = 50; // pixels\n        this.maxVelocity = 300; // pixels per second\n        // internal state\n        this.pointerScreenX = null;\n        this.pointerScreenY = null;\n        this.isAnimating = false;\n        this.scrollCaches = null;\n        // protect against the initial pointerdown being too close to an edge and starting the scroll\n        this.everMovedUp = false;\n        this.everMovedDown = false;\n        this.everMovedLeft = false;\n        this.everMovedRight = false;\n        this.animate = () => {\n            if (this.isAnimating) { // wasn't cancelled between animation calls\n                let edge = this.computeBestEdge(this.pointerScreenX + window.pageXOffset, this.pointerScreenY + window.pageYOffset);\n                if (edge) {\n                    let now = getTime();\n                    this.handleSide(edge, (now - this.msSinceRequest) / 1000);\n                    this.requestAnimation(now);\n                }\n                else {\n                    this.isAnimating = false; // will stop animation\n                }\n            }\n        };\n    }\n    start(pageX, pageY, scrollStartEl) {\n        if (this.isEnabled) {\n            this.scrollCaches = this.buildCaches(scrollStartEl);\n            this.pointerScreenX = null;\n            this.pointerScreenY = null;\n            this.everMovedUp = false;\n            this.everMovedDown = false;\n            this.everMovedLeft = false;\n            this.everMovedRight = false;\n            this.handleMove(pageX, pageY);\n        }\n    }\n    handleMove(pageX, pageY) {\n        if (this.isEnabled) {\n            let pointerScreenX = pageX - window.pageXOffset;\n            let pointerScreenY = pageY - window.pageYOffset;\n            let yDelta = this.pointerScreenY === null ? 0 : pointerScreenY - this.pointerScreenY;\n            let xDelta = this.pointerScreenX === null ? 0 : pointerScreenX - this.pointerScreenX;\n            if (yDelta < 0) {\n                this.everMovedUp = true;\n            }\n            else if (yDelta > 0) {\n                this.everMovedDown = true;\n            }\n            if (xDelta < 0) {\n                this.everMovedLeft = true;\n            }\n            else if (xDelta > 0) {\n                this.everMovedRight = true;\n            }\n            this.pointerScreenX = pointerScreenX;\n            this.pointerScreenY = pointerScreenY;\n            if (!this.isAnimating) {\n                this.isAnimating = true;\n                this.requestAnimation(getTime());\n            }\n        }\n    }\n    stop() {\n        if (this.isEnabled) {\n            this.isAnimating = false; // will stop animation\n            for (let scrollCache of this.scrollCaches) {\n                scrollCache.destroy();\n            }\n            this.scrollCaches = null;\n        }\n    }\n    requestAnimation(now) {\n        this.msSinceRequest = now;\n        requestAnimationFrame(this.animate);\n    }\n    handleSide(edge, seconds) {\n        let { scrollCache } = edge;\n        let { edgeThreshold } = this;\n        let invDistance = edgeThreshold - edge.distance;\n        let velocity = // the closer to the edge, the faster we scroll\n         ((invDistance * invDistance) / (edgeThreshold * edgeThreshold)) * // quadratic\n            this.maxVelocity * seconds;\n        let sign = 1;\n        switch (edge.name) {\n            case 'left':\n                sign = -1;\n            // falls through\n            case 'right':\n                scrollCache.setScrollLeft(scrollCache.getScrollLeft() + velocity * sign);\n                break;\n            case 'top':\n                sign = -1;\n            // falls through\n            case 'bottom':\n                scrollCache.setScrollTop(scrollCache.getScrollTop() + velocity * sign);\n                break;\n        }\n    }\n    // left/top are relative to document topleft\n    computeBestEdge(left, top) {\n        let { edgeThreshold } = this;\n        let bestSide = null;\n        let scrollCaches = this.scrollCaches || [];\n        for (let scrollCache of scrollCaches) {\n            let rect = scrollCache.clientRect;\n            let leftDist = left - rect.left;\n            let rightDist = rect.right - left;\n            let topDist = top - rect.top;\n            let bottomDist = rect.bottom - top;\n            // completely within the rect?\n            if (leftDist >= 0 && rightDist >= 0 && topDist >= 0 && bottomDist >= 0) {\n                if (topDist <= edgeThreshold && this.everMovedUp && scrollCache.canScrollUp() &&\n                    (!bestSide || bestSide.distance > topDist)) {\n                    bestSide = { scrollCache, name: 'top', distance: topDist };\n                }\n                if (bottomDist <= edgeThreshold && this.everMovedDown && scrollCache.canScrollDown() &&\n                    (!bestSide || bestSide.distance > bottomDist)) {\n                    bestSide = { scrollCache, name: 'bottom', distance: bottomDist };\n                }\n                if (leftDist <= edgeThreshold && this.everMovedLeft && scrollCache.canScrollLeft() &&\n                    (!bestSide || bestSide.distance > leftDist)) {\n                    bestSide = { scrollCache, name: 'left', distance: leftDist };\n                }\n                if (rightDist <= edgeThreshold && this.everMovedRight && scrollCache.canScrollRight() &&\n                    (!bestSide || bestSide.distance > rightDist)) {\n                    bestSide = { scrollCache, name: 'right', distance: rightDist };\n                }\n            }\n        }\n        return bestSide;\n    }\n    buildCaches(scrollStartEl) {\n        return this.queryScrollEls(scrollStartEl).map((el) => {\n            if (el === window) {\n                return new WindowScrollGeomCache(false); // false = don't listen to user-generated scrolls\n            }\n            return new ElementScrollGeomCache(el, false); // false = don't listen to user-generated scrolls\n        });\n    }\n    queryScrollEls(scrollStartEl) {\n        let els = [];\n        for (let query of this.scrollQuery) {\n            if (typeof query === 'object') {\n                els.push(query);\n            }\n            else {\n                els.push(...Array.prototype.slice.call(scrollStartEl.getRootNode().querySelectorAll(query)));\n            }\n        }\n        return els;\n    }\n}\n\n/*\nMonitors dragging on an element. Has a number of high-level features:\n- minimum distance required before dragging\n- minimum wait time (\"delay\") before dragging\n- a mirror element that follows the pointer\n*/\nclass FeaturefulElementDragging extends ElementDragging {\n    constructor(containerEl, selector) {\n        super(containerEl);\n        this.containerEl = containerEl;\n        // options that can be directly set by caller\n        // the caller can also set the PointerDragging's options as well\n        this.delay = null;\n        this.minDistance = 0;\n        this.touchScrollAllowed = true; // prevents drag from starting and blocks scrolling during drag\n        this.mirrorNeedsRevert = false;\n        this.isInteracting = false; // is the user validly moving the pointer? lasts until pointerup\n        this.isDragging = false; // is it INTENTFULLY dragging? lasts until after revert animation\n        this.isDelayEnded = false;\n        this.isDistanceSurpassed = false;\n        this.delayTimeoutId = null;\n        this.onPointerDown = (ev) => {\n            if (!this.isDragging) { // so new drag doesn't happen while revert animation is going\n                this.isInteracting = true;\n                this.isDelayEnded = false;\n                this.isDistanceSurpassed = false;\n                preventSelection(document.body);\n                preventContextMenu(document.body);\n                // prevent links from being visited if there's an eventual drag.\n                // also prevents selection in older browsers (maybe?).\n                // not necessary for touch, besides, browser would complain about passiveness.\n                if (!ev.isTouch) {\n                    ev.origEvent.preventDefault();\n                }\n                this.emitter.trigger('pointerdown', ev);\n                if (this.isInteracting && // not destroyed via pointerdown handler\n                    !this.pointer.shouldIgnoreMove) {\n                    // actions related to initiating dragstart+dragmove+dragend...\n                    this.mirror.setIsVisible(false); // reset. caller must set-visible\n                    this.mirror.start(ev.subjectEl, ev.pageX, ev.pageY); // must happen on first pointer down\n                    this.startDelay(ev);\n                    if (!this.minDistance) {\n                        this.handleDistanceSurpassed(ev);\n                    }\n                }\n            }\n        };\n        this.onPointerMove = (ev) => {\n            if (this.isInteracting) {\n                this.emitter.trigger('pointermove', ev);\n                if (!this.isDistanceSurpassed) {\n                    let minDistance = this.minDistance;\n                    let distanceSq; // current distance from the origin, squared\n                    let { deltaX, deltaY } = ev;\n                    distanceSq = deltaX * deltaX + deltaY * deltaY;\n                    if (distanceSq >= minDistance * minDistance) { // use pythagorean theorem\n                        this.handleDistanceSurpassed(ev);\n                    }\n                }\n                if (this.isDragging) {\n                    // a real pointer move? (not one simulated by scrolling)\n                    if (ev.origEvent.type !== 'scroll') {\n                        this.mirror.handleMove(ev.pageX, ev.pageY);\n                        this.autoScroller.handleMove(ev.pageX, ev.pageY);\n                    }\n                    this.emitter.trigger('dragmove', ev);\n                }\n            }\n        };\n        this.onPointerUp = (ev) => {\n            if (this.isInteracting) {\n                this.isInteracting = false;\n                allowSelection(document.body);\n                allowContextMenu(document.body);\n                this.emitter.trigger('pointerup', ev); // can potentially set mirrorNeedsRevert\n                if (this.isDragging) {\n                    this.autoScroller.stop();\n                    this.tryStopDrag(ev); // which will stop the mirror\n                }\n                if (this.delayTimeoutId) {\n                    clearTimeout(this.delayTimeoutId);\n                    this.delayTimeoutId = null;\n                }\n            }\n        };\n        let pointer = this.pointer = new PointerDragging(containerEl);\n        pointer.emitter.on('pointerdown', this.onPointerDown);\n        pointer.emitter.on('pointermove', this.onPointerMove);\n        pointer.emitter.on('pointerup', this.onPointerUp);\n        if (selector) {\n            pointer.selector = selector;\n        }\n        this.mirror = new ElementMirror();\n        this.autoScroller = new AutoScroller();\n    }\n    destroy() {\n        this.pointer.destroy();\n        // HACK: simulate a pointer-up to end the current drag\n        // TODO: fire 'dragend' directly and stop interaction. discourage use of pointerup event (b/c might not fire)\n        this.onPointerUp({});\n    }\n    startDelay(ev) {\n        if (typeof this.delay === 'number') {\n            this.delayTimeoutId = setTimeout(() => {\n                this.delayTimeoutId = null;\n                this.handleDelayEnd(ev);\n            }, this.delay); // not assignable to number!\n        }\n        else {\n            this.handleDelayEnd(ev);\n        }\n    }\n    handleDelayEnd(ev) {\n        this.isDelayEnded = true;\n        this.tryStartDrag(ev);\n    }\n    handleDistanceSurpassed(ev) {\n        this.isDistanceSurpassed = true;\n        this.tryStartDrag(ev);\n    }\n    tryStartDrag(ev) {\n        if (this.isDelayEnded && this.isDistanceSurpassed) {\n            if (!this.pointer.wasTouchScroll || this.touchScrollAllowed) {\n                this.isDragging = true;\n                this.mirrorNeedsRevert = false;\n                this.autoScroller.start(ev.pageX, ev.pageY, this.containerEl);\n                this.emitter.trigger('dragstart', ev);\n                if (this.touchScrollAllowed === false) {\n                    this.pointer.cancelTouchScroll();\n                }\n            }\n        }\n    }\n    tryStopDrag(ev) {\n        // .stop() is ALWAYS asynchronous, which we NEED because we want all pointerup events\n        // that come from the document to fire beforehand. much more convenient this way.\n        this.mirror.stop(this.mirrorNeedsRevert, this.stopDrag.bind(this, ev));\n    }\n    stopDrag(ev) {\n        this.isDragging = false;\n        this.emitter.trigger('dragend', ev);\n    }\n    // fill in the implementations...\n    setIgnoreMove(bool) {\n        this.pointer.shouldIgnoreMove = bool;\n    }\n    setMirrorIsVisible(bool) {\n        this.mirror.setIsVisible(bool);\n    }\n    setMirrorNeedsRevert(bool) {\n        this.mirrorNeedsRevert = bool;\n    }\n    setAutoScrollEnabled(bool) {\n        this.autoScroller.isEnabled = bool;\n    }\n}\n\n/*\nWhen this class is instantiated, it records the offset of an element (relative to the document topleft),\nand continues to monitor scrolling, updating the cached coordinates if it needs to.\nDoes not access the DOM after instantiation, so highly performant.\n\nAlso keeps track of all scrolling/overflow:hidden containers that are parents of the given element\nand an determine if a given point is inside the combined clipping rectangle.\n*/\nclass OffsetTracker {\n    constructor(el) {\n        this.origRect = computeRect(el);\n        // will work fine for divs that have overflow:hidden\n        this.scrollCaches = getClippingParents(el).map((scrollEl) => new ElementScrollGeomCache(scrollEl, true));\n    }\n    destroy() {\n        for (let scrollCache of this.scrollCaches) {\n            scrollCache.destroy();\n        }\n    }\n    computeLeft() {\n        let left = this.origRect.left;\n        for (let scrollCache of this.scrollCaches) {\n            left += scrollCache.origScrollLeft - scrollCache.getScrollLeft();\n        }\n        return left;\n    }\n    computeTop() {\n        let top = this.origRect.top;\n        for (let scrollCache of this.scrollCaches) {\n            top += scrollCache.origScrollTop - scrollCache.getScrollTop();\n        }\n        return top;\n    }\n    isWithinClipping(pageX, pageY) {\n        let point = { left: pageX, top: pageY };\n        for (let scrollCache of this.scrollCaches) {\n            if (!isIgnoredClipping(scrollCache.getEventTarget()) &&\n                !pointInsideRect(point, scrollCache.clientRect)) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n// certain clipping containers should never constrain interactions, like <html> and <body>\n// https://github.com/fullcalendar/fullcalendar/issues/3615\nfunction isIgnoredClipping(node) {\n    let tagName = node.tagName;\n    return tagName === 'HTML' || tagName === 'BODY';\n}\n\n/*\nTracks movement over multiple droppable areas (aka \"hits\")\nthat exist in one or more DateComponents.\nRelies on an existing draggable.\n\nemits:\n- pointerdown\n- dragstart\n- hitchange - fires initially, even if not over a hit\n- pointerup\n- (hitchange - again, to null, if ended over a hit)\n- dragend\n*/\nclass HitDragging {\n    constructor(dragging, droppableStore) {\n        // options that can be set by caller\n        this.useSubjectCenter = false;\n        this.requireInitial = true; // if doesn't start out on a hit, won't emit any events\n        this.initialHit = null;\n        this.movingHit = null;\n        this.finalHit = null; // won't ever be populated if shouldIgnoreMove\n        this.handlePointerDown = (ev) => {\n            let { dragging } = this;\n            this.initialHit = null;\n            this.movingHit = null;\n            this.finalHit = null;\n            this.prepareHits();\n            this.processFirstCoord(ev);\n            if (this.initialHit || !this.requireInitial) {\n                dragging.setIgnoreMove(false);\n                // TODO: fire this before computing processFirstCoord, so listeners can cancel. this gets fired by almost every handler :(\n                this.emitter.trigger('pointerdown', ev);\n            }\n            else {\n                dragging.setIgnoreMove(true);\n            }\n        };\n        this.handleDragStart = (ev) => {\n            this.emitter.trigger('dragstart', ev);\n            this.handleMove(ev, true); // force = fire even if initially null\n        };\n        this.handleDragMove = (ev) => {\n            this.emitter.trigger('dragmove', ev);\n            this.handleMove(ev);\n        };\n        this.handlePointerUp = (ev) => {\n            this.releaseHits();\n            this.emitter.trigger('pointerup', ev);\n        };\n        this.handleDragEnd = (ev) => {\n            if (this.movingHit) {\n                this.emitter.trigger('hitupdate', null, true, ev);\n            }\n            this.finalHit = this.movingHit;\n            this.movingHit = null;\n            this.emitter.trigger('dragend', ev);\n        };\n        this.droppableStore = droppableStore;\n        dragging.emitter.on('pointerdown', this.handlePointerDown);\n        dragging.emitter.on('dragstart', this.handleDragStart);\n        dragging.emitter.on('dragmove', this.handleDragMove);\n        dragging.emitter.on('pointerup', this.handlePointerUp);\n        dragging.emitter.on('dragend', this.handleDragEnd);\n        this.dragging = dragging;\n        this.emitter = new Emitter();\n    }\n    // sets initialHit\n    // sets coordAdjust\n    processFirstCoord(ev) {\n        let origPoint = { left: ev.pageX, top: ev.pageY };\n        let adjustedPoint = origPoint;\n        let subjectEl = ev.subjectEl;\n        let subjectRect;\n        if (subjectEl instanceof HTMLElement) { // i.e. not a Document/ShadowRoot\n            subjectRect = computeRect(subjectEl);\n            adjustedPoint = constrainPoint(adjustedPoint, subjectRect);\n        }\n        let initialHit = this.initialHit = this.queryHitForOffset(adjustedPoint.left, adjustedPoint.top);\n        if (initialHit) {\n            if (this.useSubjectCenter && subjectRect) {\n                let slicedSubjectRect = intersectRects(subjectRect, initialHit.rect);\n                if (slicedSubjectRect) {\n                    adjustedPoint = getRectCenter(slicedSubjectRect);\n                }\n            }\n            this.coordAdjust = diffPoints(adjustedPoint, origPoint);\n        }\n        else {\n            this.coordAdjust = { left: 0, top: 0 };\n        }\n    }\n    handleMove(ev, forceHandle) {\n        let hit = this.queryHitForOffset(ev.pageX + this.coordAdjust.left, ev.pageY + this.coordAdjust.top);\n        if (forceHandle || !isHitsEqual(this.movingHit, hit)) {\n            this.movingHit = hit;\n            this.emitter.trigger('hitupdate', hit, false, ev);\n        }\n    }\n    prepareHits() {\n        this.offsetTrackers = mapHash(this.droppableStore, (interactionSettings) => {\n            interactionSettings.component.prepareHits();\n            return new OffsetTracker(interactionSettings.el);\n        });\n    }\n    releaseHits() {\n        let { offsetTrackers } = this;\n        for (let id in offsetTrackers) {\n            offsetTrackers[id].destroy();\n        }\n        this.offsetTrackers = {};\n    }\n    queryHitForOffset(offsetLeft, offsetTop) {\n        let { droppableStore, offsetTrackers } = this;\n        let bestHit = null;\n        for (let id in droppableStore) {\n            let component = droppableStore[id].component;\n            let offsetTracker = offsetTrackers[id];\n            if (offsetTracker && // wasn't destroyed mid-drag\n                offsetTracker.isWithinClipping(offsetLeft, offsetTop)) {\n                let originLeft = offsetTracker.computeLeft();\n                let originTop = offsetTracker.computeTop();\n                let positionLeft = offsetLeft - originLeft;\n                let positionTop = offsetTop - originTop;\n                let { origRect } = offsetTracker;\n                let width = origRect.right - origRect.left;\n                let height = origRect.bottom - origRect.top;\n                if (\n                // must be within the element's bounds\n                positionLeft >= 0 && positionLeft < width &&\n                    positionTop >= 0 && positionTop < height) {\n                    let hit = component.queryHit(positionLeft, positionTop, width, height);\n                    if (hit && (\n                    // make sure the hit is within activeRange, meaning it's not a dead cell\n                    rangeContainsRange(hit.dateProfile.activeRange, hit.dateSpan.range)) &&\n                        (!bestHit || hit.layer > bestHit.layer)) {\n                        hit.componentId = id;\n                        hit.context = component.context;\n                        // TODO: better way to re-orient rectangle\n                        hit.rect.left += originLeft;\n                        hit.rect.right += originLeft;\n                        hit.rect.top += originTop;\n                        hit.rect.bottom += originTop;\n                        bestHit = hit;\n                    }\n                }\n            }\n        }\n        return bestHit;\n    }\n}\nfunction isHitsEqual(hit0, hit1) {\n    if (!hit0 && !hit1) {\n        return true;\n    }\n    if (Boolean(hit0) !== Boolean(hit1)) {\n        return false;\n    }\n    return isDateSpansEqual(hit0.dateSpan, hit1.dateSpan);\n}\n\nfunction buildDatePointApiWithContext(dateSpan, context) {\n    let props = {};\n    for (let transform of context.pluginHooks.datePointTransforms) {\n        Object.assign(props, transform(dateSpan, context));\n    }\n    Object.assign(props, buildDatePointApi(dateSpan, context.dateEnv));\n    return props;\n}\nfunction buildDatePointApi(span, dateEnv) {\n    return {\n        date: dateEnv.toDate(span.range.start),\n        dateStr: dateEnv.formatIso(span.range.start, { omitTime: span.allDay }),\n        allDay: span.allDay,\n    };\n}\n\n/*\nMonitors when the user clicks on a specific date/time of a component.\nA pointerdown+pointerup on the same \"hit\" constitutes a click.\n*/\nclass DateClicking extends Interaction {\n    constructor(settings) {\n        super(settings);\n        this.handlePointerDown = (pev) => {\n            let { dragging } = this;\n            let downEl = pev.origEvent.target;\n            // do this in pointerdown (not dragend) because DOM might be mutated by the time dragend is fired\n            dragging.setIgnoreMove(!this.component.isValidDateDownEl(downEl));\n        };\n        // won't even fire if moving was ignored\n        this.handleDragEnd = (ev) => {\n            let { component } = this;\n            let { pointer } = this.dragging;\n            if (!pointer.wasTouchScroll) {\n                let { initialHit, finalHit } = this.hitDragging;\n                if (initialHit && finalHit && isHitsEqual(initialHit, finalHit)) {\n                    let { context } = component;\n                    let arg = Object.assign(Object.assign({}, buildDatePointApiWithContext(initialHit.dateSpan, context)), { dayEl: initialHit.dayEl, jsEvent: ev.origEvent, view: context.viewApi || context.calendarApi.view });\n                    context.emitter.trigger('dateClick', arg);\n                }\n            }\n        };\n        // we DO want to watch pointer moves because otherwise finalHit won't get populated\n        this.dragging = new FeaturefulElementDragging(settings.el);\n        this.dragging.autoScroller.isEnabled = false;\n        let hitDragging = this.hitDragging = new HitDragging(this.dragging, interactionSettingsToStore(settings));\n        hitDragging.emitter.on('pointerdown', this.handlePointerDown);\n        hitDragging.emitter.on('dragend', this.handleDragEnd);\n    }\n    destroy() {\n        this.dragging.destroy();\n    }\n}\n\n/*\nTracks when the user selects a portion of time of a component,\nconstituted by a drag over date cells, with a possible delay at the beginning of the drag.\n*/\nclass DateSelecting extends Interaction {\n    constructor(settings) {\n        super(settings);\n        this.dragSelection = null;\n        this.handlePointerDown = (ev) => {\n            let { component, dragging } = this;\n            let { options } = component.context;\n            let canSelect = options.selectable &&\n                component.isValidDateDownEl(ev.origEvent.target);\n            // don't bother to watch expensive moves if component won't do selection\n            dragging.setIgnoreMove(!canSelect);\n            // if touch, require user to hold down\n            dragging.delay = ev.isTouch ? getComponentTouchDelay$1(component) : null;\n        };\n        this.handleDragStart = (ev) => {\n            this.component.context.calendarApi.unselect(ev); // unselect previous selections\n        };\n        this.handleHitUpdate = (hit, isFinal) => {\n            let { context } = this.component;\n            let dragSelection = null;\n            let isInvalid = false;\n            if (hit) {\n                let initialHit = this.hitDragging.initialHit;\n                let disallowed = hit.componentId === initialHit.componentId\n                    && this.isHitComboAllowed\n                    && !this.isHitComboAllowed(initialHit, hit);\n                if (!disallowed) {\n                    dragSelection = joinHitsIntoSelection(initialHit, hit, context.pluginHooks.dateSelectionTransformers);\n                }\n                if (!dragSelection || !isDateSelectionValid(dragSelection, hit.dateProfile, context)) {\n                    isInvalid = true;\n                    dragSelection = null;\n                }\n            }\n            if (dragSelection) {\n                context.dispatch({ type: 'SELECT_DATES', selection: dragSelection });\n            }\n            else if (!isFinal) { // only unselect if moved away while dragging\n                context.dispatch({ type: 'UNSELECT_DATES' });\n            }\n            if (!isInvalid) {\n                enableCursor();\n            }\n            else {\n                disableCursor();\n            }\n            if (!isFinal) {\n                this.dragSelection = dragSelection; // only clear if moved away from all hits while dragging\n            }\n        };\n        this.handlePointerUp = (pev) => {\n            if (this.dragSelection) {\n                // selection is already rendered, so just need to report selection\n                triggerDateSelect(this.dragSelection, pev, this.component.context);\n                this.dragSelection = null;\n            }\n        };\n        let { component } = settings;\n        let { options } = component.context;\n        let dragging = this.dragging = new FeaturefulElementDragging(settings.el);\n        dragging.touchScrollAllowed = false;\n        dragging.minDistance = options.selectMinDistance || 0;\n        dragging.autoScroller.isEnabled = options.dragScroll;\n        let hitDragging = this.hitDragging = new HitDragging(this.dragging, interactionSettingsToStore(settings));\n        hitDragging.emitter.on('pointerdown', this.handlePointerDown);\n        hitDragging.emitter.on('dragstart', this.handleDragStart);\n        hitDragging.emitter.on('hitupdate', this.handleHitUpdate);\n        hitDragging.emitter.on('pointerup', this.handlePointerUp);\n    }\n    destroy() {\n        this.dragging.destroy();\n    }\n}\nfunction getComponentTouchDelay$1(component) {\n    let { options } = component.context;\n    let delay = options.selectLongPressDelay;\n    if (delay == null) {\n        delay = options.longPressDelay;\n    }\n    return delay;\n}\nfunction joinHitsIntoSelection(hit0, hit1, dateSelectionTransformers) {\n    let dateSpan0 = hit0.dateSpan;\n    let dateSpan1 = hit1.dateSpan;\n    let ms = [\n        dateSpan0.range.start,\n        dateSpan0.range.end,\n        dateSpan1.range.start,\n        dateSpan1.range.end,\n    ];\n    ms.sort(compareNumbers);\n    let props = {};\n    for (let transformer of dateSelectionTransformers) {\n        let res = transformer(hit0, hit1);\n        if (res === false) {\n            return null;\n        }\n        if (res) {\n            Object.assign(props, res);\n        }\n    }\n    props.range = { start: ms[0], end: ms[3] };\n    props.allDay = dateSpan0.allDay;\n    return props;\n}\n\nclass EventDragging extends Interaction {\n    constructor(settings) {\n        super(settings);\n        // internal state\n        this.subjectEl = null;\n        this.subjectSeg = null; // the seg being selected/dragged\n        this.isDragging = false;\n        this.eventRange = null;\n        this.relevantEvents = null; // the events being dragged\n        this.receivingContext = null;\n        this.validMutation = null;\n        this.mutatedRelevantEvents = null;\n        this.handlePointerDown = (ev) => {\n            let origTarget = ev.origEvent.target;\n            let { component, dragging } = this;\n            let { mirror } = dragging;\n            let { options } = component.context;\n            let initialContext = component.context;\n            this.subjectEl = ev.subjectEl;\n            let subjectSeg = this.subjectSeg = getElSeg(ev.subjectEl);\n            let eventRange = this.eventRange = subjectSeg.eventRange;\n            let eventInstanceId = eventRange.instance.instanceId;\n            this.relevantEvents = getRelevantEvents(initialContext.getCurrentData().eventStore, eventInstanceId);\n            dragging.minDistance = ev.isTouch ? 0 : options.eventDragMinDistance;\n            dragging.delay =\n                // only do a touch delay if touch and this event hasn't been selected yet\n                (ev.isTouch && eventInstanceId !== component.props.eventSelection) ?\n                    getComponentTouchDelay(component) :\n                    null;\n            if (options.fixedMirrorParent) {\n                mirror.parentNode = options.fixedMirrorParent;\n            }\n            else {\n                mirror.parentNode = elementClosest(origTarget, '.fc');\n            }\n            mirror.revertDuration = options.dragRevertDuration;\n            let isValid = component.isValidSegDownEl(origTarget) &&\n                !elementClosest(origTarget, '.fc-event-resizer'); // NOT on a resizer\n            dragging.setIgnoreMove(!isValid);\n            // disable dragging for elements that are resizable (ie, selectable)\n            // but are not draggable\n            this.isDragging = isValid &&\n                ev.subjectEl.classList.contains('fc-event-draggable');\n        };\n        this.handleDragStart = (ev) => {\n            let initialContext = this.component.context;\n            let eventRange = this.eventRange;\n            let eventInstanceId = eventRange.instance.instanceId;\n            if (ev.isTouch) {\n                // need to select a different event?\n                if (eventInstanceId !== this.component.props.eventSelection) {\n                    initialContext.dispatch({ type: 'SELECT_EVENT', eventInstanceId });\n                }\n            }\n            else {\n                // if now using mouse, but was previous touch interaction, clear selected event\n                initialContext.dispatch({ type: 'UNSELECT_EVENT' });\n            }\n            if (this.isDragging) {\n                initialContext.calendarApi.unselect(ev); // unselect *date* selection\n                initialContext.emitter.trigger('eventDragStart', {\n                    el: this.subjectEl,\n                    event: new EventImpl(initialContext, eventRange.def, eventRange.instance),\n                    jsEvent: ev.origEvent,\n                    view: initialContext.viewApi,\n                });\n            }\n        };\n        this.handleHitUpdate = (hit, isFinal) => {\n            if (!this.isDragging) {\n                return;\n            }\n            let relevantEvents = this.relevantEvents;\n            let initialHit = this.hitDragging.initialHit;\n            let initialContext = this.component.context;\n            // states based on new hit\n            let receivingContext = null;\n            let mutation = null;\n            let mutatedRelevantEvents = null;\n            let isInvalid = false;\n            let interaction = {\n                affectedEvents: relevantEvents,\n                mutatedEvents: createEmptyEventStore(),\n                isEvent: true,\n            };\n            if (hit) {\n                receivingContext = hit.context;\n                let receivingOptions = receivingContext.options;\n                if (initialContext === receivingContext ||\n                    (receivingOptions.editable && receivingOptions.droppable)) {\n                    mutation = computeEventMutation(initialHit, hit, receivingContext.getCurrentData().pluginHooks.eventDragMutationMassagers);\n                    if (mutation) {\n                        mutatedRelevantEvents = applyMutationToEventStore(relevantEvents, receivingContext.getCurrentData().eventUiBases, mutation, receivingContext);\n                        interaction.mutatedEvents = mutatedRelevantEvents;\n                        if (!isInteractionValid(interaction, hit.dateProfile, receivingContext)) {\n                            isInvalid = true;\n                            mutation = null;\n                            mutatedRelevantEvents = null;\n                            interaction.mutatedEvents = createEmptyEventStore();\n                        }\n                    }\n                }\n                else {\n                    receivingContext = null;\n                }\n            }\n            this.displayDrag(receivingContext, interaction);\n            if (!isInvalid) {\n                enableCursor();\n            }\n            else {\n                disableCursor();\n            }\n            if (!isFinal) {\n                if (initialContext === receivingContext && // TODO: write test for this\n                    isHitsEqual(initialHit, hit)) {\n                    mutation = null;\n                }\n                this.dragging.setMirrorNeedsRevert(!mutation);\n                // render the mirror if no already-rendered mirror\n                // TODO: wish we could somehow wait for dispatch to guarantee render\n                this.dragging.setMirrorIsVisible(!hit || !this.subjectEl.getRootNode().querySelector('.fc-event-mirror'));\n                // assign states based on new hit\n                this.receivingContext = receivingContext;\n                this.validMutation = mutation;\n                this.mutatedRelevantEvents = mutatedRelevantEvents;\n            }\n        };\n        this.handlePointerUp = () => {\n            if (!this.isDragging) {\n                this.cleanup(); // because handleDragEnd won't fire\n            }\n        };\n        this.handleDragEnd = (ev) => {\n            if (this.isDragging) {\n                let initialContext = this.component.context;\n                let initialView = initialContext.viewApi;\n                let { receivingContext, validMutation } = this;\n                let eventDef = this.eventRange.def;\n                let eventInstance = this.eventRange.instance;\n                let eventApi = new EventImpl(initialContext, eventDef, eventInstance);\n                let relevantEvents = this.relevantEvents;\n                let mutatedRelevantEvents = this.mutatedRelevantEvents;\n                let { finalHit } = this.hitDragging;\n                this.clearDrag(); // must happen after revert animation\n                initialContext.emitter.trigger('eventDragStop', {\n                    el: this.subjectEl,\n                    event: eventApi,\n                    jsEvent: ev.origEvent,\n                    view: initialView,\n                });\n                if (validMutation) {\n                    // dropped within same calendar\n                    if (receivingContext === initialContext) {\n                        let updatedEventApi = new EventImpl(initialContext, mutatedRelevantEvents.defs[eventDef.defId], eventInstance ? mutatedRelevantEvents.instances[eventInstance.instanceId] : null);\n                        initialContext.dispatch({\n                            type: 'MERGE_EVENTS',\n                            eventStore: mutatedRelevantEvents,\n                        });\n                        let eventChangeArg = {\n                            oldEvent: eventApi,\n                            event: updatedEventApi,\n                            relatedEvents: buildEventApis(mutatedRelevantEvents, initialContext, eventInstance),\n                            revert() {\n                                initialContext.dispatch({\n                                    type: 'MERGE_EVENTS',\n                                    eventStore: relevantEvents, // the pre-change data\n                                });\n                            },\n                        };\n                        let transformed = {};\n                        for (let transformer of initialContext.getCurrentData().pluginHooks.eventDropTransformers) {\n                            Object.assign(transformed, transformer(validMutation, initialContext));\n                        }\n                        initialContext.emitter.trigger('eventDrop', Object.assign(Object.assign(Object.assign({}, eventChangeArg), transformed), { el: ev.subjectEl, delta: validMutation.datesDelta, jsEvent: ev.origEvent, view: initialView }));\n                        initialContext.emitter.trigger('eventChange', eventChangeArg);\n                        // dropped in different calendar\n                    }\n                    else if (receivingContext) {\n                        let eventRemoveArg = {\n                            event: eventApi,\n                            relatedEvents: buildEventApis(relevantEvents, initialContext, eventInstance),\n                            revert() {\n                                initialContext.dispatch({\n                                    type: 'MERGE_EVENTS',\n                                    eventStore: relevantEvents,\n                                });\n                            },\n                        };\n                        initialContext.emitter.trigger('eventLeave', Object.assign(Object.assign({}, eventRemoveArg), { draggedEl: ev.subjectEl, view: initialView }));\n                        initialContext.dispatch({\n                            type: 'REMOVE_EVENTS',\n                            eventStore: relevantEvents,\n                        });\n                        initialContext.emitter.trigger('eventRemove', eventRemoveArg);\n                        let addedEventDef = mutatedRelevantEvents.defs[eventDef.defId];\n                        let addedEventInstance = mutatedRelevantEvents.instances[eventInstance.instanceId];\n                        let addedEventApi = new EventImpl(receivingContext, addedEventDef, addedEventInstance);\n                        receivingContext.dispatch({\n                            type: 'MERGE_EVENTS',\n                            eventStore: mutatedRelevantEvents,\n                        });\n                        let eventAddArg = {\n                            event: addedEventApi,\n                            relatedEvents: buildEventApis(mutatedRelevantEvents, receivingContext, addedEventInstance),\n                            revert() {\n                                receivingContext.dispatch({\n                                    type: 'REMOVE_EVENTS',\n                                    eventStore: mutatedRelevantEvents,\n                                });\n                            },\n                        };\n                        receivingContext.emitter.trigger('eventAdd', eventAddArg);\n                        if (ev.isTouch) {\n                            receivingContext.dispatch({\n                                type: 'SELECT_EVENT',\n                                eventInstanceId: eventInstance.instanceId,\n                            });\n                        }\n                        receivingContext.emitter.trigger('drop', Object.assign(Object.assign({}, buildDatePointApiWithContext(finalHit.dateSpan, receivingContext)), { draggedEl: ev.subjectEl, jsEvent: ev.origEvent, view: finalHit.context.viewApi }));\n                        receivingContext.emitter.trigger('eventReceive', Object.assign(Object.assign({}, eventAddArg), { draggedEl: ev.subjectEl, view: finalHit.context.viewApi }));\n                    }\n                }\n                else {\n                    initialContext.emitter.trigger('_noEventDrop');\n                }\n            }\n            this.cleanup();\n        };\n        let { component } = this;\n        let { options } = component.context;\n        let dragging = this.dragging = new FeaturefulElementDragging(settings.el);\n        dragging.pointer.selector = EventDragging.SELECTOR;\n        dragging.touchScrollAllowed = false;\n        dragging.autoScroller.isEnabled = options.dragScroll;\n        let hitDragging = this.hitDragging = new HitDragging(this.dragging, interactionSettingsStore);\n        hitDragging.useSubjectCenter = settings.useEventCenter;\n        hitDragging.emitter.on('pointerdown', this.handlePointerDown);\n        hitDragging.emitter.on('dragstart', this.handleDragStart);\n        hitDragging.emitter.on('hitupdate', this.handleHitUpdate);\n        hitDragging.emitter.on('pointerup', this.handlePointerUp);\n        hitDragging.emitter.on('dragend', this.handleDragEnd);\n    }\n    destroy() {\n        this.dragging.destroy();\n    }\n    // render a drag state on the next receivingCalendar\n    displayDrag(nextContext, state) {\n        let initialContext = this.component.context;\n        let prevContext = this.receivingContext;\n        // does the previous calendar need to be cleared?\n        if (prevContext && prevContext !== nextContext) {\n            // does the initial calendar need to be cleared?\n            // if so, don't clear all the way. we still need to to hide the affectedEvents\n            if (prevContext === initialContext) {\n                prevContext.dispatch({\n                    type: 'SET_EVENT_DRAG',\n                    state: {\n                        affectedEvents: state.affectedEvents,\n                        mutatedEvents: createEmptyEventStore(),\n                        isEvent: true,\n                    },\n                });\n                // completely clear the old calendar if it wasn't the initial\n            }\n            else {\n                prevContext.dispatch({ type: 'UNSET_EVENT_DRAG' });\n            }\n        }\n        if (nextContext) {\n            nextContext.dispatch({ type: 'SET_EVENT_DRAG', state });\n        }\n    }\n    clearDrag() {\n        let initialCalendar = this.component.context;\n        let { receivingContext } = this;\n        if (receivingContext) {\n            receivingContext.dispatch({ type: 'UNSET_EVENT_DRAG' });\n        }\n        // the initial calendar might have an dummy drag state from displayDrag\n        if (initialCalendar !== receivingContext) {\n            initialCalendar.dispatch({ type: 'UNSET_EVENT_DRAG' });\n        }\n    }\n    cleanup() {\n        this.subjectSeg = null;\n        this.isDragging = false;\n        this.eventRange = null;\n        this.relevantEvents = null;\n        this.receivingContext = null;\n        this.validMutation = null;\n        this.mutatedRelevantEvents = null;\n    }\n}\n// TODO: test this in IE11\n// QUESTION: why do we need it on the resizable???\nEventDragging.SELECTOR = '.fc-event-draggable, .fc-event-resizable';\nfunction computeEventMutation(hit0, hit1, massagers) {\n    let dateSpan0 = hit0.dateSpan;\n    let dateSpan1 = hit1.dateSpan;\n    let date0 = dateSpan0.range.start;\n    let date1 = dateSpan1.range.start;\n    let standardProps = {};\n    if (dateSpan0.allDay !== dateSpan1.allDay) {\n        standardProps.allDay = dateSpan1.allDay;\n        standardProps.hasEnd = hit1.context.options.allDayMaintainDuration;\n        if (dateSpan1.allDay) {\n            // means date1 is already start-of-day,\n            // but date0 needs to be converted\n            date0 = startOfDay(date0);\n        }\n    }\n    let delta = diffDates(date0, date1, hit0.context.dateEnv, hit0.componentId === hit1.componentId ?\n        hit0.largeUnit :\n        null);\n    if (delta.milliseconds) { // has hours/minutes/seconds\n        standardProps.allDay = false;\n    }\n    let mutation = {\n        datesDelta: delta,\n        standardProps,\n    };\n    for (let massager of massagers) {\n        massager(mutation, hit0, hit1);\n    }\n    return mutation;\n}\nfunction getComponentTouchDelay(component) {\n    let { options } = component.context;\n    let delay = options.eventLongPressDelay;\n    if (delay == null) {\n        delay = options.longPressDelay;\n    }\n    return delay;\n}\n\nclass EventResizing extends Interaction {\n    constructor(settings) {\n        super(settings);\n        // internal state\n        this.draggingSegEl = null;\n        this.draggingSeg = null; // TODO: rename to resizingSeg? subjectSeg?\n        this.eventRange = null;\n        this.relevantEvents = null;\n        this.validMutation = null;\n        this.mutatedRelevantEvents = null;\n        this.handlePointerDown = (ev) => {\n            let { component } = this;\n            let segEl = this.querySegEl(ev);\n            let seg = getElSeg(segEl);\n            let eventRange = this.eventRange = seg.eventRange;\n            this.dragging.minDistance = component.context.options.eventDragMinDistance;\n            // if touch, need to be working with a selected event\n            this.dragging.setIgnoreMove(!this.component.isValidSegDownEl(ev.origEvent.target) ||\n                (ev.isTouch && this.component.props.eventSelection !== eventRange.instance.instanceId));\n        };\n        this.handleDragStart = (ev) => {\n            let { context } = this.component;\n            let eventRange = this.eventRange;\n            this.relevantEvents = getRelevantEvents(context.getCurrentData().eventStore, this.eventRange.instance.instanceId);\n            let segEl = this.querySegEl(ev);\n            this.draggingSegEl = segEl;\n            this.draggingSeg = getElSeg(segEl);\n            context.calendarApi.unselect();\n            context.emitter.trigger('eventResizeStart', {\n                el: segEl,\n                event: new EventImpl(context, eventRange.def, eventRange.instance),\n                jsEvent: ev.origEvent,\n                view: context.viewApi,\n            });\n        };\n        this.handleHitUpdate = (hit, isFinal, ev) => {\n            let { context } = this.component;\n            let relevantEvents = this.relevantEvents;\n            let initialHit = this.hitDragging.initialHit;\n            let eventInstance = this.eventRange.instance;\n            let mutation = null;\n            let mutatedRelevantEvents = null;\n            let isInvalid = false;\n            let interaction = {\n                affectedEvents: relevantEvents,\n                mutatedEvents: createEmptyEventStore(),\n                isEvent: true,\n            };\n            if (hit) {\n                let disallowed = hit.componentId === initialHit.componentId\n                    && this.isHitComboAllowed\n                    && !this.isHitComboAllowed(initialHit, hit);\n                if (!disallowed) {\n                    mutation = computeMutation(initialHit, hit, ev.subjectEl.classList.contains('fc-event-resizer-start'), eventInstance.range);\n                }\n            }\n            if (mutation) {\n                mutatedRelevantEvents = applyMutationToEventStore(relevantEvents, context.getCurrentData().eventUiBases, mutation, context);\n                interaction.mutatedEvents = mutatedRelevantEvents;\n                if (!isInteractionValid(interaction, hit.dateProfile, context)) {\n                    isInvalid = true;\n                    mutation = null;\n                    mutatedRelevantEvents = null;\n                    interaction.mutatedEvents = null;\n                }\n            }\n            if (mutatedRelevantEvents) {\n                context.dispatch({\n                    type: 'SET_EVENT_RESIZE',\n                    state: interaction,\n                });\n            }\n            else {\n                context.dispatch({ type: 'UNSET_EVENT_RESIZE' });\n            }\n            if (!isInvalid) {\n                enableCursor();\n            }\n            else {\n                disableCursor();\n            }\n            if (!isFinal) {\n                if (mutation && isHitsEqual(initialHit, hit)) {\n                    mutation = null;\n                }\n                this.validMutation = mutation;\n                this.mutatedRelevantEvents = mutatedRelevantEvents;\n            }\n        };\n        this.handleDragEnd = (ev) => {\n            let { context } = this.component;\n            let eventDef = this.eventRange.def;\n            let eventInstance = this.eventRange.instance;\n            let eventApi = new EventImpl(context, eventDef, eventInstance);\n            let relevantEvents = this.relevantEvents;\n            let mutatedRelevantEvents = this.mutatedRelevantEvents;\n            context.emitter.trigger('eventResizeStop', {\n                el: this.draggingSegEl,\n                event: eventApi,\n                jsEvent: ev.origEvent,\n                view: context.viewApi,\n            });\n            if (this.validMutation) {\n                let updatedEventApi = new EventImpl(context, mutatedRelevantEvents.defs[eventDef.defId], eventInstance ? mutatedRelevantEvents.instances[eventInstance.instanceId] : null);\n                context.dispatch({\n                    type: 'MERGE_EVENTS',\n                    eventStore: mutatedRelevantEvents,\n                });\n                let eventChangeArg = {\n                    oldEvent: eventApi,\n                    event: updatedEventApi,\n                    relatedEvents: buildEventApis(mutatedRelevantEvents, context, eventInstance),\n                    revert() {\n                        context.dispatch({\n                            type: 'MERGE_EVENTS',\n                            eventStore: relevantEvents, // the pre-change events\n                        });\n                    },\n                };\n                context.emitter.trigger('eventResize', Object.assign(Object.assign({}, eventChangeArg), { el: this.draggingSegEl, startDelta: this.validMutation.startDelta || createDuration(0), endDelta: this.validMutation.endDelta || createDuration(0), jsEvent: ev.origEvent, view: context.viewApi }));\n                context.emitter.trigger('eventChange', eventChangeArg);\n            }\n            else {\n                context.emitter.trigger('_noEventResize');\n            }\n            // reset all internal state\n            this.draggingSeg = null;\n            this.relevantEvents = null;\n            this.validMutation = null;\n            // okay to keep eventInstance around. useful to set it in handlePointerDown\n        };\n        let { component } = settings;\n        let dragging = this.dragging = new FeaturefulElementDragging(settings.el);\n        dragging.pointer.selector = '.fc-event-resizer';\n        dragging.touchScrollAllowed = false;\n        dragging.autoScroller.isEnabled = component.context.options.dragScroll;\n        let hitDragging = this.hitDragging = new HitDragging(this.dragging, interactionSettingsToStore(settings));\n        hitDragging.emitter.on('pointerdown', this.handlePointerDown);\n        hitDragging.emitter.on('dragstart', this.handleDragStart);\n        hitDragging.emitter.on('hitupdate', this.handleHitUpdate);\n        hitDragging.emitter.on('dragend', this.handleDragEnd);\n    }\n    destroy() {\n        this.dragging.destroy();\n    }\n    querySegEl(ev) {\n        return elementClosest(ev.subjectEl, '.fc-event');\n    }\n}\nfunction computeMutation(hit0, hit1, isFromStart, instanceRange) {\n    let dateEnv = hit0.context.dateEnv;\n    let date0 = hit0.dateSpan.range.start;\n    let date1 = hit1.dateSpan.range.start;\n    let delta = diffDates(date0, date1, dateEnv, hit0.largeUnit);\n    if (isFromStart) {\n        if (dateEnv.add(instanceRange.start, delta) < instanceRange.end) {\n            return { startDelta: delta };\n        }\n    }\n    else if (dateEnv.add(instanceRange.end, delta) > instanceRange.start) {\n        return { endDelta: delta };\n    }\n    return null;\n}\n\nclass UnselectAuto {\n    constructor(context) {\n        this.context = context;\n        this.isRecentPointerDateSelect = false; // wish we could use a selector to detect date selection, but uses hit system\n        this.matchesCancel = false;\n        this.matchesEvent = false;\n        this.onSelect = (selectInfo) => {\n            if (selectInfo.jsEvent) {\n                this.isRecentPointerDateSelect = true;\n            }\n        };\n        this.onDocumentPointerDown = (pev) => {\n            let unselectCancel = this.context.options.unselectCancel;\n            let downEl = getEventTargetViaRoot(pev.origEvent);\n            this.matchesCancel = !!elementClosest(downEl, unselectCancel);\n            this.matchesEvent = !!elementClosest(downEl, EventDragging.SELECTOR); // interaction started on an event?\n        };\n        this.onDocumentPointerUp = (pev) => {\n            let { context } = this;\n            let { documentPointer } = this;\n            let calendarState = context.getCurrentData();\n            // touch-scrolling should never unfocus any type of selection\n            if (!documentPointer.wasTouchScroll) {\n                if (calendarState.dateSelection && // an existing date selection?\n                    !this.isRecentPointerDateSelect // a new pointer-initiated date selection since last onDocumentPointerUp?\n                ) {\n                    let unselectAuto = context.options.unselectAuto;\n                    if (unselectAuto && (!unselectAuto || !this.matchesCancel)) {\n                        context.calendarApi.unselect(pev);\n                    }\n                }\n                if (calendarState.eventSelection && // an existing event selected?\n                    !this.matchesEvent // interaction DIDN'T start on an event\n                ) {\n                    context.dispatch({ type: 'UNSELECT_EVENT' });\n                }\n            }\n            this.isRecentPointerDateSelect = false;\n        };\n        let documentPointer = this.documentPointer = new PointerDragging(document);\n        documentPointer.shouldIgnoreMove = true;\n        documentPointer.shouldWatchScroll = false;\n        documentPointer.emitter.on('pointerdown', this.onDocumentPointerDown);\n        documentPointer.emitter.on('pointerup', this.onDocumentPointerUp);\n        /*\n        TODO: better way to know about whether there was a selection with the pointer\n        */\n        context.emitter.on('select', this.onSelect);\n    }\n    destroy() {\n        this.context.emitter.off('select', this.onSelect);\n        this.documentPointer.destroy();\n    }\n}\n\nconst OPTION_REFINERS = {\n    fixedMirrorParent: identity,\n};\nconst LISTENER_REFINERS = {\n    dateClick: identity,\n    eventDragStart: identity,\n    eventDragStop: identity,\n    eventDrop: identity,\n    eventResizeStart: identity,\n    eventResizeStop: identity,\n    eventResize: identity,\n    drop: identity,\n    eventReceive: identity,\n    eventLeave: identity,\n};\n\n/*\nGiven an already instantiated draggable object for one-or-more elements,\nInterprets any dragging as an attempt to drag an events that lives outside\nof a calendar onto a calendar.\n*/\nclass ExternalElementDragging {\n    constructor(dragging, suppliedDragMeta) {\n        this.receivingContext = null;\n        this.droppableEvent = null; // will exist for all drags, even if create:false\n        this.suppliedDragMeta = null;\n        this.dragMeta = null;\n        this.handleDragStart = (ev) => {\n            this.dragMeta = this.buildDragMeta(ev.subjectEl);\n        };\n        this.handleHitUpdate = (hit, isFinal, ev) => {\n            let { dragging } = this.hitDragging;\n            let receivingContext = null;\n            let droppableEvent = null;\n            let isInvalid = false;\n            let interaction = {\n                affectedEvents: createEmptyEventStore(),\n                mutatedEvents: createEmptyEventStore(),\n                isEvent: this.dragMeta.create,\n            };\n            if (hit) {\n                receivingContext = hit.context;\n                if (this.canDropElOnCalendar(ev.subjectEl, receivingContext)) {\n                    droppableEvent = computeEventForDateSpan(hit.dateSpan, this.dragMeta, receivingContext);\n                    interaction.mutatedEvents = eventTupleToStore(droppableEvent);\n                    isInvalid = !isInteractionValid(interaction, hit.dateProfile, receivingContext);\n                    if (isInvalid) {\n                        interaction.mutatedEvents = createEmptyEventStore();\n                        droppableEvent = null;\n                    }\n                }\n            }\n            this.displayDrag(receivingContext, interaction);\n            // show mirror if no already-rendered mirror element OR if we are shutting down the mirror (?)\n            // TODO: wish we could somehow wait for dispatch to guarantee render\n            dragging.setMirrorIsVisible(isFinal || !droppableEvent || !document.querySelector('.fc-event-mirror'));\n            if (!isInvalid) {\n                enableCursor();\n            }\n            else {\n                disableCursor();\n            }\n            if (!isFinal) {\n                dragging.setMirrorNeedsRevert(!droppableEvent);\n                this.receivingContext = receivingContext;\n                this.droppableEvent = droppableEvent;\n            }\n        };\n        this.handleDragEnd = (pev) => {\n            let { receivingContext, droppableEvent } = this;\n            this.clearDrag();\n            if (receivingContext && droppableEvent) {\n                let finalHit = this.hitDragging.finalHit;\n                let finalView = finalHit.context.viewApi;\n                let dragMeta = this.dragMeta;\n                receivingContext.emitter.trigger('drop', Object.assign(Object.assign({}, buildDatePointApiWithContext(finalHit.dateSpan, receivingContext)), { draggedEl: pev.subjectEl, jsEvent: pev.origEvent, view: finalView }));\n                if (dragMeta.create) {\n                    let addingEvents = eventTupleToStore(droppableEvent);\n                    receivingContext.dispatch({\n                        type: 'MERGE_EVENTS',\n                        eventStore: addingEvents,\n                    });\n                    if (pev.isTouch) {\n                        receivingContext.dispatch({\n                            type: 'SELECT_EVENT',\n                            eventInstanceId: droppableEvent.instance.instanceId,\n                        });\n                    }\n                    // signal that an external event landed\n                    receivingContext.emitter.trigger('eventReceive', {\n                        event: new EventImpl(receivingContext, droppableEvent.def, droppableEvent.instance),\n                        relatedEvents: [],\n                        revert() {\n                            receivingContext.dispatch({\n                                type: 'REMOVE_EVENTS',\n                                eventStore: addingEvents,\n                            });\n                        },\n                        draggedEl: pev.subjectEl,\n                        view: finalView,\n                    });\n                }\n            }\n            this.receivingContext = null;\n            this.droppableEvent = null;\n        };\n        let hitDragging = this.hitDragging = new HitDragging(dragging, interactionSettingsStore);\n        hitDragging.requireInitial = false; // will start outside of a component\n        hitDragging.emitter.on('dragstart', this.handleDragStart);\n        hitDragging.emitter.on('hitupdate', this.handleHitUpdate);\n        hitDragging.emitter.on('dragend', this.handleDragEnd);\n        this.suppliedDragMeta = suppliedDragMeta;\n    }\n    buildDragMeta(subjectEl) {\n        if (typeof this.suppliedDragMeta === 'object') {\n            return parseDragMeta(this.suppliedDragMeta);\n        }\n        if (typeof this.suppliedDragMeta === 'function') {\n            return parseDragMeta(this.suppliedDragMeta(subjectEl));\n        }\n        return getDragMetaFromEl(subjectEl);\n    }\n    displayDrag(nextContext, state) {\n        let prevContext = this.receivingContext;\n        if (prevContext && prevContext !== nextContext) {\n            prevContext.dispatch({ type: 'UNSET_EVENT_DRAG' });\n        }\n        if (nextContext) {\n            nextContext.dispatch({ type: 'SET_EVENT_DRAG', state });\n        }\n    }\n    clearDrag() {\n        if (this.receivingContext) {\n            this.receivingContext.dispatch({ type: 'UNSET_EVENT_DRAG' });\n        }\n    }\n    canDropElOnCalendar(el, receivingContext) {\n        let dropAccept = receivingContext.options.dropAccept;\n        if (typeof dropAccept === 'function') {\n            return dropAccept.call(receivingContext.calendarApi, el);\n        }\n        if (typeof dropAccept === 'string' && dropAccept) {\n            return Boolean(elementMatches(el, dropAccept));\n        }\n        return true;\n    }\n}\n// Utils for computing event store from the DragMeta\n// ----------------------------------------------------------------------------------------------------\nfunction computeEventForDateSpan(dateSpan, dragMeta, context) {\n    let defProps = Object.assign({}, dragMeta.leftoverProps);\n    for (let transform of context.pluginHooks.externalDefTransforms) {\n        Object.assign(defProps, transform(dateSpan, dragMeta));\n    }\n    let { refined, extra } = refineEventDef(defProps, context);\n    let def = parseEventDef(refined, extra, dragMeta.sourceId, dateSpan.allDay, context.options.forceEventDuration || Boolean(dragMeta.duration), // hasEnd\n    context);\n    let start = dateSpan.range.start;\n    // only rely on time info if drop zone is all-day,\n    // otherwise, we already know the time\n    if (dateSpan.allDay && dragMeta.startTime) {\n        start = context.dateEnv.add(start, dragMeta.startTime);\n    }\n    let end = dragMeta.duration ?\n        context.dateEnv.add(start, dragMeta.duration) :\n        getDefaultEventEnd(dateSpan.allDay, start, context);\n    let instance = createEventInstance(def.defId, { start, end });\n    return { def, instance };\n}\n// Utils for extracting data from element\n// ----------------------------------------------------------------------------------------------------\nfunction getDragMetaFromEl(el) {\n    let str = getEmbeddedElData(el, 'event');\n    let obj = str ?\n        JSON.parse(str) :\n        { create: false }; // if no embedded data, assume no event creation\n    return parseDragMeta(obj);\n}\nconfig.dataAttrPrefix = '';\nfunction getEmbeddedElData(el, name) {\n    let prefix = config.dataAttrPrefix;\n    let prefixedName = (prefix ? prefix + '-' : '') + name;\n    return el.getAttribute('data-' + prefixedName) || '';\n}\n\n/*\nMakes an element (that is *external* to any calendar) draggable.\nCan pass in data that determines how an event will be created when dropped onto a calendar.\nLeverages FullCalendar's internal drag-n-drop functionality WITHOUT a third-party drag system.\n*/\nclass ExternalDraggable {\n    constructor(el, settings = {}) {\n        this.handlePointerDown = (ev) => {\n            let { dragging } = this;\n            let { minDistance, longPressDelay } = this.settings;\n            dragging.minDistance =\n                minDistance != null ?\n                    minDistance :\n                    (ev.isTouch ? 0 : BASE_OPTION_DEFAULTS.eventDragMinDistance);\n            dragging.delay =\n                ev.isTouch ? // TODO: eventually read eventLongPressDelay instead vvv\n                    (longPressDelay != null ? longPressDelay : BASE_OPTION_DEFAULTS.longPressDelay) :\n                    0;\n        };\n        this.handleDragStart = (ev) => {\n            if (ev.isTouch &&\n                this.dragging.delay &&\n                ev.subjectEl.classList.contains('fc-event')) {\n                this.dragging.mirror.getMirrorEl().classList.add('fc-event-selected');\n            }\n        };\n        this.settings = settings;\n        let dragging = this.dragging = new FeaturefulElementDragging(el);\n        dragging.touchScrollAllowed = false;\n        if (settings.itemSelector != null) {\n            dragging.pointer.selector = settings.itemSelector;\n        }\n        if (settings.appendTo != null) {\n            dragging.mirror.parentNode = settings.appendTo; // TODO: write tests\n        }\n        dragging.emitter.on('pointerdown', this.handlePointerDown);\n        dragging.emitter.on('dragstart', this.handleDragStart);\n        new ExternalElementDragging(dragging, settings.eventData); // eslint-disable-line no-new\n    }\n    destroy() {\n        this.dragging.destroy();\n    }\n}\n\n/*\nDetects when a *THIRD-PARTY* drag-n-drop system interacts with elements.\nThe third-party system is responsible for drawing the visuals effects of the drag.\nThis class simply monitors for pointer movements and fires events.\nIt also has the ability to hide the moving element (the \"mirror\") during the drag.\n*/\nclass InferredElementDragging extends ElementDragging {\n    constructor(containerEl) {\n        super(containerEl);\n        this.shouldIgnoreMove = false;\n        this.mirrorSelector = '';\n        this.currentMirrorEl = null;\n        this.handlePointerDown = (ev) => {\n            this.emitter.trigger('pointerdown', ev);\n            if (!this.shouldIgnoreMove) {\n                // fire dragstart right away. does not support delay or min-distance\n                this.emitter.trigger('dragstart', ev);\n            }\n        };\n        this.handlePointerMove = (ev) => {\n            if (!this.shouldIgnoreMove) {\n                this.emitter.trigger('dragmove', ev);\n            }\n        };\n        this.handlePointerUp = (ev) => {\n            this.emitter.trigger('pointerup', ev);\n            if (!this.shouldIgnoreMove) {\n                // fire dragend right away. does not support a revert animation\n                this.emitter.trigger('dragend', ev);\n            }\n        };\n        let pointer = this.pointer = new PointerDragging(containerEl);\n        pointer.emitter.on('pointerdown', this.handlePointerDown);\n        pointer.emitter.on('pointermove', this.handlePointerMove);\n        pointer.emitter.on('pointerup', this.handlePointerUp);\n    }\n    destroy() {\n        this.pointer.destroy();\n    }\n    setIgnoreMove(bool) {\n        this.shouldIgnoreMove = bool;\n    }\n    setMirrorIsVisible(bool) {\n        if (bool) {\n            // restore a previously hidden element.\n            // use the reference in case the selector class has already been removed.\n            if (this.currentMirrorEl) {\n                this.currentMirrorEl.style.visibility = '';\n                this.currentMirrorEl = null;\n            }\n        }\n        else {\n            let mirrorEl = this.mirrorSelector\n                // TODO: somehow query FullCalendars WITHIN shadow-roots\n                ? document.querySelector(this.mirrorSelector)\n                : null;\n            if (mirrorEl) {\n                this.currentMirrorEl = mirrorEl;\n                mirrorEl.style.visibility = 'hidden';\n            }\n        }\n    }\n}\n\n/*\nBridges third-party drag-n-drop systems with FullCalendar.\nMust be instantiated and destroyed by caller.\n*/\nclass ThirdPartyDraggable {\n    constructor(containerOrSettings, settings) {\n        let containerEl = document;\n        if (\n        // wish we could just test instanceof EventTarget, but doesn't work in IE11\n        containerOrSettings === document ||\n            containerOrSettings instanceof Element) {\n            containerEl = containerOrSettings;\n            settings = settings || {};\n        }\n        else {\n            settings = (containerOrSettings || {});\n        }\n        let dragging = this.dragging = new InferredElementDragging(containerEl);\n        if (typeof settings.itemSelector === 'string') {\n            dragging.pointer.selector = settings.itemSelector;\n        }\n        else if (containerEl === document) {\n            dragging.pointer.selector = '[data-event]';\n        }\n        if (typeof settings.mirrorSelector === 'string') {\n            dragging.mirrorSelector = settings.mirrorSelector;\n        }\n        new ExternalElementDragging(dragging, settings.eventData); // eslint-disable-line no-new\n    }\n    destroy() {\n        this.dragging.destroy();\n    }\n}\n\nvar index = createPlugin({\n    name: '@fullcalendar/interaction',\n    componentInteractions: [DateClicking, DateSelecting, EventDragging, EventResizing],\n    calendarInteractions: [UnselectAuto],\n    elementDraggingImpl: FeaturefulElementDragging,\n    optionRefiners: OPTION_REFINERS,\n    listenerRefiners: LISTENER_REFINERS,\n});\n\nexport { ExternalDraggable as Draggable, ThirdPartyDraggable, index as default };\n","import { BaseComponent, getUniqueDomId, getDateMeta, buildNavLinkAttrs, ContentContainer, getDayClassNames, formatDayString, createFormatter, EventContainer, getSegAnchorAttrs, isMultiDayRange, buildSegTimeText, DateComponent, memoize, ViewContainer, Scroller, NowTimer, sortEventSegs, getSegMeta, sliceEventStore, intersectRanges, startOfDay, addDays, injectStyles } from '@fullcalendar/core/internal.js';\nimport { createElement, Fragment } from '@fullcalendar/core/preact.js';\n\nclass ListViewHeaderRow extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            textId: getUniqueDomId(),\n        };\n    }\n    render() {\n        let { theme, dateEnv, options, viewApi } = this.context;\n        let { cellId, dayDate, todayRange } = this.props;\n        let { textId } = this.state;\n        let dayMeta = getDateMeta(dayDate, todayRange);\n        // will ever be falsy?\n        let text = options.listDayFormat ? dateEnv.format(dayDate, options.listDayFormat) : '';\n        // will ever be falsy? also, BAD NAME \"alt\"\n        let sideText = options.listDaySideFormat ? dateEnv.format(dayDate, options.listDaySideFormat) : '';\n        let renderProps = Object.assign({ date: dateEnv.toDate(dayDate), view: viewApi, textId,\n            text,\n            sideText, navLinkAttrs: buildNavLinkAttrs(this.context, dayDate), sideNavLinkAttrs: buildNavLinkAttrs(this.context, dayDate, 'day', false) }, dayMeta);\n        // TODO: make a reusable HOC for dayHeader (used in daygrid/timegrid too)\n        return (createElement(ContentContainer, { elTag: \"tr\", elClasses: [\n                'fc-list-day',\n                ...getDayClassNames(dayMeta, theme),\n            ], elAttrs: {\n                'data-date': formatDayString(dayDate),\n            }, renderProps: renderProps, generatorName: \"dayHeaderContent\", customGenerator: options.dayHeaderContent, defaultGenerator: renderInnerContent, classNameGenerator: options.dayHeaderClassNames, didMount: options.dayHeaderDidMount, willUnmount: options.dayHeaderWillUnmount }, (InnerContent) => ( // TODO: force-hide top border based on :first-child\n        createElement(\"th\", { scope: \"colgroup\", colSpan: 3, id: cellId, \"aria-labelledby\": textId },\n            createElement(InnerContent, { elTag: \"div\", elClasses: [\n                    'fc-list-day-cushion',\n                    theme.getClass('tableCellShaded'),\n                ] })))));\n    }\n}\nfunction renderInnerContent(props) {\n    return (createElement(Fragment, null,\n        props.text && (createElement(\"a\", Object.assign({ id: props.textId, className: \"fc-list-day-text\" }, props.navLinkAttrs), props.text)),\n        props.sideText && ( /* not keyboard tabbable */createElement(\"a\", Object.assign({ \"aria-hidden\": true, className: \"fc-list-day-side-text\" }, props.sideNavLinkAttrs), props.sideText))));\n}\n\nconst DEFAULT_TIME_FORMAT = createFormatter({\n    hour: 'numeric',\n    minute: '2-digit',\n    meridiem: 'short',\n});\nclass ListViewEventRow extends BaseComponent {\n    render() {\n        let { props, context } = this;\n        let { options } = context;\n        let { seg, timeHeaderId, eventHeaderId, dateHeaderId } = props;\n        let timeFormat = options.eventTimeFormat || DEFAULT_TIME_FORMAT;\n        return (createElement(EventContainer, Object.assign({}, props, { elTag: \"tr\", elClasses: [\n                'fc-list-event',\n                seg.eventRange.def.url && 'fc-event-forced-url',\n            ], defaultGenerator: () => renderEventInnerContent(seg, context) /* weird */, seg: seg, timeText: \"\", disableDragging: true, disableResizing: true }), (InnerContent, eventContentArg) => (createElement(Fragment, null,\n            buildTimeContent(seg, timeFormat, context, timeHeaderId, dateHeaderId),\n            createElement(\"td\", { \"aria-hidden\": true, className: \"fc-list-event-graphic\" },\n                createElement(\"span\", { className: \"fc-list-event-dot\", style: {\n                        borderColor: eventContentArg.borderColor || eventContentArg.backgroundColor,\n                    } })),\n            createElement(InnerContent, { elTag: \"td\", elClasses: ['fc-list-event-title'], elAttrs: { headers: `${eventHeaderId} ${dateHeaderId}` } })))));\n    }\n}\nfunction renderEventInnerContent(seg, context) {\n    let interactiveAttrs = getSegAnchorAttrs(seg, context);\n    return (createElement(\"a\", Object.assign({}, interactiveAttrs), seg.eventRange.def.title));\n}\nfunction buildTimeContent(seg, timeFormat, context, timeHeaderId, dateHeaderId) {\n    let { options } = context;\n    if (options.displayEventTime !== false) {\n        let eventDef = seg.eventRange.def;\n        let eventInstance = seg.eventRange.instance;\n        let doAllDay = false;\n        let timeText;\n        if (eventDef.allDay) {\n            doAllDay = true;\n        }\n        else if (isMultiDayRange(seg.eventRange.range)) { // TODO: use (!isStart || !isEnd) instead?\n            if (seg.isStart) {\n                timeText = buildSegTimeText(seg, timeFormat, context, null, null, eventInstance.range.start, seg.end);\n            }\n            else if (seg.isEnd) {\n                timeText = buildSegTimeText(seg, timeFormat, context, null, null, seg.start, eventInstance.range.end);\n            }\n            else {\n                doAllDay = true;\n            }\n        }\n        else {\n            timeText = buildSegTimeText(seg, timeFormat, context);\n        }\n        if (doAllDay) {\n            let renderProps = {\n                text: context.options.allDayText,\n                view: context.viewApi,\n            };\n            return (createElement(ContentContainer, { elTag: \"td\", elClasses: ['fc-list-event-time'], elAttrs: {\n                    headers: `${timeHeaderId} ${dateHeaderId}`,\n                }, renderProps: renderProps, generatorName: \"allDayContent\", customGenerator: options.allDayContent, defaultGenerator: renderAllDayInner, classNameGenerator: options.allDayClassNames, didMount: options.allDayDidMount, willUnmount: options.allDayWillUnmount }));\n        }\n        return (createElement(\"td\", { className: \"fc-list-event-time\" }, timeText));\n    }\n    return null;\n}\nfunction renderAllDayInner(renderProps) {\n    return renderProps.text;\n}\n\n/*\nResponsible for the scroller, and forwarding event-related actions into the \"grid\".\n*/\nclass ListView extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.computeDateVars = memoize(computeDateVars);\n        this.eventStoreToSegs = memoize(this._eventStoreToSegs);\n        this.state = {\n            timeHeaderId: getUniqueDomId(),\n            eventHeaderId: getUniqueDomId(),\n            dateHeaderIdRoot: getUniqueDomId(),\n        };\n        this.setRootEl = (rootEl) => {\n            if (rootEl) {\n                this.context.registerInteractiveComponent(this, {\n                    el: rootEl,\n                });\n            }\n            else {\n                this.context.unregisterInteractiveComponent(this);\n            }\n        };\n    }\n    render() {\n        let { props, context } = this;\n        let { dayDates, dayRanges } = this.computeDateVars(props.dateProfile);\n        let eventSegs = this.eventStoreToSegs(props.eventStore, props.eventUiBases, dayRanges);\n        return (createElement(ViewContainer, { elRef: this.setRootEl, elClasses: [\n                'fc-list',\n                context.theme.getClass('table'),\n                context.options.stickyHeaderDates !== false ?\n                    'fc-list-sticky' :\n                    '',\n            ], viewSpec: context.viewSpec },\n            createElement(Scroller, { liquid: !props.isHeightAuto, overflowX: props.isHeightAuto ? 'visible' : 'hidden', overflowY: props.isHeightAuto ? 'visible' : 'auto' }, eventSegs.length > 0 ?\n                this.renderSegList(eventSegs, dayDates) :\n                this.renderEmptyMessage())));\n    }\n    renderEmptyMessage() {\n        let { options, viewApi } = this.context;\n        let renderProps = {\n            text: options.noEventsText,\n            view: viewApi,\n        };\n        return (createElement(ContentContainer, { elTag: \"div\", elClasses: ['fc-list-empty'], renderProps: renderProps, generatorName: \"noEventsContent\", customGenerator: options.noEventsContent, defaultGenerator: renderNoEventsInner, classNameGenerator: options.noEventsClassNames, didMount: options.noEventsDidMount, willUnmount: options.noEventsWillUnmount }, (InnerContent) => (createElement(InnerContent, { elTag: \"div\", elClasses: ['fc-list-empty-cushion'] }))));\n    }\n    renderSegList(allSegs, dayDates) {\n        let { theme, options } = this.context;\n        let { timeHeaderId, eventHeaderId, dateHeaderIdRoot } = this.state;\n        let segsByDay = groupSegsByDay(allSegs); // sparse array\n        return (createElement(NowTimer, { unit: \"day\" }, (nowDate, todayRange) => {\n            let innerNodes = [];\n            for (let dayIndex = 0; dayIndex < segsByDay.length; dayIndex += 1) {\n                let daySegs = segsByDay[dayIndex];\n                if (daySegs) { // sparse array, so might be undefined\n                    let dayStr = formatDayString(dayDates[dayIndex]);\n                    let dateHeaderId = dateHeaderIdRoot + '-' + dayStr;\n                    // append a day header\n                    innerNodes.push(createElement(ListViewHeaderRow, { key: dayStr, cellId: dateHeaderId, dayDate: dayDates[dayIndex], todayRange: todayRange }));\n                    daySegs = sortEventSegs(daySegs, options.eventOrder);\n                    for (let seg of daySegs) {\n                        innerNodes.push(createElement(ListViewEventRow, Object.assign({ key: dayStr + ':' + seg.eventRange.instance.instanceId /* are multiple segs for an instanceId */, seg: seg, isDragging: false, isResizing: false, isDateSelecting: false, isSelected: false, timeHeaderId: timeHeaderId, eventHeaderId: eventHeaderId, dateHeaderId: dateHeaderId }, getSegMeta(seg, todayRange, nowDate))));\n                    }\n                }\n            }\n            return (createElement(\"table\", { className: 'fc-list-table ' + theme.getClass('table') },\n                createElement(\"thead\", null,\n                    createElement(\"tr\", null,\n                        createElement(\"th\", { scope: \"col\", id: timeHeaderId }, options.timeHint),\n                        createElement(\"th\", { scope: \"col\", \"aria-hidden\": true }),\n                        createElement(\"th\", { scope: \"col\", id: eventHeaderId }, options.eventHint))),\n                createElement(\"tbody\", null, innerNodes)));\n        }));\n    }\n    _eventStoreToSegs(eventStore, eventUiBases, dayRanges) {\n        return this.eventRangesToSegs(sliceEventStore(eventStore, eventUiBases, this.props.dateProfile.activeRange, this.context.options.nextDayThreshold).fg, dayRanges);\n    }\n    eventRangesToSegs(eventRanges, dayRanges) {\n        let segs = [];\n        for (let eventRange of eventRanges) {\n            segs.push(...this.eventRangeToSegs(eventRange, dayRanges));\n        }\n        return segs;\n    }\n    eventRangeToSegs(eventRange, dayRanges) {\n        let { dateEnv } = this.context;\n        let { nextDayThreshold } = this.context.options;\n        let range = eventRange.range;\n        let allDay = eventRange.def.allDay;\n        let dayIndex;\n        let segRange;\n        let seg;\n        let segs = [];\n        for (dayIndex = 0; dayIndex < dayRanges.length; dayIndex += 1) {\n            segRange = intersectRanges(range, dayRanges[dayIndex]);\n            if (segRange) {\n                seg = {\n                    component: this,\n                    eventRange,\n                    start: segRange.start,\n                    end: segRange.end,\n                    isStart: eventRange.isStart && segRange.start.valueOf() === range.start.valueOf(),\n                    isEnd: eventRange.isEnd && segRange.end.valueOf() === range.end.valueOf(),\n                    dayIndex,\n                };\n                segs.push(seg);\n                // detect when range won't go fully into the next day,\n                // and mutate the latest seg to the be the end.\n                if (!seg.isEnd && !allDay &&\n                    dayIndex + 1 < dayRanges.length &&\n                    range.end <\n                        dateEnv.add(dayRanges[dayIndex + 1].start, nextDayThreshold)) {\n                    seg.end = range.end;\n                    seg.isEnd = true;\n                    break;\n                }\n            }\n        }\n        return segs;\n    }\n}\nfunction renderNoEventsInner(renderProps) {\n    return renderProps.text;\n}\nfunction computeDateVars(dateProfile) {\n    let dayStart = startOfDay(dateProfile.renderRange.start);\n    let viewEnd = dateProfile.renderRange.end;\n    let dayDates = [];\n    let dayRanges = [];\n    while (dayStart < viewEnd) {\n        dayDates.push(dayStart);\n        dayRanges.push({\n            start: dayStart,\n            end: addDays(dayStart, 1),\n        });\n        dayStart = addDays(dayStart, 1);\n    }\n    return { dayDates, dayRanges };\n}\n// Returns a sparse array of arrays, segs grouped by their dayIndex\nfunction groupSegsByDay(segs) {\n    let segsByDay = []; // sparse array\n    let i;\n    let seg;\n    for (i = 0; i < segs.length; i += 1) {\n        seg = segs[i];\n        (segsByDay[seg.dayIndex] || (segsByDay[seg.dayIndex] = []))\n            .push(seg);\n    }\n    return segsByDay;\n}\n\nvar css_248z = \":root{--fc-list-event-dot-width:10px;--fc-list-event-hover-bg-color:#f5f5f5}.fc-theme-standard .fc-list{border:1px solid var(--fc-border-color)}.fc .fc-list-empty{align-items:center;background-color:var(--fc-neutral-bg-color);display:flex;height:100%;justify-content:center}.fc .fc-list-empty-cushion{margin:5em 0}.fc .fc-list-table{border-style:hidden;width:100%}.fc .fc-list-table tr>*{border-left:0;border-right:0}.fc .fc-list-sticky .fc-list-day>*{background:var(--fc-page-bg-color);position:sticky;top:0}.fc .fc-list-table thead{left:-10000px;position:absolute}.fc .fc-list-table tbody>tr:first-child th{border-top:0}.fc .fc-list-table th{padding:0}.fc .fc-list-day-cushion,.fc .fc-list-table td{padding:8px 14px}.fc .fc-list-day-cushion:after{clear:both;content:\\\"\\\";display:table}.fc-theme-standard .fc-list-day-cushion{background-color:var(--fc-neutral-bg-color)}.fc-direction-ltr .fc-list-day-text,.fc-direction-rtl .fc-list-day-side-text{float:left}.fc-direction-ltr .fc-list-day-side-text,.fc-direction-rtl .fc-list-day-text{float:right}.fc-direction-ltr .fc-list-table .fc-list-event-graphic{padding-right:0}.fc-direction-rtl .fc-list-table .fc-list-event-graphic{padding-left:0}.fc .fc-list-event.fc-event-forced-url{cursor:pointer}.fc .fc-list-event:hover td{background-color:var(--fc-list-event-hover-bg-color)}.fc .fc-list-event-graphic,.fc .fc-list-event-time{white-space:nowrap;width:1px}.fc .fc-list-event-dot{border:calc(var(--fc-list-event-dot-width)/2) solid var(--fc-event-border-color);border-radius:calc(var(--fc-list-event-dot-width)/2);box-sizing:content-box;display:inline-block;height:0;width:0}.fc .fc-list-event-title a{color:inherit;text-decoration:none}.fc .fc-list-event.fc-event-forced-url:hover a{text-decoration:underline}\";\ninjectStyles(css_248z);\n\nexport { ListView };\n","import { createPlugin } from '@fullcalendar/core/index.js';\nimport { ListView } from './internal.js';\nimport { identity, createFormatter } from '@fullcalendar/core/internal.js';\nimport '@fullcalendar/core/preact.js';\n\nconst OPTION_REFINERS = {\n    listDayFormat: createFalsableFormatter,\n    listDaySideFormat: createFalsableFormatter,\n    noEventsClassNames: identity,\n    noEventsContent: identity,\n    noEventsDidMount: identity,\n    noEventsWillUnmount: identity,\n    // noEventsText is defined in base options\n};\nfunction createFalsableFormatter(input) {\n    return input === false ? null : createFormatter(input);\n}\n\nvar index = createPlugin({\n    name: '@fullcalendar/list',\n    optionRefiners: OPTION_REFINERS,\n    views: {\n        list: {\n            component: ListView,\n            buttonTextKey: 'list',\n            listDayFormat: { month: 'long', day: 'numeric', year: 'numeric' }, // like \"January 1, 2016\"\n        },\n        listDay: {\n            type: 'list',\n            duration: { days: 1 },\n            listDayFormat: { weekday: 'long' }, // day-of-week is all we need. full date is probably in headerToolbar\n        },\n        listWeek: {\n            type: 'list',\n            duration: { weeks: 1 },\n            listDayFormat: { weekday: 'long' },\n            listDaySideFormat: { month: 'long', day: 'numeric', year: 'numeric' },\n        },\n        listMonth: {\n            type: 'list',\n            duration: { month: 1 },\n            listDaySideFormat: { weekday: 'long' }, // day-of-week is nice-to-have\n        },\n        listYear: {\n            type: 'list',\n            duration: { year: 1 },\n            listDaySideFormat: { weekday: 'long' }, // day-of-week is nice-to-have\n        },\n    },\n});\n\nexport { index as default };\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { Component, createRef, PureComponent } from 'react'\nimport { createPortal, flushSync } from 'react-dom'\nimport {\n  CalendarOptions,\n  CalendarApi,\n  Calendar,\n} from '@fullcalendar/core'\nimport {\n  CustomRendering,\n  CustomRenderingStore,\n} from '@fullcalendar/core/internal'\n\nconst reactMajorVersion = parseInt(String(React.version).split('.')[0])\nconst syncRenderingByDefault = reactMajorVersion < 18\n\ninterface CalendarState {\n  customRenderingMap: Map<string, CustomRendering<any>>\n}\n\nexport default class FullCalendar extends Component<CalendarOptions, CalendarState> {\n  static act = runNow // DEPRECATED. Not leveraged anymore\n\n  private elRef = createRef<HTMLDivElement>()\n  private calendar: Calendar\n  private handleCustomRendering: (customRendering: CustomRendering<any>) => void\n  private resizeId: number | undefined\n  private isUpdating = false\n  private isUnmounting = false\n\n  state: CalendarState = {\n    customRenderingMap: new Map<string, CustomRendering<any>>()\n  }\n\n  render() {\n    const customRenderingNodes: JSX.Element[] = []\n\n    for (const customRendering of this.state.customRenderingMap.values()) {\n      customRenderingNodes.push(\n        <CustomRenderingComponent\n          key={customRendering.id}\n          customRendering={customRendering}\n        />\n      )\n    }\n\n    return (\n      <div ref={this.elRef}>\n        {customRenderingNodes}\n      </div>\n    )\n  }\n\n  componentDidMount() {\n    const customRenderingStore = new CustomRenderingStore<unknown>()\n    this.handleCustomRendering = customRenderingStore.handle.bind(customRenderingStore)\n\n    this.calendar = new Calendar(this.elRef.current, {\n      ...this.props,\n      handleCustomRendering: this.handleCustomRendering,\n    })\n    this.calendar.render()\n\n    let lastRequestTimestamp: number | undefined\n\n    customRenderingStore.subscribe((customRenderingMap) => {\n      const requestTimestamp = Date.now()\n      const isMounting = !lastRequestTimestamp\n      const runFunc = (\n        // don't call flushSync if React version already does sync rendering by default\n        // guards against fatal errors:\n        // https://github.com/fullcalendar/fullcalendar/issues/7448\n        syncRenderingByDefault ||\n        //\n        isMounting ||\n        this.isUpdating ||\n        this.isUnmounting ||\n        (requestTimestamp - lastRequestTimestamp) < 100 // rerendering frequently\n      ) ? runNow // either sync rendering (first-time or React 16/17) or async (React 18)\n        : flushSync // guaranteed sync rendering\n\n      runFunc(() => {\n        this.setState({ customRenderingMap }, () => {\n          lastRequestTimestamp = requestTimestamp\n          if (isMounting) {\n            this.doResize()\n          } else {\n            this.requestResize()\n          }\n        })\n      })\n    })\n  }\n\n  componentDidUpdate() {\n    this.isUpdating = true\n    this.calendar.resetOptions({\n      ...this.props,\n      handleCustomRendering: this.handleCustomRendering,\n    })\n    this.isUpdating = false\n  }\n\n  componentWillUnmount() {\n    this.isUnmounting = true\n    this.cancelResize()\n    this.calendar.destroy()\n  }\n\n  requestResize = () => {\n    if (!this.isUnmounting) {\n      this.cancelResize()\n      this.resizeId = requestAnimationFrame(() => {\n        this.doResize()\n      })\n    }\n  }\n\n  doResize() {\n    this.calendar.updateSize()\n  }\n\n  cancelResize() {\n    if (this.resizeId !== undefined) {\n      cancelAnimationFrame(this.resizeId)\n      this.resizeId = undefined\n    }\n  }\n\n  getApi(): CalendarApi {\n    return this.calendar\n  }\n}\n\n// Custom Rendering\n// -------------------------------------------------------------------------------------------------\n\ninterface CustomRenderingComponentProps {\n  customRendering: CustomRendering<any>\n}\n\nclass CustomRenderingComponent extends PureComponent<CustomRenderingComponentProps> {\n  render() {\n    const { customRendering } = this.props\n    const { generatorMeta } = customRendering\n    const vnode = typeof generatorMeta === 'function' ?\n      generatorMeta(customRendering.renderProps) :\n      generatorMeta\n\n    return createPortal(vnode, customRendering.containerEl)\n  }\n}\n\n// Util\n// -------------------------------------------------------------------------------------------------\n\nfunction runNow(f: () => void): void {\n  f()\n}\n","import { injectStyles, Splitter, hasBgRendering, createFormatter, ViewContextType, ContentContainer, BaseComponent, DateComponent, diffDays, buildNavLinkAttrs, WeekNumberContainer, getStickyHeaderDates, ViewContainer, SimpleScrollGrid, getStickyFooterScrollbar, NowTimer, NowIndicatorContainer, renderScrollShim, rangeContainsMarker, startOfDay, asRoughMs, createDuration, RefMap, PositionCache, MoreLinkContainer, SegHierarchy, groupIntersectingEntries, binarySearch, getEntrySpanEnd, buildEntryKey, StandardEvent, memoize, sortEventSegs, DayCellContainer, hasCustomDayCellContent, getSegMeta, buildIsoString, computeEarliestSegStart, buildEventRangeKey, BgEvent, renderFill, addDurations, multiplyDuration, wholeDivideDurations, Slicer, intersectRanges, formatIsoTimeString, DayHeader, DaySeriesModel, DayTableModel } from '@fullcalendar/core/internal.js';\nimport { createElement, createRef, Fragment } from '@fullcalendar/core/preact.js';\nimport { DayTable } from '@fullcalendar/daygrid/internal.js';\n\nvar css_248z = \".fc-v-event{background-color:var(--fc-event-bg-color);border:1px solid var(--fc-event-border-color);display:block}.fc-v-event .fc-event-main{color:var(--fc-event-text-color);height:100%}.fc-v-event .fc-event-main-frame{display:flex;flex-direction:column;height:100%}.fc-v-event .fc-event-time{flex-grow:0;flex-shrink:0;max-height:100%;overflow:hidden}.fc-v-event .fc-event-title-container{flex-grow:1;flex-shrink:1;min-height:0}.fc-v-event .fc-event-title{bottom:0;max-height:100%;overflow:hidden;top:0}.fc-v-event:not(.fc-event-start){border-top-left-radius:0;border-top-right-radius:0;border-top-width:0}.fc-v-event:not(.fc-event-end){border-bottom-left-radius:0;border-bottom-right-radius:0;border-bottom-width:0}.fc-v-event.fc-event-selected:before{left:-10px;right:-10px}.fc-v-event .fc-event-resizer-start{cursor:n-resize}.fc-v-event .fc-event-resizer-end{cursor:s-resize}.fc-v-event:not(.fc-event-selected) .fc-event-resizer{height:var(--fc-event-resizer-thickness);left:0;right:0}.fc-v-event:not(.fc-event-selected) .fc-event-resizer-start{top:calc(var(--fc-event-resizer-thickness)/-2)}.fc-v-event:not(.fc-event-selected) .fc-event-resizer-end{bottom:calc(var(--fc-event-resizer-thickness)/-2)}.fc-v-event.fc-event-selected .fc-event-resizer{left:50%;margin-left:calc(var(--fc-event-resizer-dot-total-width)/-2)}.fc-v-event.fc-event-selected .fc-event-resizer-start{top:calc(var(--fc-event-resizer-dot-total-width)/-2)}.fc-v-event.fc-event-selected .fc-event-resizer-end{bottom:calc(var(--fc-event-resizer-dot-total-width)/-2)}.fc .fc-timegrid .fc-daygrid-body{z-index:2}.fc .fc-timegrid-divider{padding:0 0 2px}.fc .fc-timegrid-body{min-height:100%;position:relative;z-index:1}.fc .fc-timegrid-axis-chunk{position:relative}.fc .fc-timegrid-axis-chunk>table,.fc .fc-timegrid-slots{position:relative;z-index:1}.fc .fc-timegrid-slot{border-bottom:0;height:1.5em}.fc .fc-timegrid-slot:empty:before{content:\\\"\\\\00a0\\\"}.fc .fc-timegrid-slot-minor{border-top-style:dotted}.fc .fc-timegrid-slot-label-cushion{display:inline-block;white-space:nowrap}.fc .fc-timegrid-slot-label{vertical-align:middle}.fc .fc-timegrid-axis-cushion,.fc .fc-timegrid-slot-label-cushion{padding:0 4px}.fc .fc-timegrid-axis-frame-liquid{height:100%}.fc .fc-timegrid-axis-frame{align-items:center;display:flex;justify-content:flex-end;overflow:hidden}.fc .fc-timegrid-axis-cushion{flex-shrink:0;max-width:60px}.fc-direction-ltr .fc-timegrid-slot-label-frame{text-align:right}.fc-direction-rtl .fc-timegrid-slot-label-frame{text-align:left}.fc-liquid-hack .fc-timegrid-axis-frame-liquid{bottom:0;height:auto;left:0;position:absolute;right:0;top:0}.fc .fc-timegrid-col.fc-day-today{background-color:var(--fc-today-bg-color)}.fc .fc-timegrid-col-frame{min-height:100%;position:relative}.fc-media-screen.fc-liquid-hack .fc-timegrid-col-frame{bottom:0;height:auto;left:0;position:absolute;right:0;top:0}.fc-media-screen .fc-timegrid-cols{bottom:0;left:0;position:absolute;right:0;top:0}.fc-media-screen .fc-timegrid-cols>table{height:100%}.fc-media-screen .fc-timegrid-col-bg,.fc-media-screen .fc-timegrid-col-events,.fc-media-screen .fc-timegrid-now-indicator-container{left:0;position:absolute;right:0;top:0}.fc .fc-timegrid-col-bg{z-index:2}.fc .fc-timegrid-col-bg .fc-non-business{z-index:1}.fc .fc-timegrid-col-bg .fc-bg-event{z-index:2}.fc .fc-timegrid-col-bg .fc-highlight{z-index:3}.fc .fc-timegrid-bg-harness{left:0;position:absolute;right:0}.fc .fc-timegrid-col-events{z-index:3}.fc .fc-timegrid-now-indicator-container{bottom:0;overflow:hidden}.fc-direction-ltr .fc-timegrid-col-events{margin:0 2.5% 0 2px}.fc-direction-rtl .fc-timegrid-col-events{margin:0 2px 0 2.5%}.fc-timegrid-event-harness{position:absolute}.fc-timegrid-event-harness>.fc-timegrid-event{bottom:0;left:0;position:absolute;right:0;top:0}.fc-timegrid-event-harness-inset .fc-timegrid-event,.fc-timegrid-event.fc-event-mirror,.fc-timegrid-more-link{box-shadow:0 0 0 1px var(--fc-page-bg-color)}.fc-timegrid-event,.fc-timegrid-more-link{border-radius:3px;font-size:var(--fc-small-font-size)}.fc-timegrid-event{margin-bottom:1px}.fc-timegrid-event .fc-event-main{padding:1px 1px 0}.fc-timegrid-event .fc-event-time{font-size:var(--fc-small-font-size);margin-bottom:1px;white-space:nowrap}.fc-timegrid-event-short .fc-event-main-frame{flex-direction:row;overflow:hidden}.fc-timegrid-event-short .fc-event-time:after{content:\\\"\\\\00a0-\\\\00a0\\\"}.fc-timegrid-event-short .fc-event-title{font-size:var(--fc-small-font-size)}.fc-timegrid-more-link{background:var(--fc-more-link-bg-color);color:var(--fc-more-link-text-color);cursor:pointer;margin-bottom:1px;position:absolute;z-index:9999}.fc-timegrid-more-link-inner{padding:3px 2px;top:0}.fc-direction-ltr .fc-timegrid-more-link{right:0}.fc-direction-rtl .fc-timegrid-more-link{left:0}.fc .fc-timegrid-now-indicator-line{border-color:var(--fc-now-indicator-color);border-style:solid;border-width:1px 0 0;left:0;position:absolute;right:0;z-index:4}.fc .fc-timegrid-now-indicator-arrow{border-color:var(--fc-now-indicator-color);border-style:solid;margin-top:-5px;position:absolute;z-index:4}.fc-direction-ltr .fc-timegrid-now-indicator-arrow{border-bottom-color:transparent;border-top-color:transparent;border-width:5px 0 5px 6px;left:0}.fc-direction-rtl .fc-timegrid-now-indicator-arrow{border-bottom-color:transparent;border-top-color:transparent;border-width:5px 6px 5px 0;right:0}\";\ninjectStyles(css_248z);\n\nclass AllDaySplitter extends Splitter {\n    getKeyInfo() {\n        return {\n            allDay: {},\n            timed: {},\n        };\n    }\n    getKeysForDateSpan(dateSpan) {\n        if (dateSpan.allDay) {\n            return ['allDay'];\n        }\n        return ['timed'];\n    }\n    getKeysForEventDef(eventDef) {\n        if (!eventDef.allDay) {\n            return ['timed'];\n        }\n        if (hasBgRendering(eventDef)) {\n            return ['timed', 'allDay'];\n        }\n        return ['allDay'];\n    }\n}\n\nconst DEFAULT_SLAT_LABEL_FORMAT = createFormatter({\n    hour: 'numeric',\n    minute: '2-digit',\n    omitZeroMinute: true,\n    meridiem: 'short',\n});\nfunction TimeColsAxisCell(props) {\n    let classNames = [\n        'fc-timegrid-slot',\n        'fc-timegrid-slot-label',\n        props.isLabeled ? 'fc-scrollgrid-shrink' : 'fc-timegrid-slot-minor',\n    ];\n    return (createElement(ViewContextType.Consumer, null, (context) => {\n        if (!props.isLabeled) {\n            return (createElement(\"td\", { className: classNames.join(' '), \"data-time\": props.isoTimeStr }));\n        }\n        let { dateEnv, options, viewApi } = context;\n        let labelFormat = // TODO: fully pre-parse\n         options.slotLabelFormat == null ? DEFAULT_SLAT_LABEL_FORMAT :\n            Array.isArray(options.slotLabelFormat) ? createFormatter(options.slotLabelFormat[0]) :\n                createFormatter(options.slotLabelFormat);\n        let renderProps = {\n            level: 0,\n            time: props.time,\n            date: dateEnv.toDate(props.date),\n            view: viewApi,\n            text: dateEnv.format(props.date, labelFormat),\n        };\n        return (createElement(ContentContainer, { elTag: \"td\", elClasses: classNames, elAttrs: {\n                'data-time': props.isoTimeStr,\n            }, renderProps: renderProps, generatorName: \"slotLabelContent\", customGenerator: options.slotLabelContent, defaultGenerator: renderInnerContent, classNameGenerator: options.slotLabelClassNames, didMount: options.slotLabelDidMount, willUnmount: options.slotLabelWillUnmount }, (InnerContent) => (createElement(\"div\", { className: \"fc-timegrid-slot-label-frame fc-scrollgrid-shrink-frame\" },\n            createElement(InnerContent, { elTag: \"div\", elClasses: [\n                    'fc-timegrid-slot-label-cushion',\n                    'fc-scrollgrid-shrink-cushion',\n                ] })))));\n    }));\n}\nfunction renderInnerContent(props) {\n    return props.text;\n}\n\nclass TimeBodyAxis extends BaseComponent {\n    render() {\n        return this.props.slatMetas.map((slatMeta) => (createElement(\"tr\", { key: slatMeta.key },\n            createElement(TimeColsAxisCell, Object.assign({}, slatMeta)))));\n    }\n}\n\nconst DEFAULT_WEEK_NUM_FORMAT = createFormatter({ week: 'short' });\nconst AUTO_ALL_DAY_MAX_EVENT_ROWS = 5;\nclass TimeColsView extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.allDaySplitter = new AllDaySplitter(); // for use by subclasses\n        this.headerElRef = createRef();\n        this.rootElRef = createRef();\n        this.scrollerElRef = createRef();\n        this.state = {\n            slatCoords: null,\n        };\n        this.handleScrollTopRequest = (scrollTop) => {\n            let scrollerEl = this.scrollerElRef.current;\n            if (scrollerEl) { // TODO: not sure how this could ever be null. weirdness with the reducer\n                scrollerEl.scrollTop = scrollTop;\n            }\n        };\n        /* Header Render Methods\n        ------------------------------------------------------------------------------------------------------------------*/\n        this.renderHeadAxis = (rowKey, frameHeight = '') => {\n            let { options } = this.context;\n            let { dateProfile } = this.props;\n            let range = dateProfile.renderRange;\n            let dayCnt = diffDays(range.start, range.end);\n            // only do in day views (to avoid doing in week views that dont need it)\n            let navLinkAttrs = (dayCnt === 1)\n                ? buildNavLinkAttrs(this.context, range.start, 'week')\n                : {};\n            if (options.weekNumbers && rowKey === 'day') {\n                return (createElement(WeekNumberContainer, { elTag: \"th\", elClasses: [\n                        'fc-timegrid-axis',\n                        'fc-scrollgrid-shrink',\n                    ], elAttrs: {\n                        'aria-hidden': true,\n                    }, date: range.start, defaultFormat: DEFAULT_WEEK_NUM_FORMAT }, (InnerContent) => (createElement(\"div\", { className: [\n                        'fc-timegrid-axis-frame',\n                        'fc-scrollgrid-shrink-frame',\n                        'fc-timegrid-axis-frame-liquid',\n                    ].join(' '), style: { height: frameHeight } },\n                    createElement(InnerContent, { elTag: \"a\", elClasses: [\n                            'fc-timegrid-axis-cushion',\n                            'fc-scrollgrid-shrink-cushion',\n                            'fc-scrollgrid-sync-inner',\n                        ], elAttrs: navLinkAttrs })))));\n            }\n            return (createElement(\"th\", { \"aria-hidden\": true, className: \"fc-timegrid-axis\" },\n                createElement(\"div\", { className: \"fc-timegrid-axis-frame\", style: { height: frameHeight } })));\n        };\n        /* Table Component Render Methods\n        ------------------------------------------------------------------------------------------------------------------*/\n        // only a one-way height sync. we don't send the axis inner-content height to the DayGrid,\n        // but DayGrid still needs to have classNames on inner elements in order to measure.\n        this.renderTableRowAxis = (rowHeight) => {\n            let { options, viewApi } = this.context;\n            let renderProps = {\n                text: options.allDayText,\n                view: viewApi,\n            };\n            return (\n            // TODO: make reusable hook. used in list view too\n            createElement(ContentContainer, { elTag: \"td\", elClasses: [\n                    'fc-timegrid-axis',\n                    'fc-scrollgrid-shrink',\n                ], elAttrs: {\n                    'aria-hidden': true,\n                }, renderProps: renderProps, generatorName: \"allDayContent\", customGenerator: options.allDayContent, defaultGenerator: renderAllDayInner, classNameGenerator: options.allDayClassNames, didMount: options.allDayDidMount, willUnmount: options.allDayWillUnmount }, (InnerContent) => (createElement(\"div\", { className: [\n                    'fc-timegrid-axis-frame',\n                    'fc-scrollgrid-shrink-frame',\n                    rowHeight == null ? ' fc-timegrid-axis-frame-liquid' : '',\n                ].join(' '), style: { height: rowHeight } },\n                createElement(InnerContent, { elTag: \"span\", elClasses: [\n                        'fc-timegrid-axis-cushion',\n                        'fc-scrollgrid-shrink-cushion',\n                        'fc-scrollgrid-sync-inner',\n                    ] })))));\n        };\n        this.handleSlatCoords = (slatCoords) => {\n            this.setState({ slatCoords });\n        };\n    }\n    // rendering\n    // ----------------------------------------------------------------------------------------------------\n    renderSimpleLayout(headerRowContent, allDayContent, timeContent) {\n        let { context, props } = this;\n        let sections = [];\n        let stickyHeaderDates = getStickyHeaderDates(context.options);\n        if (headerRowContent) {\n            sections.push({\n                type: 'header',\n                key: 'header',\n                isSticky: stickyHeaderDates,\n                chunk: {\n                    elRef: this.headerElRef,\n                    tableClassName: 'fc-col-header',\n                    rowContent: headerRowContent,\n                },\n            });\n        }\n        if (allDayContent) {\n            sections.push({\n                type: 'body',\n                key: 'all-day',\n                chunk: { content: allDayContent },\n            });\n            sections.push({\n                type: 'body',\n                key: 'all-day-divider',\n                outerContent: ( // TODO: rename to cellContent so don't need to define <tr>?\n                createElement(\"tr\", { role: \"presentation\", className: \"fc-scrollgrid-section\" },\n                    createElement(\"td\", { className: 'fc-timegrid-divider ' + context.theme.getClass('tableCellShaded') }))),\n            });\n        }\n        sections.push({\n            type: 'body',\n            key: 'body',\n            liquid: true,\n            expandRows: Boolean(context.options.expandRows),\n            chunk: {\n                scrollerElRef: this.scrollerElRef,\n                content: timeContent,\n            },\n        });\n        return (createElement(ViewContainer, { elRef: this.rootElRef, elClasses: ['fc-timegrid'], viewSpec: context.viewSpec },\n            createElement(SimpleScrollGrid, { liquid: !props.isHeightAuto && !props.forPrint, collapsibleWidth: props.forPrint, cols: [{ width: 'shrink' }], sections: sections })));\n    }\n    renderHScrollLayout(headerRowContent, allDayContent, timeContent, colCnt, dayMinWidth, slatMetas, slatCoords) {\n        let ScrollGrid = this.context.pluginHooks.scrollGridImpl;\n        if (!ScrollGrid) {\n            throw new Error('No ScrollGrid implementation');\n        }\n        let { context, props } = this;\n        let stickyHeaderDates = !props.forPrint && getStickyHeaderDates(context.options);\n        let stickyFooterScrollbar = !props.forPrint && getStickyFooterScrollbar(context.options);\n        let sections = [];\n        if (headerRowContent) {\n            sections.push({\n                type: 'header',\n                key: 'header',\n                isSticky: stickyHeaderDates,\n                syncRowHeights: true,\n                chunks: [\n                    {\n                        key: 'axis',\n                        rowContent: (arg) => (createElement(\"tr\", { role: \"presentation\" }, this.renderHeadAxis('day', arg.rowSyncHeights[0]))),\n                    },\n                    {\n                        key: 'cols',\n                        elRef: this.headerElRef,\n                        tableClassName: 'fc-col-header',\n                        rowContent: headerRowContent,\n                    },\n                ],\n            });\n        }\n        if (allDayContent) {\n            sections.push({\n                type: 'body',\n                key: 'all-day',\n                syncRowHeights: true,\n                chunks: [\n                    {\n                        key: 'axis',\n                        rowContent: (contentArg) => (createElement(\"tr\", { role: \"presentation\" }, this.renderTableRowAxis(contentArg.rowSyncHeights[0]))),\n                    },\n                    {\n                        key: 'cols',\n                        content: allDayContent,\n                    },\n                ],\n            });\n            sections.push({\n                key: 'all-day-divider',\n                type: 'body',\n                outerContent: ( // TODO: rename to cellContent so don't need to define <tr>?\n                createElement(\"tr\", { role: \"presentation\", className: \"fc-scrollgrid-section\" },\n                    createElement(\"td\", { colSpan: 2, className: 'fc-timegrid-divider ' + context.theme.getClass('tableCellShaded') }))),\n            });\n        }\n        let isNowIndicator = context.options.nowIndicator;\n        sections.push({\n            type: 'body',\n            key: 'body',\n            liquid: true,\n            expandRows: Boolean(context.options.expandRows),\n            chunks: [\n                {\n                    key: 'axis',\n                    content: (arg) => (\n                    // TODO: make this now-indicator arrow more DRY with TimeColsContent\n                    createElement(\"div\", { className: \"fc-timegrid-axis-chunk\" },\n                        createElement(\"table\", { \"aria-hidden\": true, style: { height: arg.expandRows ? arg.clientHeight : '' } },\n                            arg.tableColGroupNode,\n                            createElement(\"tbody\", null,\n                                createElement(TimeBodyAxis, { slatMetas: slatMetas }))),\n                        createElement(\"div\", { className: \"fc-timegrid-now-indicator-container\" },\n                            createElement(NowTimer, { unit: isNowIndicator ? 'minute' : 'day' /* hacky */ }, (nowDate) => {\n                                let nowIndicatorTop = isNowIndicator &&\n                                    slatCoords &&\n                                    slatCoords.safeComputeTop(nowDate); // might return void\n                                if (typeof nowIndicatorTop === 'number') {\n                                    return (createElement(NowIndicatorContainer, { elClasses: ['fc-timegrid-now-indicator-arrow'], elStyle: { top: nowIndicatorTop }, isAxis: true, date: nowDate }));\n                                }\n                                return null;\n                            })))),\n                },\n                {\n                    key: 'cols',\n                    scrollerElRef: this.scrollerElRef,\n                    content: timeContent,\n                },\n            ],\n        });\n        if (stickyFooterScrollbar) {\n            sections.push({\n                key: 'footer',\n                type: 'footer',\n                isSticky: true,\n                chunks: [\n                    {\n                        key: 'axis',\n                        content: renderScrollShim,\n                    },\n                    {\n                        key: 'cols',\n                        content: renderScrollShim,\n                    },\n                ],\n            });\n        }\n        return (createElement(ViewContainer, { elRef: this.rootElRef, elClasses: ['fc-timegrid'], viewSpec: context.viewSpec },\n            createElement(ScrollGrid, { liquid: !props.isHeightAuto && !props.forPrint, forPrint: props.forPrint, collapsibleWidth: false, colGroups: [\n                    { width: 'shrink', cols: [{ width: 'shrink' }] },\n                    { cols: [{ span: colCnt, minWidth: dayMinWidth }] },\n                ], sections: sections })));\n    }\n    /* Dimensions\n    ------------------------------------------------------------------------------------------------------------------*/\n    getAllDayMaxEventProps() {\n        let { dayMaxEvents, dayMaxEventRows } = this.context.options;\n        if (dayMaxEvents === true || dayMaxEventRows === true) { // is auto?\n            dayMaxEvents = undefined;\n            dayMaxEventRows = AUTO_ALL_DAY_MAX_EVENT_ROWS; // make sure \"auto\" goes to a real number\n        }\n        return { dayMaxEvents, dayMaxEventRows };\n    }\n}\nfunction renderAllDayInner(renderProps) {\n    return renderProps.text;\n}\n\nclass TimeColsSlatsCoords {\n    constructor(positions, dateProfile, slotDuration) {\n        this.positions = positions;\n        this.dateProfile = dateProfile;\n        this.slotDuration = slotDuration;\n    }\n    safeComputeTop(date) {\n        let { dateProfile } = this;\n        if (rangeContainsMarker(dateProfile.currentRange, date)) {\n            let startOfDayDate = startOfDay(date);\n            let timeMs = date.valueOf() - startOfDayDate.valueOf();\n            if (timeMs >= asRoughMs(dateProfile.slotMinTime) &&\n                timeMs < asRoughMs(dateProfile.slotMaxTime)) {\n                return this.computeTimeTop(createDuration(timeMs));\n            }\n        }\n        return null;\n    }\n    // Computes the top coordinate, relative to the bounds of the grid, of the given date.\n    // A `startOfDayDate` must be given for avoiding ambiguity over how to treat midnight.\n    computeDateTop(when, startOfDayDate) {\n        if (!startOfDayDate) {\n            startOfDayDate = startOfDay(when);\n        }\n        return this.computeTimeTop(createDuration(when.valueOf() - startOfDayDate.valueOf()));\n    }\n    // Computes the top coordinate, relative to the bounds of the grid, of the given time (a Duration).\n    // This is a makeshify way to compute the time-top. Assumes all slatMetas dates are uniform.\n    // Eventually allow computation with arbirary slat dates.\n    computeTimeTop(duration) {\n        let { positions, dateProfile } = this;\n        let len = positions.els.length;\n        // floating-point value of # of slots covered\n        let slatCoverage = (duration.milliseconds - asRoughMs(dateProfile.slotMinTime)) / asRoughMs(this.slotDuration);\n        let slatIndex;\n        let slatRemainder;\n        // compute a floating-point number for how many slats should be progressed through.\n        // from 0 to number of slats (inclusive)\n        // constrained because slotMinTime/slotMaxTime might be customized.\n        slatCoverage = Math.max(0, slatCoverage);\n        slatCoverage = Math.min(len, slatCoverage);\n        // an integer index of the furthest whole slat\n        // from 0 to number slats (*exclusive*, so len-1)\n        slatIndex = Math.floor(slatCoverage);\n        slatIndex = Math.min(slatIndex, len - 1);\n        // how much further through the slatIndex slat (from 0.0-1.0) must be covered in addition.\n        // could be 1.0 if slatCoverage is covering *all* the slots\n        slatRemainder = slatCoverage - slatIndex;\n        return positions.tops[slatIndex] +\n            positions.getHeight(slatIndex) * slatRemainder;\n    }\n}\n\nclass TimeColsSlatsBody extends BaseComponent {\n    render() {\n        let { props, context } = this;\n        let { options } = context;\n        let { slatElRefs } = props;\n        return (createElement(\"tbody\", null, props.slatMetas.map((slatMeta, i) => {\n            let renderProps = {\n                time: slatMeta.time,\n                date: context.dateEnv.toDate(slatMeta.date),\n                view: context.viewApi,\n            };\n            return (createElement(\"tr\", { key: slatMeta.key, ref: slatElRefs.createRef(slatMeta.key) },\n                props.axis && (createElement(TimeColsAxisCell, Object.assign({}, slatMeta))),\n                createElement(ContentContainer, { elTag: \"td\", elClasses: [\n                        'fc-timegrid-slot',\n                        'fc-timegrid-slot-lane',\n                        !slatMeta.isLabeled && 'fc-timegrid-slot-minor',\n                    ], elAttrs: {\n                        'data-time': slatMeta.isoTimeStr,\n                    }, renderProps: renderProps, generatorName: \"slotLaneContent\", customGenerator: options.slotLaneContent, classNameGenerator: options.slotLaneClassNames, didMount: options.slotLaneDidMount, willUnmount: options.slotLaneWillUnmount })));\n        })));\n    }\n}\n\n/*\nfor the horizontal \"slats\" that run width-wise. Has a time axis on a side. Depends on RTL.\n*/\nclass TimeColsSlats extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.rootElRef = createRef();\n        this.slatElRefs = new RefMap();\n    }\n    render() {\n        let { props, context } = this;\n        return (createElement(\"div\", { ref: this.rootElRef, className: \"fc-timegrid-slots\" },\n            createElement(\"table\", { \"aria-hidden\": true, className: context.theme.getClass('table'), style: {\n                    minWidth: props.tableMinWidth,\n                    width: props.clientWidth,\n                    height: props.minHeight,\n                } },\n                props.tableColGroupNode /* relies on there only being a single <col> for the axis */,\n                createElement(TimeColsSlatsBody, { slatElRefs: this.slatElRefs, axis: props.axis, slatMetas: props.slatMetas }))));\n    }\n    componentDidMount() {\n        this.updateSizing();\n    }\n    componentDidUpdate() {\n        this.updateSizing();\n    }\n    componentWillUnmount() {\n        if (this.props.onCoords) {\n            this.props.onCoords(null);\n        }\n    }\n    updateSizing() {\n        let { context, props } = this;\n        if (props.onCoords &&\n            props.clientWidth !== null // means sizing has stabilized\n        ) {\n            let rootEl = this.rootElRef.current;\n            if (rootEl.offsetHeight) { // not hidden by css\n                props.onCoords(new TimeColsSlatsCoords(new PositionCache(this.rootElRef.current, collectSlatEls(this.slatElRefs.currentMap, props.slatMetas), false, true), this.props.dateProfile, context.options.slotDuration));\n            }\n        }\n    }\n}\nfunction collectSlatEls(elMap, slatMetas) {\n    return slatMetas.map((slatMeta) => elMap[slatMeta.key]);\n}\n\nfunction splitSegsByCol(segs, colCnt) {\n    let segsByCol = [];\n    let i;\n    for (i = 0; i < colCnt; i += 1) {\n        segsByCol.push([]);\n    }\n    if (segs) {\n        for (i = 0; i < segs.length; i += 1) {\n            segsByCol[segs[i].col].push(segs[i]);\n        }\n    }\n    return segsByCol;\n}\nfunction splitInteractionByCol(ui, colCnt) {\n    let byRow = [];\n    if (!ui) {\n        for (let i = 0; i < colCnt; i += 1) {\n            byRow[i] = null;\n        }\n    }\n    else {\n        for (let i = 0; i < colCnt; i += 1) {\n            byRow[i] = {\n                affectedInstances: ui.affectedInstances,\n                isEvent: ui.isEvent,\n                segs: [],\n            };\n        }\n        for (let seg of ui.segs) {\n            byRow[seg.col].segs.push(seg);\n        }\n    }\n    return byRow;\n}\n\nclass TimeColMoreLink extends BaseComponent {\n    render() {\n        let { props } = this;\n        return (createElement(MoreLinkContainer, { elClasses: ['fc-timegrid-more-link'], elStyle: {\n                top: props.top,\n                bottom: props.bottom,\n            }, allDayDate: null, moreCnt: props.hiddenSegs.length, allSegs: props.hiddenSegs, hiddenSegs: props.hiddenSegs, extraDateSpan: props.extraDateSpan, dateProfile: props.dateProfile, todayRange: props.todayRange, popoverContent: () => renderPlainFgSegs(props.hiddenSegs, props), defaultGenerator: renderMoreLinkInner, forceTimed: true }, (InnerContent) => (createElement(InnerContent, { elTag: \"div\", elClasses: ['fc-timegrid-more-link-inner', 'fc-sticky'] }))));\n    }\n}\nfunction renderMoreLinkInner(props) {\n    return props.shortText;\n}\n\n// segInputs assumed sorted\nfunction buildPositioning(segInputs, strictOrder, maxStackCnt) {\n    let hierarchy = new SegHierarchy();\n    if (strictOrder != null) {\n        hierarchy.strictOrder = strictOrder;\n    }\n    if (maxStackCnt != null) {\n        hierarchy.maxStackCnt = maxStackCnt;\n    }\n    let hiddenEntries = hierarchy.addSegs(segInputs);\n    let hiddenGroups = groupIntersectingEntries(hiddenEntries);\n    let web = buildWeb(hierarchy);\n    web = stretchWeb(web, 1); // all levelCoords/thickness will have 0.0-1.0\n    let segRects = webToRects(web);\n    return { segRects, hiddenGroups };\n}\nfunction buildWeb(hierarchy) {\n    const { entriesByLevel } = hierarchy;\n    const buildNode = cacheable((level, lateral) => level + ':' + lateral, (level, lateral) => {\n        let siblingRange = findNextLevelSegs(hierarchy, level, lateral);\n        let nextLevelRes = buildNodes(siblingRange, buildNode);\n        let entry = entriesByLevel[level][lateral];\n        return [\n            Object.assign(Object.assign({}, entry), { nextLevelNodes: nextLevelRes[0] }),\n            entry.thickness + nextLevelRes[1], // the pressure builds\n        ];\n    });\n    return buildNodes(entriesByLevel.length\n        ? { level: 0, lateralStart: 0, lateralEnd: entriesByLevel[0].length }\n        : null, buildNode)[0];\n}\nfunction buildNodes(siblingRange, buildNode) {\n    if (!siblingRange) {\n        return [[], 0];\n    }\n    let { level, lateralStart, lateralEnd } = siblingRange;\n    let lateral = lateralStart;\n    let pairs = [];\n    while (lateral < lateralEnd) {\n        pairs.push(buildNode(level, lateral));\n        lateral += 1;\n    }\n    pairs.sort(cmpDescPressures);\n    return [\n        pairs.map(extractNode),\n        pairs[0][1], // first item's pressure\n    ];\n}\nfunction cmpDescPressures(a, b) {\n    return b[1] - a[1];\n}\nfunction extractNode(a) {\n    return a[0];\n}\nfunction findNextLevelSegs(hierarchy, subjectLevel, subjectLateral) {\n    let { levelCoords, entriesByLevel } = hierarchy;\n    let subjectEntry = entriesByLevel[subjectLevel][subjectLateral];\n    let afterSubject = levelCoords[subjectLevel] + subjectEntry.thickness;\n    let levelCnt = levelCoords.length;\n    let level = subjectLevel;\n    // skip past levels that are too high up\n    for (; level < levelCnt && levelCoords[level] < afterSubject; level += 1)\n        ; // do nothing\n    for (; level < levelCnt; level += 1) {\n        let entries = entriesByLevel[level];\n        let entry;\n        let searchIndex = binarySearch(entries, subjectEntry.span.start, getEntrySpanEnd);\n        let lateralStart = searchIndex[0] + searchIndex[1]; // if exact match (which doesn't collide), go to next one\n        let lateralEnd = lateralStart;\n        while ( // loop through entries that horizontally intersect\n        (entry = entries[lateralEnd]) && // but not past the whole seg list\n            entry.span.start < subjectEntry.span.end) {\n            lateralEnd += 1;\n        }\n        if (lateralStart < lateralEnd) {\n            return { level, lateralStart, lateralEnd };\n        }\n    }\n    return null;\n}\nfunction stretchWeb(topLevelNodes, totalThickness) {\n    const stretchNode = cacheable((node, startCoord, prevThickness) => buildEntryKey(node), (node, startCoord, prevThickness) => {\n        let { nextLevelNodes, thickness } = node;\n        let allThickness = thickness + prevThickness;\n        let thicknessFraction = thickness / allThickness;\n        let endCoord;\n        let newChildren = [];\n        if (!nextLevelNodes.length) {\n            endCoord = totalThickness;\n        }\n        else {\n            for (let childNode of nextLevelNodes) {\n                if (endCoord === undefined) {\n                    let res = stretchNode(childNode, startCoord, allThickness);\n                    endCoord = res[0];\n                    newChildren.push(res[1]);\n                }\n                else {\n                    let res = stretchNode(childNode, endCoord, 0);\n                    newChildren.push(res[1]);\n                }\n            }\n        }\n        let newThickness = (endCoord - startCoord) * thicknessFraction;\n        return [endCoord - newThickness, Object.assign(Object.assign({}, node), { thickness: newThickness, nextLevelNodes: newChildren })];\n    });\n    return topLevelNodes.map((node) => stretchNode(node, 0, 0)[1]);\n}\n// not sorted in any particular order\nfunction webToRects(topLevelNodes) {\n    let rects = [];\n    const processNode = cacheable((node, levelCoord, stackDepth) => buildEntryKey(node), (node, levelCoord, stackDepth) => {\n        let rect = Object.assign(Object.assign({}, node), { levelCoord,\n            stackDepth, stackForward: 0 });\n        rects.push(rect);\n        return (rect.stackForward = processNodes(node.nextLevelNodes, levelCoord + node.thickness, stackDepth + 1) + 1);\n    });\n    function processNodes(nodes, levelCoord, stackDepth) {\n        let stackForward = 0;\n        for (let node of nodes) {\n            stackForward = Math.max(processNode(node, levelCoord, stackDepth), stackForward);\n        }\n        return stackForward;\n    }\n    processNodes(topLevelNodes, 0, 0);\n    return rects; // TODO: sort rects by levelCoord to be consistent with toRects?\n}\n// TODO: move to general util\nfunction cacheable(keyFunc, workFunc) {\n    const cache = {};\n    return (...args) => {\n        let key = keyFunc(...args);\n        return (key in cache)\n            ? cache[key]\n            : (cache[key] = workFunc(...args));\n    };\n}\n\nfunction computeSegVCoords(segs, colDate, slatCoords = null, eventMinHeight = 0) {\n    let vcoords = [];\n    if (slatCoords) {\n        for (let i = 0; i < segs.length; i += 1) {\n            let seg = segs[i];\n            let spanStart = slatCoords.computeDateTop(seg.start, colDate);\n            let spanEnd = Math.max(spanStart + (eventMinHeight || 0), // :(\n            slatCoords.computeDateTop(seg.end, colDate));\n            vcoords.push({\n                start: Math.round(spanStart),\n                end: Math.round(spanEnd), //\n            });\n        }\n    }\n    return vcoords;\n}\nfunction computeFgSegPlacements(segs, segVCoords, // might not have for every seg\neventOrderStrict, eventMaxStack) {\n    let segInputs = [];\n    let dumbSegs = []; // segs without coords\n    for (let i = 0; i < segs.length; i += 1) {\n        let vcoords = segVCoords[i];\n        if (vcoords) {\n            segInputs.push({\n                index: i,\n                thickness: 1,\n                span: vcoords,\n            });\n        }\n        else {\n            dumbSegs.push(segs[i]);\n        }\n    }\n    let { segRects, hiddenGroups } = buildPositioning(segInputs, eventOrderStrict, eventMaxStack);\n    let segPlacements = [];\n    for (let segRect of segRects) {\n        segPlacements.push({\n            seg: segs[segRect.index],\n            rect: segRect,\n        });\n    }\n    for (let dumbSeg of dumbSegs) {\n        segPlacements.push({ seg: dumbSeg, rect: null });\n    }\n    return { segPlacements, hiddenGroups };\n}\n\nconst DEFAULT_TIME_FORMAT = createFormatter({\n    hour: 'numeric',\n    minute: '2-digit',\n    meridiem: false,\n});\nclass TimeColEvent extends BaseComponent {\n    render() {\n        return (createElement(StandardEvent, Object.assign({}, this.props, { elClasses: [\n                'fc-timegrid-event',\n                'fc-v-event',\n                this.props.isShort && 'fc-timegrid-event-short',\n            ], defaultTimeFormat: DEFAULT_TIME_FORMAT })));\n    }\n}\n\nclass TimeCol extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.sortEventSegs = memoize(sortEventSegs);\n    }\n    // TODO: memoize event-placement?\n    render() {\n        let { props, context } = this;\n        let { options } = context;\n        let isSelectMirror = options.selectMirror;\n        let mirrorSegs = // yuck\n         (props.eventDrag && props.eventDrag.segs) ||\n            (props.eventResize && props.eventResize.segs) ||\n            (isSelectMirror && props.dateSelectionSegs) ||\n            [];\n        let interactionAffectedInstances = // TODO: messy way to compute this\n         (props.eventDrag && props.eventDrag.affectedInstances) ||\n            (props.eventResize && props.eventResize.affectedInstances) ||\n            {};\n        let sortedFgSegs = this.sortEventSegs(props.fgEventSegs, options.eventOrder);\n        return (createElement(DayCellContainer, { elTag: \"td\", elRef: props.elRef, elClasses: [\n                'fc-timegrid-col',\n                ...(props.extraClassNames || []),\n            ], elAttrs: Object.assign({ role: 'gridcell' }, props.extraDataAttrs), date: props.date, dateProfile: props.dateProfile, todayRange: props.todayRange, extraRenderProps: props.extraRenderProps }, (InnerContent) => (createElement(\"div\", { className: \"fc-timegrid-col-frame\" },\n            createElement(\"div\", { className: \"fc-timegrid-col-bg\" },\n                this.renderFillSegs(props.businessHourSegs, 'non-business'),\n                this.renderFillSegs(props.bgEventSegs, 'bg-event'),\n                this.renderFillSegs(props.dateSelectionSegs, 'highlight')),\n            createElement(\"div\", { className: \"fc-timegrid-col-events\" }, this.renderFgSegs(sortedFgSegs, interactionAffectedInstances, false, false, false)),\n            createElement(\"div\", { className: \"fc-timegrid-col-events\" }, this.renderFgSegs(mirrorSegs, {}, Boolean(props.eventDrag), Boolean(props.eventResize), Boolean(isSelectMirror), 'mirror')),\n            createElement(\"div\", { className: \"fc-timegrid-now-indicator-container\" }, this.renderNowIndicator(props.nowIndicatorSegs)),\n            hasCustomDayCellContent(options) && (createElement(InnerContent, { elTag: \"div\", elClasses: ['fc-timegrid-col-misc'] }))))));\n    }\n    renderFgSegs(sortedFgSegs, segIsInvisible, isDragging, isResizing, isDateSelecting, forcedKey) {\n        let { props } = this;\n        if (props.forPrint) {\n            return renderPlainFgSegs(sortedFgSegs, props);\n        }\n        return this.renderPositionedFgSegs(sortedFgSegs, segIsInvisible, isDragging, isResizing, isDateSelecting, forcedKey);\n    }\n    renderPositionedFgSegs(segs, // if not mirror, needs to be sorted\n    segIsInvisible, isDragging, isResizing, isDateSelecting, forcedKey) {\n        let { eventMaxStack, eventShortHeight, eventOrderStrict, eventMinHeight } = this.context.options;\n        let { date, slatCoords, eventSelection, todayRange, nowDate } = this.props;\n        let isMirror = isDragging || isResizing || isDateSelecting;\n        let segVCoords = computeSegVCoords(segs, date, slatCoords, eventMinHeight);\n        let { segPlacements, hiddenGroups } = computeFgSegPlacements(segs, segVCoords, eventOrderStrict, eventMaxStack);\n        return (createElement(Fragment, null,\n            this.renderHiddenGroups(hiddenGroups, segs),\n            segPlacements.map((segPlacement) => {\n                let { seg, rect } = segPlacement;\n                let instanceId = seg.eventRange.instance.instanceId;\n                let isVisible = isMirror || Boolean(!segIsInvisible[instanceId] && rect);\n                let vStyle = computeSegVStyle(rect && rect.span);\n                let hStyle = (!isMirror && rect) ? this.computeSegHStyle(rect) : { left: 0, right: 0 };\n                let isInset = Boolean(rect) && rect.stackForward > 0;\n                let isShort = Boolean(rect) && (rect.span.end - rect.span.start) < eventShortHeight; // look at other places for this problem\n                return (createElement(\"div\", { className: 'fc-timegrid-event-harness' +\n                        (isInset ? ' fc-timegrid-event-harness-inset' : ''), key: forcedKey || instanceId, style: Object.assign(Object.assign({ visibility: isVisible ? '' : 'hidden' }, vStyle), hStyle) },\n                    createElement(TimeColEvent, Object.assign({ seg: seg, isDragging: isDragging, isResizing: isResizing, isDateSelecting: isDateSelecting, isSelected: instanceId === eventSelection, isShort: isShort }, getSegMeta(seg, todayRange, nowDate)))));\n            })));\n    }\n    // will already have eventMinHeight applied because segInputs already had it\n    renderHiddenGroups(hiddenGroups, segs) {\n        let { extraDateSpan, dateProfile, todayRange, nowDate, eventSelection, eventDrag, eventResize } = this.props;\n        return (createElement(Fragment, null, hiddenGroups.map((hiddenGroup) => {\n            let positionCss = computeSegVStyle(hiddenGroup.span);\n            let hiddenSegs = compileSegsFromEntries(hiddenGroup.entries, segs);\n            return (createElement(TimeColMoreLink, { key: buildIsoString(computeEarliestSegStart(hiddenSegs)), hiddenSegs: hiddenSegs, top: positionCss.top, bottom: positionCss.bottom, extraDateSpan: extraDateSpan, dateProfile: dateProfile, todayRange: todayRange, nowDate: nowDate, eventSelection: eventSelection, eventDrag: eventDrag, eventResize: eventResize }));\n        })));\n    }\n    renderFillSegs(segs, fillType) {\n        let { props, context } = this;\n        let segVCoords = computeSegVCoords(segs, props.date, props.slatCoords, context.options.eventMinHeight); // don't assume all populated\n        let children = segVCoords.map((vcoords, i) => {\n            let seg = segs[i];\n            return (createElement(\"div\", { key: buildEventRangeKey(seg.eventRange), className: \"fc-timegrid-bg-harness\", style: computeSegVStyle(vcoords) }, fillType === 'bg-event' ?\n                createElement(BgEvent, Object.assign({ seg: seg }, getSegMeta(seg, props.todayRange, props.nowDate))) :\n                renderFill(fillType)));\n        });\n        return createElement(Fragment, null, children);\n    }\n    renderNowIndicator(segs) {\n        let { slatCoords, date } = this.props;\n        if (!slatCoords) {\n            return null;\n        }\n        return segs.map((seg, i) => (createElement(NowIndicatorContainer\n        // key doesn't matter. will only ever be one\n        , { \n            // key doesn't matter. will only ever be one\n            key: i, elClasses: ['fc-timegrid-now-indicator-line'], elStyle: {\n                top: slatCoords.computeDateTop(seg.start, date),\n            }, isAxis: false, date: date })));\n    }\n    computeSegHStyle(segHCoords) {\n        let { isRtl, options } = this.context;\n        let shouldOverlap = options.slotEventOverlap;\n        let nearCoord = segHCoords.levelCoord; // the left side if LTR. the right side if RTL. floating-point\n        let farCoord = segHCoords.levelCoord + segHCoords.thickness; // the right side if LTR. the left side if RTL. floating-point\n        let left; // amount of space from left edge, a fraction of the total width\n        let right; // amount of space from right edge, a fraction of the total width\n        if (shouldOverlap) {\n            // double the width, but don't go beyond the maximum forward coordinate (1.0)\n            farCoord = Math.min(1, nearCoord + (farCoord - nearCoord) * 2);\n        }\n        if (isRtl) {\n            left = 1 - farCoord;\n            right = nearCoord;\n        }\n        else {\n            left = nearCoord;\n            right = 1 - farCoord;\n        }\n        let props = {\n            zIndex: segHCoords.stackDepth + 1,\n            left: left * 100 + '%',\n            right: right * 100 + '%',\n        };\n        if (shouldOverlap && !segHCoords.stackForward) {\n            // add padding to the edge so that forward stacked events don't cover the resizer's icon\n            props[isRtl ? 'marginLeft' : 'marginRight'] = 10 * 2; // 10 is a guesstimate of the icon's width\n        }\n        return props;\n    }\n}\nfunction renderPlainFgSegs(sortedFgSegs, { todayRange, nowDate, eventSelection, eventDrag, eventResize }) {\n    let hiddenInstances = (eventDrag ? eventDrag.affectedInstances : null) ||\n        (eventResize ? eventResize.affectedInstances : null) ||\n        {};\n    return (createElement(Fragment, null, sortedFgSegs.map((seg) => {\n        let instanceId = seg.eventRange.instance.instanceId;\n        return (createElement(\"div\", { key: instanceId, style: { visibility: hiddenInstances[instanceId] ? 'hidden' : '' } },\n            createElement(TimeColEvent, Object.assign({ seg: seg, isDragging: false, isResizing: false, isDateSelecting: false, isSelected: instanceId === eventSelection, isShort: false }, getSegMeta(seg, todayRange, nowDate)))));\n    })));\n}\nfunction computeSegVStyle(segVCoords) {\n    if (!segVCoords) {\n        return { top: '', bottom: '' };\n    }\n    return {\n        top: segVCoords.start,\n        bottom: -segVCoords.end,\n    };\n}\nfunction compileSegsFromEntries(segEntries, allSegs) {\n    return segEntries.map((segEntry) => allSegs[segEntry.index]);\n}\n\nclass TimeColsContent extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.splitFgEventSegs = memoize(splitSegsByCol);\n        this.splitBgEventSegs = memoize(splitSegsByCol);\n        this.splitBusinessHourSegs = memoize(splitSegsByCol);\n        this.splitNowIndicatorSegs = memoize(splitSegsByCol);\n        this.splitDateSelectionSegs = memoize(splitSegsByCol);\n        this.splitEventDrag = memoize(splitInteractionByCol);\n        this.splitEventResize = memoize(splitInteractionByCol);\n        this.rootElRef = createRef();\n        this.cellElRefs = new RefMap();\n    }\n    render() {\n        let { props, context } = this;\n        let nowIndicatorTop = context.options.nowIndicator &&\n            props.slatCoords &&\n            props.slatCoords.safeComputeTop(props.nowDate); // might return void\n        let colCnt = props.cells.length;\n        let fgEventSegsByRow = this.splitFgEventSegs(props.fgEventSegs, colCnt);\n        let bgEventSegsByRow = this.splitBgEventSegs(props.bgEventSegs, colCnt);\n        let businessHourSegsByRow = this.splitBusinessHourSegs(props.businessHourSegs, colCnt);\n        let nowIndicatorSegsByRow = this.splitNowIndicatorSegs(props.nowIndicatorSegs, colCnt);\n        let dateSelectionSegsByRow = this.splitDateSelectionSegs(props.dateSelectionSegs, colCnt);\n        let eventDragByRow = this.splitEventDrag(props.eventDrag, colCnt);\n        let eventResizeByRow = this.splitEventResize(props.eventResize, colCnt);\n        return (createElement(\"div\", { className: \"fc-timegrid-cols\", ref: this.rootElRef },\n            createElement(\"table\", { role: \"presentation\", style: {\n                    minWidth: props.tableMinWidth,\n                    width: props.clientWidth,\n                } },\n                props.tableColGroupNode,\n                createElement(\"tbody\", { role: \"presentation\" },\n                    createElement(\"tr\", { role: \"row\" },\n                        props.axis && (createElement(\"td\", { \"aria-hidden\": true, className: \"fc-timegrid-col fc-timegrid-axis\" },\n                            createElement(\"div\", { className: \"fc-timegrid-col-frame\" },\n                                createElement(\"div\", { className: \"fc-timegrid-now-indicator-container\" }, typeof nowIndicatorTop === 'number' && (createElement(NowIndicatorContainer, { elClasses: ['fc-timegrid-now-indicator-arrow'], elStyle: { top: nowIndicatorTop }, isAxis: true, date: props.nowDate })))))),\n                        props.cells.map((cell, i) => (createElement(TimeCol, { key: cell.key, elRef: this.cellElRefs.createRef(cell.key), dateProfile: props.dateProfile, date: cell.date, nowDate: props.nowDate, todayRange: props.todayRange, extraRenderProps: cell.extraRenderProps, extraDataAttrs: cell.extraDataAttrs, extraClassNames: cell.extraClassNames, extraDateSpan: cell.extraDateSpan, fgEventSegs: fgEventSegsByRow[i], bgEventSegs: bgEventSegsByRow[i], businessHourSegs: businessHourSegsByRow[i], nowIndicatorSegs: nowIndicatorSegsByRow[i], dateSelectionSegs: dateSelectionSegsByRow[i], eventDrag: eventDragByRow[i], eventResize: eventResizeByRow[i], slatCoords: props.slatCoords, eventSelection: props.eventSelection, forPrint: props.forPrint }))))))));\n    }\n    componentDidMount() {\n        this.updateCoords();\n    }\n    componentDidUpdate() {\n        this.updateCoords();\n    }\n    updateCoords() {\n        let { props } = this;\n        if (props.onColCoords &&\n            props.clientWidth !== null // means sizing has stabilized\n        ) {\n            props.onColCoords(new PositionCache(this.rootElRef.current, collectCellEls(this.cellElRefs.currentMap, props.cells), true, // horizontal\n            false));\n        }\n    }\n}\nfunction collectCellEls(elMap, cells) {\n    return cells.map((cell) => elMap[cell.key]);\n}\n\n/* A component that renders one or more columns of vertical time slots\n----------------------------------------------------------------------------------------------------------------------*/\nclass TimeCols extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.processSlotOptions = memoize(processSlotOptions);\n        this.state = {\n            slatCoords: null,\n        };\n        this.handleRootEl = (el) => {\n            if (el) {\n                this.context.registerInteractiveComponent(this, {\n                    el,\n                    isHitComboAllowed: this.props.isHitComboAllowed,\n                });\n            }\n            else {\n                this.context.unregisterInteractiveComponent(this);\n            }\n        };\n        this.handleScrollRequest = (request) => {\n            let { onScrollTopRequest } = this.props;\n            let { slatCoords } = this.state;\n            if (onScrollTopRequest && slatCoords) {\n                if (request.time) {\n                    let top = slatCoords.computeTimeTop(request.time);\n                    top = Math.ceil(top); // zoom can give weird floating-point values. rather scroll a little bit further\n                    if (top) {\n                        top += 1; // to overcome top border that slots beyond the first have. looks better\n                    }\n                    onScrollTopRequest(top);\n                }\n                return true;\n            }\n            return false;\n        };\n        this.handleColCoords = (colCoords) => {\n            this.colCoords = colCoords;\n        };\n        this.handleSlatCoords = (slatCoords) => {\n            this.setState({ slatCoords });\n            if (this.props.onSlatCoords) {\n                this.props.onSlatCoords(slatCoords);\n            }\n        };\n    }\n    render() {\n        let { props, state } = this;\n        return (createElement(\"div\", { className: \"fc-timegrid-body\", ref: this.handleRootEl, style: {\n                // these props are important to give this wrapper correct dimensions for interactions\n                // TODO: if we set it here, can we avoid giving to inner tables?\n                width: props.clientWidth,\n                minWidth: props.tableMinWidth,\n            } },\n            createElement(TimeColsSlats, { axis: props.axis, dateProfile: props.dateProfile, slatMetas: props.slatMetas, clientWidth: props.clientWidth, minHeight: props.expandRows ? props.clientHeight : '', tableMinWidth: props.tableMinWidth, tableColGroupNode: props.axis ? props.tableColGroupNode : null /* axis depends on the colgroup's shrinking */, onCoords: this.handleSlatCoords }),\n            createElement(TimeColsContent, { cells: props.cells, axis: props.axis, dateProfile: props.dateProfile, businessHourSegs: props.businessHourSegs, bgEventSegs: props.bgEventSegs, fgEventSegs: props.fgEventSegs, dateSelectionSegs: props.dateSelectionSegs, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, todayRange: props.todayRange, nowDate: props.nowDate, nowIndicatorSegs: props.nowIndicatorSegs, clientWidth: props.clientWidth, tableMinWidth: props.tableMinWidth, tableColGroupNode: props.tableColGroupNode, slatCoords: state.slatCoords, onColCoords: this.handleColCoords, forPrint: props.forPrint })));\n    }\n    componentDidMount() {\n        this.scrollResponder = this.context.createScrollResponder(this.handleScrollRequest);\n    }\n    componentDidUpdate(prevProps) {\n        this.scrollResponder.update(prevProps.dateProfile !== this.props.dateProfile);\n    }\n    componentWillUnmount() {\n        this.scrollResponder.detach();\n    }\n    queryHit(positionLeft, positionTop) {\n        let { dateEnv, options } = this.context;\n        let { colCoords } = this;\n        let { dateProfile } = this.props;\n        let { slatCoords } = this.state;\n        let { snapDuration, snapsPerSlot } = this.processSlotOptions(this.props.slotDuration, options.snapDuration);\n        let colIndex = colCoords.leftToIndex(positionLeft);\n        let slatIndex = slatCoords.positions.topToIndex(positionTop);\n        if (colIndex != null && slatIndex != null) {\n            let cell = this.props.cells[colIndex];\n            let slatTop = slatCoords.positions.tops[slatIndex];\n            let slatHeight = slatCoords.positions.getHeight(slatIndex);\n            let partial = (positionTop - slatTop) / slatHeight; // floating point number between 0 and 1\n            let localSnapIndex = Math.floor(partial * snapsPerSlot); // the snap # relative to start of slat\n            let snapIndex = slatIndex * snapsPerSlot + localSnapIndex;\n            let dayDate = this.props.cells[colIndex].date;\n            let time = addDurations(dateProfile.slotMinTime, multiplyDuration(snapDuration, snapIndex));\n            let start = dateEnv.add(dayDate, time);\n            let end = dateEnv.add(start, snapDuration);\n            return {\n                dateProfile,\n                dateSpan: Object.assign({ range: { start, end }, allDay: false }, cell.extraDateSpan),\n                dayEl: colCoords.els[colIndex],\n                rect: {\n                    left: colCoords.lefts[colIndex],\n                    right: colCoords.rights[colIndex],\n                    top: slatTop,\n                    bottom: slatTop + slatHeight,\n                },\n                layer: 0,\n            };\n        }\n        return null;\n    }\n}\nfunction processSlotOptions(slotDuration, snapDurationOverride) {\n    let snapDuration = snapDurationOverride || slotDuration;\n    let snapsPerSlot = wholeDivideDurations(slotDuration, snapDuration);\n    if (snapsPerSlot === null) {\n        snapDuration = slotDuration;\n        snapsPerSlot = 1;\n        // TODO: say warning?\n    }\n    return { snapDuration, snapsPerSlot };\n}\n\nclass DayTimeColsSlicer extends Slicer {\n    sliceRange(range, dayRanges) {\n        let segs = [];\n        for (let col = 0; col < dayRanges.length; col += 1) {\n            let segRange = intersectRanges(range, dayRanges[col]);\n            if (segRange) {\n                segs.push({\n                    start: segRange.start,\n                    end: segRange.end,\n                    isStart: segRange.start.valueOf() === range.start.valueOf(),\n                    isEnd: segRange.end.valueOf() === range.end.valueOf(),\n                    col,\n                });\n            }\n        }\n        return segs;\n    }\n}\n\nclass DayTimeCols extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.buildDayRanges = memoize(buildDayRanges);\n        this.slicer = new DayTimeColsSlicer();\n        this.timeColsRef = createRef();\n    }\n    render() {\n        let { props, context } = this;\n        let { dateProfile, dayTableModel } = props;\n        let { nowIndicator, nextDayThreshold } = context.options;\n        let dayRanges = this.buildDayRanges(dayTableModel, dateProfile, context.dateEnv);\n        // give it the first row of cells\n        // TODO: would move this further down hierarchy, but sliceNowDate needs it\n        return (createElement(NowTimer, { unit: nowIndicator ? 'minute' : 'day' }, (nowDate, todayRange) => (createElement(TimeCols, Object.assign({ ref: this.timeColsRef }, this.slicer.sliceProps(props, dateProfile, null, context, dayRanges), { forPrint: props.forPrint, axis: props.axis, dateProfile: dateProfile, slatMetas: props.slatMetas, slotDuration: props.slotDuration, cells: dayTableModel.cells[0], tableColGroupNode: props.tableColGroupNode, tableMinWidth: props.tableMinWidth, clientWidth: props.clientWidth, clientHeight: props.clientHeight, expandRows: props.expandRows, nowDate: nowDate, nowIndicatorSegs: nowIndicator && this.slicer.sliceNowDate(nowDate, dateProfile, nextDayThreshold, context, dayRanges), todayRange: todayRange, onScrollTopRequest: props.onScrollTopRequest, onSlatCoords: props.onSlatCoords })))));\n    }\n}\nfunction buildDayRanges(dayTableModel, dateProfile, dateEnv) {\n    let ranges = [];\n    for (let date of dayTableModel.headerDates) {\n        ranges.push({\n            start: dateEnv.add(date, dateProfile.slotMinTime),\n            end: dateEnv.add(date, dateProfile.slotMaxTime),\n        });\n    }\n    return ranges;\n}\n\n// potential nice values for the slot-duration and interval-duration\n// from largest to smallest\nconst STOCK_SUB_DURATIONS = [\n    { hours: 1 },\n    { minutes: 30 },\n    { minutes: 15 },\n    { seconds: 30 },\n    { seconds: 15 },\n];\nfunction buildSlatMetas(slotMinTime, slotMaxTime, explicitLabelInterval, slotDuration, dateEnv) {\n    let dayStart = new Date(0);\n    let slatTime = slotMinTime;\n    let slatIterator = createDuration(0);\n    let labelInterval = explicitLabelInterval || computeLabelInterval(slotDuration);\n    let metas = [];\n    while (asRoughMs(slatTime) < asRoughMs(slotMaxTime)) {\n        let date = dateEnv.add(dayStart, slatTime);\n        let isLabeled = wholeDivideDurations(slatIterator, labelInterval) !== null;\n        metas.push({\n            date,\n            time: slatTime,\n            key: date.toISOString(),\n            isoTimeStr: formatIsoTimeString(date),\n            isLabeled,\n        });\n        slatTime = addDurations(slatTime, slotDuration);\n        slatIterator = addDurations(slatIterator, slotDuration);\n    }\n    return metas;\n}\n// Computes an automatic value for slotLabelInterval\nfunction computeLabelInterval(slotDuration) {\n    let i;\n    let labelInterval;\n    let slotsPerLabel;\n    // find the smallest stock label interval that results in more than one slots-per-label\n    for (i = STOCK_SUB_DURATIONS.length - 1; i >= 0; i -= 1) {\n        labelInterval = createDuration(STOCK_SUB_DURATIONS[i]);\n        slotsPerLabel = wholeDivideDurations(labelInterval, slotDuration);\n        if (slotsPerLabel !== null && slotsPerLabel > 1) {\n            return labelInterval;\n        }\n    }\n    return slotDuration; // fall back\n}\n\nclass DayTimeColsView extends TimeColsView {\n    constructor() {\n        super(...arguments);\n        this.buildTimeColsModel = memoize(buildTimeColsModel);\n        this.buildSlatMetas = memoize(buildSlatMetas);\n    }\n    render() {\n        let { options, dateEnv, dateProfileGenerator } = this.context;\n        let { props } = this;\n        let { dateProfile } = props;\n        let dayTableModel = this.buildTimeColsModel(dateProfile, dateProfileGenerator);\n        let splitProps = this.allDaySplitter.splitProps(props);\n        let slatMetas = this.buildSlatMetas(dateProfile.slotMinTime, dateProfile.slotMaxTime, options.slotLabelInterval, options.slotDuration, dateEnv);\n        let { dayMinWidth } = options;\n        let hasAttachedAxis = !dayMinWidth;\n        let hasDetachedAxis = dayMinWidth;\n        let headerContent = options.dayHeaders && (createElement(DayHeader, { dates: dayTableModel.headerDates, dateProfile: dateProfile, datesRepDistinctDays: true, renderIntro: hasAttachedAxis ? this.renderHeadAxis : null }));\n        let allDayContent = (options.allDaySlot !== false) && ((contentArg) => (createElement(DayTable, Object.assign({}, splitProps.allDay, { dateProfile: dateProfile, dayTableModel: dayTableModel, nextDayThreshold: options.nextDayThreshold, tableMinWidth: contentArg.tableMinWidth, colGroupNode: contentArg.tableColGroupNode, renderRowIntro: hasAttachedAxis ? this.renderTableRowAxis : null, showWeekNumbers: false, expandRows: false, headerAlignElRef: this.headerElRef, clientWidth: contentArg.clientWidth, clientHeight: contentArg.clientHeight, forPrint: props.forPrint }, this.getAllDayMaxEventProps()))));\n        let timeGridContent = (contentArg) => (createElement(DayTimeCols, Object.assign({}, splitProps.timed, { dayTableModel: dayTableModel, dateProfile: dateProfile, axis: hasAttachedAxis, slotDuration: options.slotDuration, slatMetas: slatMetas, forPrint: props.forPrint, tableColGroupNode: contentArg.tableColGroupNode, tableMinWidth: contentArg.tableMinWidth, clientWidth: contentArg.clientWidth, clientHeight: contentArg.clientHeight, onSlatCoords: this.handleSlatCoords, expandRows: contentArg.expandRows, onScrollTopRequest: this.handleScrollTopRequest })));\n        return hasDetachedAxis\n            ? this.renderHScrollLayout(headerContent, allDayContent, timeGridContent, dayTableModel.colCnt, dayMinWidth, slatMetas, this.state.slatCoords)\n            : this.renderSimpleLayout(headerContent, allDayContent, timeGridContent);\n    }\n}\nfunction buildTimeColsModel(dateProfile, dateProfileGenerator) {\n    let daySeries = new DaySeriesModel(dateProfile.renderRange, dateProfileGenerator);\n    return new DayTableModel(daySeries, false);\n}\n\nexport { DayTimeCols, DayTimeColsSlicer, DayTimeColsView, TimeCols, TimeColsSlatsCoords, TimeColsView, buildDayRanges, buildSlatMetas, buildTimeColsModel };\n","import { createPlugin } from '@fullcalendar/core/index.js';\nimport { DayTimeColsView } from './internal.js';\nimport '@fullcalendar/core/internal.js';\nimport '@fullcalendar/core/preact.js';\nimport '@fullcalendar/daygrid/internal.js';\n\nconst OPTION_REFINERS = {\n    allDaySlot: Boolean,\n};\n\nvar index = createPlugin({\n    name: '@fullcalendar/timegrid',\n    initialView: 'timeGridWeek',\n    optionRefiners: OPTION_REFINERS,\n    views: {\n        timeGrid: {\n            component: DayTimeColsView,\n            usesMinMaxTime: true,\n            allDaySlot: true,\n            slotDuration: '00:30:00',\n            slotEventOverlap: true, // a bad name. confused with overlap/constraint system\n        },\n        timeGridDay: {\n            type: 'timeGrid',\n            duration: { days: 1 },\n        },\n        timeGridWeek: {\n            type: 'timeGrid',\n            duration: { weeks: 1 },\n        },\n    },\n});\n\nexport { index as default };\n"],"names":["index","createPlugin","name","initialView","views","dayGrid","component","DayTableView","dateProfileGeneratorClass","TableDateProfileGenerator","dayGridDay","type","duration","days","dayGridWeek","weeks","dayGridMonth","months","fixedWeekCount","dayGridYear","years","splitSegsByRow","segs","rowCnt","byRow","i","_step","_iterator","_createForOfIteratorHelper","s","n","done","seg","value","row","push","err","e","f","splitSegsByFirstCol","colCnt","byCol","_step2","_iterator2","firstCol","splitInteractionByRow","ui","affectedInstances","isEvent","_step3","_iterator3","injectStyles","DEFAULT_TABLE_EVENT_TIME_FORMAT","createFormatter","hour","minute","omitZeroMinute","meridiem","hasListItemDisplay","display","eventRange","def","allDay","lastCol","isStart","isEnd","TableBlockEvent","_BaseComponent","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","props","this","createElement","StandardEvent","Object","assign","elClasses","defaultTimeFormat","defaultDisplayEventEnd","disableResizing","BaseComponent","TableListItemEvent","_BaseComponent2","_super2","context","options","timeFormat","eventTimeFormat","timeText","buildSegTimeText","EventContainer","elTag","elAttrs","getSegAnchorAttrs","defaultGenerator","renderInnerContent","isResizing","isDateSelecting","renderProps","Fragment","className","style","borderColor","backgroundColor","event","title","TableCellMoreLink","_BaseComponent3","_super3","_this","compileSegs","memoize","_this$compileSegs","singlePlacements","allSegs","invisibleSegs","MoreLinkContainer","dateProfile","todayRange","allDayDate","moreCnt","hiddenSegs","alignmentElRef","alignGridTop","extraDateSpan","popoverContent","isForcedInvisible","eventDrag","eventResize","map","instanceId","instance","visibility","isDragging","isSelected","eventSelection","getSegMeta","_step4","_iterator4","placement","isVisible","DEFAULT_WEEK_NUM_FORMAT","week","TableCell","_DateComponent","_super4","_this2","rootElRef","createRef","state","dayNumberId","getUniqueDomId","handleRootEl","el","setRef","elRef","dateEnv","date","isMonthStart","showDayNumber","currentRange","currentStart","start","currentEnd","end","currentEndIncl","addMs","currentFirstYear","getYear","currentFirstMonth","getMonth","currentLastYear","currentLastMonth","Boolean","valueOf","getDay","shouldDisplayMonthStart","DayCellContainer","concat","_toConsumableArray","extraClassNames","extraDataAttrs","role","renderTopInner","extraRenderProps","InnerContent","ref","innerElRef","minHeight","showWeekNumber","WeekNumberContainer","buildNavLinkAttrs","defaultFormat","isDisabled","hasCustomDayCellContent","forceDayTop","id","undefined","fgContentElRef","fgContent","marginTop","moreMarginTop","bgContent","DateComponent","dayNumberText","generateSegKey","generateSegUid","computeFgSegPlacement","dayMaxEvents","dayMaxEventRows","strictOrder","segHeights","maxContentHeight","cells","hierarchy","DayGridSegHierarchy","segEntry","segUid","span","allowReslicing","maxCoord","hiddenConsumes","maxStackCnt","segInputs","unknownHeightSegs","length","hiddenEntries","addSegs","_placeRects","allRects","rectsByEachCol","rects","col","_step8","_iterator8","rect","groupRectsByEachCol","singleColPlacements","multiColPlacements","leftoverMargins","_step6","currentHeight","currentMarginTop","_iterator6","resliceSeg","isAbsolute","absoluteTop","levelCoord","thickness","multiPlacements","_step7","_iterator7","isFirstCol","placeRects","toRects","moreCnts","moreMarginTops","_i2","_unknownHeightSegs","_step5","_iterator5","hiddenEntry","hiddenSpan","spanStart","spanEnd","origRange","range","slicedRange","intersectRanges","addDays","durationEditable","_SegHierarchy","_super5","_this3","forceHidden","_this4","_get","_getPrototypeOf","prototype","call","entriesByLevel","excludeHidden","entry","buildEntryKey","level","filter","insertion","touchingEntry","touchingLevel","touchingLateral","touchingEntryId","placeholderEntry","intersectSpans","splitEntry","SegHierarchy","TableRow","_DateComponent2","_super6","_this5","cellElRefs","RefMap","frameElRefs","fgElRefs","segHarnessRefs","framePositions","handleResize","isForced","updateSizing","_this6","businessHoursByCol","businessHourSegs","bgEventSegsByCol","bgEventSegs","highlightSegsByCol","getHighlightSegs","mirrorSegsByCol","getMirrorSegs","_computeFgSegPlacemen","sortEventSegs","fgEventSegs","eventOrder","eventOrderStrict","renderIntro","cell","normalFgNodes","renderFgSegs","forPrint","mirrorFgNodes","mirrorSegs","colPlacements","topsByInstanceId","_step11","_iterator11","_step12","placements","_iterator12","buildAbsoluteTopHash","buildMirrorPlacements","showDayNumbers","showWeekNumbers","renderFillSegs","cellMinHeight","addResizeHandler","prevProps","prevState","currentProps","isPropsEqual","removeResizeHandler","dateSelectionSegs","segPlacements","isMirror","nodes","_step9","_iterator9","left","right","isRtl","lefts","rights","top","fillType","_step10","_iterator10","leftRightCss","buildEventRangeKey","BgEvent","renderFill","isExternalSizingChange","clientWidth","frameEls","currentMap","originEl","current","newPositionCache","PositionCache","similarTo","setState","oldSegHeights","newSegHeights","querySegHeights","limitByContentHeight","safeSetState","computeMaxContentHeight","segElMap","height","Math","round","getBoundingClientRect","max","firstKey","cellEl","fcContainerEl","bottom","elMap","addStateEquality","TableRows","_DateComponent3","_super7","_this7","splitBusinessHourSegs","splitBgEventSegs","splitFgEventSegs","splitDateSelectionSegs","splitEventDrag","splitEventResize","rowRefs","_this8","businessHourSegsByRow","bgEventSegsByRow","fgEventSegsByRow","dateSelectionSegsByRow","eventDragByRow","eventResizeByRow","aspectRatio","NowTimer","unit","nowDate","toISOString","renderRowIntro","isSegAllDay","clientHeight","registerInteractiveComponent","rootEl","firstCellEl","getCellEls","closest","isHitComboAllowed","unregisterInteractiveComponent","rowPositions","collect","rowObj","colPositions","positionLeft","positionTop","leftToIndex","topToIndex","dateSpan","getCellRange","dayEl","getCellEl","tops","bottoms","layer","Table","_DateComponent4","_super8","_this9","needsScrollReset","expandRows","limitViaBalanced","classNames","join","width","minWidth","tableMinWidth","colGroupNode","requestScrollReset","flushScrollReset","subjectEl","containerEl","currentRangeUnit","match","querySelector","formatIsoMonthStr","currentDate","formatDayString","getScrollSubjectEl","scrollEl","scrollTop","DayTableSlicer","_Slicer","_super9","_this10","forceDayIfListItem","dateRange","dayTableModel","sliceRange","Slicer","DayTable","_DateComponent5","_super10","_this11","slicer","tableRef","sliceProps","nextDayThreshold","headerAlignElRef","_DateProfileGenerator","_super11","isRangeAllDay","renderRange","endOfWeek","snapToWeek","startOfWeek","addWeeks","lastMonthRenderStart","startOfMonth","ceil","diffWeeks","buildDayTableRenderRange","test","DateProfileGenerator","TableView","_DateComponent6","_super12","_this12","headerElRef","headerRowContent","bodyContent","sections","stickyHeaderDates","getStickyHeaderDates","isSticky","chunk","tableClassName","rowContent","liquid","content","ViewContainer","viewSpec","SimpleScrollGrid","isHeightAuto","collapsibleWidth","cols","dayMinWidth","ScrollGrid","pluginHooks","scrollGridImpl","Error","stickyFooterScrollbar","getStickyFooterScrollbar","chunks","renderScrollShim","colGroups","_TableView","_super13","_this13","buildDayTableModel","headerRef","_this14","_this$context","dateProfileGenerator","headerContent","dayHeaders","DayHeader","dates","headerDates","datesRepDistinctDays","contentArg","businessHours","dateSelection","eventStore","eventUiBases","tableColGroupNode","weekNumbers","renderHScrollLayout","renderSimpleLayout","daySeries","DaySeriesModel","DayTableModel","config","touchMouseIgnoreWait","ignoreMouseDepth","listenerCnt","isWindowTouchMoveCancelled","PointerDragging","selector","handleSelector","shouldIgnoreMove","shouldWatchScroll","isTouchDragging","wasTouchScroll","handleMouseDown","ev","shouldIgnoreMouse","button","ctrlKey","isPrimaryMouseButton","tryStart","pev","createEventFromMouse","emitter","trigger","initScrollWatch","document","addEventListener","handleMouseMove","handleMouseUp","recordCoords","removeEventListener","cleanup","handleTouchStart","createEventFromTouch","targetEl","target","handleTouchMove","handleTouchEnd","window","handleTouchScroll","setTimeout","handleScroll","pageX","pageXOffset","prevScrollX","prevPageX","pageY","pageYOffset","prevScrollY","prevPageY","origEvent","isTouch","deltaX","origPageX","deltaY","origPageY","Emitter","passive","onWindowTouchMove","querySubjectEl","downEl","elementClosest","destroyScrollWatch","isFirst","touches","preventDefault","ElementMirror","sourceEl","mirrorEl","sourceElRect","parentNode","body","zIndex","revertDuration","origScreenX","origScreenY","updateElPosition","bool","needsRevertAnimation","callback","doRevertAnimation","finalSourceElRect","transition","applyStyle","whenTransitionDone","removeElement","getMirrorEl","cloneNode","userSelect","webkitUserSelect","classList","add","position","boxSizing","margin","appendChild","ScrollGeomCache","_ScrollController","scrollController","doesListening","getScrollTop","scrollLeft","getScrollLeft","handleScrollChange","origScrollTop","origScrollLeft","scrollWidth","getScrollWidth","scrollHeight","getScrollHeight","getClientWidth","getClientHeight","clientRect","computeClientRect","getEventTarget","setScrollTop","min","getMaxScrollTop","setScrollLeft","getMaxScrollLeft","ScrollController","ElementScrollGeomCache","_ScrollGeomCache","ElementScrollController","computeInnerRect","WindowScrollGeomCache","_ScrollGeomCache2","WindowScrollController","getTime","performance","now","Date","AutoScroller","isEnabled","scrollQuery","edgeThreshold","maxVelocity","pointerScreenX","pointerScreenY","isAnimating","scrollCaches","everMovedUp","everMovedDown","everMovedLeft","everMovedRight","animate","edge","computeBestEdge","handleSide","msSinceRequest","requestAnimation","scrollStartEl","buildCaches","handleMove","yDelta","xDelta","destroy","requestAnimationFrame","seconds","scrollCache","invDistance","distance","velocity","sign","bestSide","leftDist","rightDist","topDist","bottomDist","canScrollUp","canScrollDown","canScrollLeft","canScrollRight","queryScrollEls","els","query","Array","slice","getRootNode","querySelectorAll","FeaturefulElementDragging","_ElementDragging","delay","minDistance","touchScrollAllowed","mirrorNeedsRevert","isInteracting","isDelayEnded","isDistanceSurpassed","delayTimeoutId","onPointerDown","preventSelection","preventContextMenu","pointer","mirror","setIsVisible","startDelay","handleDistanceSurpassed","onPointerMove","autoScroller","onPointerUp","allowSelection","allowContextMenu","stop","tryStopDrag","clearTimeout","on","handleDelayEnd","tryStartDrag","cancelTouchScroll","stopDrag","bind","ElementDragging","OffsetTracker","origRect","computeRect","getClippingParents","point","isIgnoredClipping","pointInsideRect","node","tagName","HitDragging","dragging","droppableStore","useSubjectCenter","requireInitial","initialHit","movingHit","finalHit","handlePointerDown","prepareHits","processFirstCoord","setIgnoreMove","handleDragStart","handleDragMove","handlePointerUp","releaseHits","handleDragEnd","subjectRect","origPoint","adjustedPoint","HTMLElement","constrainPoint","queryHitForOffset","slicedSubjectRect","intersectRects","getRectCenter","coordAdjust","diffPoints","forceHandle","hit","isHitsEqual","offsetTrackers","mapHash","interactionSettings","offsetLeft","offsetTop","bestHit","offsetTracker","isWithinClipping","originLeft","computeLeft","originTop","computeTop","queryHit","rangeContainsRange","activeRange","componentId","hit0","hit1","isDateSpansEqual","buildDatePointApiWithContext","datePointTransforms","transform","toDate","dateStr","formatIso","omitTime","DateClicking","_Interaction","settings","_assertThisInitialized","isValidDateDownEl","_this8$hitDragging","hitDragging","arg","jsEvent","view","viewApi","calendarApi","interactionSettingsToStore","Interaction","DateSelecting","_Interaction2","dragSelection","_assertThisInitialize3","canSelect","selectable","selectLongPressDelay","longPressDelay","getComponentTouchDelay$1","unselect","handleHitUpdate","isFinal","isInvalid","dateSelectionTransformers","dateSpan0","dateSpan1","ms","sort","compareNumbers","res","transformer","joinHitsIntoSelection","isDateSelectionValid","dispatch","selection","disableCursor","enableCursor","triggerDateSelect","selectMinDistance","dragScroll","EventDragging","_Interaction3","subjectSeg","relevantEvents","receivingContext","validMutation","mutatedRelevantEvents","origTarget","_assertThisInitialize4","initialContext","getElSeg","eventInstanceId","getRelevantEvents","getCurrentData","eventDragMinDistance","eventLongPressDelay","getComponentTouchDelay","fixedMirrorParent","dragRevertDuration","isValid","isValidSegDownEl","contains","EventImpl","mutation","interaction","affectedEvents","mutatedEvents","createEmptyEventStore","receivingOptions","editable","droppable","massagers","date0","date1","standardProps","hasEnd","allDayMaintainDuration","startOfDay","delta","diffDates","largeUnit","milliseconds","datesDelta","massager","computeEventMutation","eventDragMutationMassagers","applyMutationToEventStore","isInteractionValid","displayDrag","setMirrorNeedsRevert","setMirrorIsVisible","_assertThisInitialize5","eventDef","eventInstance","eventApi","clearDrag","updatedEventApi","defs","defId","instances","eventChangeArg","oldEvent","relatedEvents","buildEventApis","revert","transformed","eventDropTransformers","eventRemoveArg","draggedEl","addedEventDef","addedEventInstance","addedEventApi","eventAddArg","SELECTOR","interactionSettingsStore","useEventCenter","nextContext","prevContext","initialCalendar","EventResizing","_Interaction4","draggingSegEl","draggingSeg","segEl","querySegEl","isFromStart","instanceRange","startDelta","endDelta","computeMutation","createDuration","UnselectAuto","isRecentPointerDateSelect","matchesCancel","matchesEvent","onSelect","selectInfo","onDocumentPointerDown","unselectCancel","getEventTargetViaRoot","onDocumentPointerUp","documentPointer","calendarState","unselectAuto","off","OPTION_REFINERS","identity","LISTENER_REFINERS","dateClick","eventDragStart","eventDragStop","eventDrop","eventResizeStart","eventResizeStop","drop","eventReceive","eventLeave","dataAttrPrefix","componentInteractions","calendarInteractions","elementDraggingImpl","optionRefiners","listenerRefiners","ListViewHeaderRow","textId","theme","_this$props","cellId","dayDate","dayMeta","getDateMeta","text","listDayFormat","format","sideText","listDaySideFormat","navLinkAttrs","sideNavLinkAttrs","ContentContainer","getDayClassNames","generatorName","customGenerator","dayHeaderContent","classNameGenerator","dayHeaderClassNames","didMount","dayHeaderDidMount","willUnmount","dayHeaderWillUnmount","scope","colSpan","getClass","DEFAULT_TIME_FORMAT","ListViewEventRow","timeHeaderId","eventHeaderId","dateHeaderId","url","interactiveAttrs","renderEventInnerContent","disableDragging","eventContentArg","displayEventTime","doAllDay","isMultiDayRange","allDayText","headers","allDayContent","renderAllDayInner","allDayClassNames","allDayDidMount","allDayWillUnmount","buildTimeContent","ListView","computeDateVars","eventStoreToSegs","_eventStoreToSegs","dateHeaderIdRoot","setRootEl","_this$computeDateVars","dayDates","dayRanges","eventSegs","Scroller","overflowX","overflowY","renderSegList","renderEmptyMessage","_this$context2","noEventsText","noEventsContent","renderNoEventsInner","noEventsClassNames","noEventsDidMount","noEventsWillUnmount","_this$context3","_this$state","segsByDay","dayIndex","groupSegsByDay","innerNodes","daySegs","dayStr","timeHint","eventHint","eventRangesToSegs","sliceEventStore","fg","eventRanges","eventRangeToSegs","segRange","dayStart","viewEnd","createFalsableFormatter","input","list","buttonTextKey","month","day","year","listDay","weekday","listWeek","listMonth","listYear","syncRenderingByDefault","parseInt","String","React","split","FullCalendar","_Component","isUpdating","isUnmounting","customRenderingMap","Map","requestResize","cancelResize","resizeId","doResize","customRenderingNodes","values","customRendering","CustomRenderingComponent","lastRequestTimestamp","customRenderingStore","CustomRenderingStore","handleCustomRendering","handle","calendar","Calendar","render","subscribe","requestTimestamp","isMounting","runNow","flushSync","resetOptions","updateSize","cancelAnimationFrame","Component","act","_PureComponent","generatorMeta","vnode","createPortal","PureComponent","AllDaySplitter","_Splitter","timed","hasBgRendering","Splitter","DEFAULT_SLAT_LABEL_FORMAT","TimeColsAxisCell","isLabeled","ViewContextType","Consumer","isoTimeStr","labelFormat","slotLabelFormat","isArray","time","slotLabelContent","slotLabelClassNames","slotLabelDidMount","slotLabelWillUnmount","TimeBodyAxis","slatMetas","slatMeta","TimeColsView","allDaySplitter","scrollerElRef","slatCoords","handleScrollTopRequest","scrollerEl","renderHeadAxis","rowKey","frameHeight","diffDays","renderTableRowAxis","rowHeight","handleSlatCoords","timeContent","outerContent","syncRowHeights","rowSyncHeights","isNowIndicator","nowIndicator","nowIndicatorTop","safeComputeTop","NowIndicatorContainer","elStyle","isAxis","_this$context$options","TimeColsSlatsCoords","positions","slotDuration","rangeContainsMarker","startOfDayDate","timeMs","asRoughMs","slotMinTime","slotMaxTime","computeTimeTop","when","slatIndex","slatRemainder","len","slatCoverage","floor","getHeight","TimeColsSlatsBody","slatElRefs","axis","slotLaneContent","slotLaneClassNames","slotLaneDidMount","slotLaneWillUnmount","TimeColsSlats","onCoords","offsetHeight","splitSegsByCol","segsByCol","splitInteractionByCol","TimeColMoreLink","_BaseComponent4","renderPlainFgSegs","renderMoreLinkInner","forceTimed","shortText","buildPositioning","hiddenGroups","groupIntersectingEntries","web","buildNode","cacheable","lateral","siblingRange","subjectLevel","subjectLateral","levelCoords","subjectEntry","afterSubject","levelCnt","entries","searchIndex","binarySearch","getEntrySpanEnd","lateralStart","lateralEnd","findNextLevelSegs","nextLevelRes","buildNodes","nextLevelNodes","buildWeb","segRects","topLevelNodes","processNode","stackDepth","stackForward","processNodes","webToRects","totalThickness","stretchNode","startCoord","prevThickness","endCoord","allThickness","thicknessFraction","newChildren","childNode","newThickness","stretchWeb","pairs","cmpDescPressures","extractNode","a","b","keyFunc","workFunc","cache","computeSegVCoords","colDate","eventMinHeight","vcoords","computeDateTop","TimeColEvent","_BaseComponent5","isShort","TimeCol","_BaseComponent6","isSelectMirror","selectMirror","interactionAffectedInstances","sortedFgSegs","renderNowIndicator","nowIndicatorSegs","segIsInvisible","forcedKey","renderPositionedFgSegs","_this$context$options2","eventMaxStack","eventShortHeight","segVCoords","dumbSegs","_buildPositioning","segRect","_dumbSegs","dumbSeg","computeFgSegPlacements","renderHiddenGroups","segPlacement","vStyle","computeSegVStyle","hStyle","computeSegHStyle","isInset","_this$props2","hiddenGroup","segEntries","positionCss","buildIsoString","computeEarliestSegStart","children","_this$props3","segHCoords","shouldOverlap","slotEventOverlap","nearCoord","farCoord","_ref","hiddenInstances","TimeColsContent","_BaseComponent7","splitNowIndicatorSegs","nowIndicatorSegsByRow","updateCoords","onColCoords","TimeCols","processSlotOptions","handleScrollRequest","request","onScrollTopRequest","handleColCoords","colCoords","onSlatCoords","scrollResponder","createScrollResponder","update","detach","_this$processSlotOpti","snapDuration","snapsPerSlot","colIndex","slatTop","slatHeight","partial","snapIndex","addDurations","multiplyDuration","snapDurationOverride","wholeDivideDurations","DayTimeColsSlicer","DayTimeCols","buildDayRanges","timeColsRef","_context$options","sliceNowDate","ranges","STOCK_SUB_DURATIONS","hours","minutes","buildSlatMetas","explicitLabelInterval","slatTime","slatIterator","labelInterval","slotsPerLabel","computeLabelInterval","metas","formatIsoTimeString","DayTimeColsView","_TimeColsView","buildTimeColsModel","_this$context4","splitProps","slotLabelInterval","hasAttachedAxis","hasDetachedAxis","allDaySlot","getAllDayMaxEventProps","timeGridContent","timeGrid","usesMinMaxTime","timeGridDay","timeGridWeek"],"sourceRoot":""}