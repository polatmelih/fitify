{"version":3,"file":"static/js/0.2b697a9f.chunk.js","mappings":"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","sources":["components/BarChartSleep.jsx","components/BarChartTrainingsLength.jsx","components/LineChartWeight.jsx","data/mockData.jsx","components/ProgressCircle.jsx","components/StatBox.jsx","scenes/dashboard/index.jsx","../node_modules/@mui/icons-material/Hotel.js","../node_modules/@mui/icons-material/MonitorWeight.js","../node_modules/@mui/icons-material/PersonAdd.js","../node_modules/@mui/icons-material/Traffic.js"],"sourcesContent":["import { useTheme } from \"@mui/material\";\r\nimport { ResponsiveBar } from \"@nivo/bar\";\r\nimport { tokens } from \"../theme\";\r\nimport { mockBarDataSleep as data } from \"../data/mockData\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {api} from \"../utils/api\";\r\n\r\nconst BarChartSleep = ({ isDashboard = false, reload }) => {\r\n    const theme = useTheme();\r\n    const colors = tokens(theme.palette.mode);\r\n    const [chartData, setChartData] = useState(Array);\r\n\r\n    useEffect(() => {\r\n        const fetchWeightData = async () => {\r\n            try {\r\n                const dayNames = [\"SO\", \"MO\", \"DI\", \"MI\", \"DO\", \"FR\", \"SA\"];\r\n                const response = await api.get('/get-sleep.php');\r\n                const weightData = response.data.map(entry => ({\r\n                    day: dayNames[new Date(entry.date).getDay()], // Converts the date string to a Date object\r\n                    Schlafdauer: entry.sleep,\r\n                    SchlafdauerColor: \"hsl(307, 70%, 50%)\",\r\n                }));\r\n                setChartData(weightData)\r\n            } catch (error) {\r\n                alert(error.response.data.message);\r\n            }\r\n        };\r\n\r\n        if (sessionStorage.getItem(\"role\").toString().toLowerCase() !== \"coach\" || sessionStorage.getItem(\"sus_id\")) fetchWeightData();\r\n    }, [reload]);\r\n\r\n    return (\r\n        <ResponsiveBar\r\n            data={chartData}\r\n            theme={{\r\n                // added\r\n                axis: {\r\n                    domain: {\r\n                        line: {\r\n                            stroke: colors.grey[100],\r\n                        },\r\n                    },\r\n                    legend: {\r\n                        text: {\r\n                            fill: colors.grey[100],\r\n                        },\r\n                    },\r\n                    ticks: {\r\n                        line: {\r\n                            stroke: colors.grey[100],\r\n                            strokeWidth: 1,\r\n                        },\r\n                        text: {\r\n                            fill: colors.grey[100],\r\n                        },\r\n                    },\r\n                },\r\n                legends: {\r\n                    text: {\r\n                        fill: colors.grey[100],\r\n                    },\r\n                },\r\n            }}\r\n            keys={[\"Schlafdauer\"]}\r\n            indexBy=\"day\"\r\n            margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\r\n            padding={0.3}\r\n            valueScale={{ type: \"linear\" }}\r\n            indexScale={{ type: \"band\", round: true }}\r\n            colors={{ scheme: \"category10\" }}\r\n            defs={[\r\n                {\r\n                    id: \"dots\",\r\n                    type: \"patternDots\",\r\n                    background: \"inherit\",\r\n                    color: \"#38bcb2\",\r\n                    size: 4,\r\n                    padding: 1,\r\n                    stagger: true,\r\n                },\r\n                {\r\n                    id: \"lines\",\r\n                    type: \"patternLines\",\r\n                    background: \"inherit\",\r\n                    color: \"#eed312\",\r\n                    rotation: -45,\r\n                    lineWidth: 6,\r\n                    spacing: 10,\r\n                },\r\n            ]}\r\n            borderColor={{\r\n                from: \"color\",\r\n                modifiers: [[\"darker\", \"1.6\"]],\r\n            }}\r\n            axisTop={null}\r\n            axisRight={null}\r\n            axisBottom={{\r\n                tickSize: 5,\r\n                tickPadding: 5,\r\n                tickRotation: 0,\r\n                legend: isDashboard ? undefined : \"Tag\", // changed\r\n                legendPosition: \"middle\",\r\n                legendOffset: 32,\r\n            }}\r\n            axisLeft={{\r\n                tickSize: 5,\r\n                tickPadding: 5,\r\n                tickRotation: 0,\r\n                legend: isDashboard ? undefined : \"in h\", // changed\r\n                legendPosition: \"middle\",\r\n                legendOffset: -40,\r\n            }}\r\n            enableLabel={false}\r\n            labelSkipWidth={12}\r\n            labelSkipHeight={12}\r\n            labelTextColor={{\r\n                from: \"color\",\r\n                modifiers: [[\"darker\", 1.6]],\r\n            }}\r\n            legends={[\r\n                {\r\n                    dataFrom: \"keys\",\r\n                    anchor: \"bottom-right\",\r\n                    direction: \"column\",\r\n                    justify: false,\r\n                    translateX: 120,\r\n                    translateY: 0,\r\n                    itemsSpacing: 2,\r\n                    itemWidth: 100,\r\n                    itemHeight: 20,\r\n                    itemDirection: \"left-to-right\",\r\n                    itemOpacity: 0.85,\r\n                    symbolSize: 20,\r\n                    effects: [\r\n                        {\r\n                            on: \"hover\",\r\n                            style: {\r\n                                itemOpacity: 1,\r\n                            },\r\n                        },\r\n                    ],\r\n                },\r\n            ]}\r\n            role=\"application\"\r\n            barAriaLabel={function (e) {\r\n                return e.id + \": \" + e.formattedValue + \" in day: \" + e.indexValue;\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default BarChartSleep;","import { useTheme } from \"@mui/material\";\r\nimport { ResponsiveBar } from \"@nivo/bar\";\r\nimport { tokens } from \"../theme\";\r\nimport { mockBarDataTraining as data } from \"../data/mockData\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {api} from \"../utils/api\";\r\n\r\nconst BarChartTraining = ({isDashboard = false }) => {\r\n    const theme = useTheme();\r\n    const colors = tokens(theme.palette.mode);\r\n    const [chartData, setChartData] = useState(Array);\r\n    const dayNames = [\"SO\", \"MO\", \"DI\", \"MI\", \"DO\", \"FR\", \"SA\"];\r\n\r\n    useEffect(() => {\r\n        const fetchWeightData = async () => {\r\n            try {\r\n                const response = await api.get('/get-training.php');\r\n                const weightData = response.data.map(entry => ({\r\n                    day: dayNames[new Date(entry.date).getDay()], // Converts the date string to a Date object\r\n                    Trainingsdauer: entry.training,\r\n                    TrainingsdauerColor: \"hsl(28, 100%, 52.7%)\",\r\n                }));\r\n                setChartData(weightData)\r\n            } catch (error) {\r\n                alert(error.response.data.message);\r\n            }\r\n        };\r\n\r\n        if (sessionStorage.getItem(\"role\").toString().toLowerCase() !== \"coach\" || sessionStorage.getItem(\"sus_id\")) fetchWeightData();\r\n    }, []);\r\n\r\n    return (\r\n        <ResponsiveBar\r\n            data={chartData}\r\n            theme={{\r\n                // added\r\n                axis: {\r\n                    domain: {\r\n                        line: {\r\n                            stroke: colors.grey[100],\r\n                        },\r\n                    },\r\n                    legend: {\r\n                        text: {\r\n                            fill: colors.grey[100],\r\n                        },\r\n                    },\r\n                    ticks: {\r\n                        line: {\r\n                            stroke: colors.grey[100],\r\n                            strokeWidth: 1,\r\n                        },\r\n                        text: {\r\n                            fill: colors.grey[100],\r\n                        },\r\n                    },\r\n                },\r\n                legends: {\r\n                    text: {\r\n                        fill: colors.grey[100],\r\n                    },\r\n                },\r\n            }}\r\n            keys={[\"Trainingsdauer\"]}\r\n            indexBy=\"day\"\r\n            margin={{ top: 50, right: 150, bottom: 50, left: 60 }}\r\n            padding={0.3}\r\n            valueScale={{ type: \"linear\" }}\r\n            indexScale={{ type: \"band\", round: true }}\r\n            colors={{ scheme: \"spectral\" }}\r\n            defs={[\r\n                {\r\n                    id: \"dots\",\r\n                    type: \"patternDots\",\r\n                    background: \"inherit\",\r\n                    color: \"#38bcb2\",\r\n                    size: 4,\r\n                    padding: 1,\r\n                    stagger: true,\r\n                },\r\n                {\r\n                    id: \"lines\",\r\n                    type: \"patternLines\",\r\n                    background: \"inherit\",\r\n                    color: \"#eed312\",\r\n                    rotation: -45,\r\n                    lineWidth: 6,\r\n                    spacing: 10,\r\n                },\r\n            ]}\r\n            borderColor={{\r\n                from: \"color\",\r\n                modifiers: [[\"darker\", \"1.6\"]],\r\n            }}\r\n            axisTop={null}\r\n            axisRight={null}\r\n            axisBottom={{\r\n                tickSize: 5,\r\n                tickPadding: 5,\r\n                tickRotation: 0,\r\n                legend: isDashboard ? undefined : \"Tag\", // changed\r\n                legendPosition: \"middle\",\r\n                legendOffset: 32,\r\n            }}\r\n            axisLeft={{\r\n                tickSize: 5,\r\n                tickPadding: 5,\r\n                tickRotation: 0,\r\n                legend: isDashboard ? undefined : \"in h\", // changed\r\n                legendPosition: \"middle\",\r\n                legendOffset: -40,\r\n            }}\r\n            enableLabel={false}\r\n            labelSkipWidth={12}\r\n            labelSkipHeight={12}\r\n            labelTextColor={{\r\n                from: \"color\",\r\n                modifiers: [[\"darker\", 1.6]],\r\n            }}\r\n            legends={[\r\n                {\r\n                    dataFrom: \"keys\",\r\n                    anchor: \"bottom-right\",\r\n                    direction: \"column\",\r\n                    justify: false,\r\n                    translateX: 120,\r\n                    translateY: 0,\r\n                    itemsSpacing: 2,\r\n                    itemWidth: 100,\r\n                    itemHeight: 20,\r\n                    itemDirection: \"left-to-right\",\r\n                    itemOpacity: 0.85,\r\n                    symbolSize: 20,\r\n                    effects: [\r\n                        {\r\n                            on: \"hover\",\r\n                            style: {\r\n                                itemOpacity: 1,\r\n                            },\r\n                        },\r\n                    ],\r\n                },\r\n            ]}\r\n            role=\"application\"\r\n            barAriaLabel={function (e) {\r\n                return e.id + \": \" + e.formattedValue + \" in day: \" + e.indexValue;\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default BarChartTraining;","import { ResponsiveLine } from \"@nivo/line\";\r\nimport { useState, useEffect } from 'react';\r\nimport { useTheme } from \"@mui/material\";\r\nimport { tokens } from \"../theme\";\r\nimport {api} from \"../utils/api\";\r\n\r\nconst LineChartWeight = ({ isCustomLineColors = false, isDashboard = false }) => {\r\n    const [chartData, setChartData] = useState(Array);\r\n    const dayNames = [\"SO\", \"MO\", \"DI\", \"MI\", \"DO\", \"FR\", \"SA\"];\r\n\r\n    useEffect(() => {\r\n        const fetchWeightData = async () => {\r\n            try {\r\n                const response = await api.get('/get-weight.php');\r\n                const weightData = response.data.map(entry => ({\r\n                    x: dayNames[new Date(entry.date).getDay()], // Converts the date string to a Date object\r\n                    y: entry.weight\r\n                }));\r\n\r\n                const goalWeightData = response.data.map(entry => ({\r\n                    x: dayNames[new Date(entry.date).getDay()], // Converts the date string to a Date object\r\n                    y: entry.goal_weight\r\n                }));\r\n\r\n                setChartData([\r\n                    { id: 'Gewicht', data: weightData, color: tokens(\"dark\").blueAccent[300] },\r\n                    { id: 'Zielgewicht', data: goalWeightData, color: tokens(\"dark\").greenAccent[500] }\r\n                ]);\r\n            } catch (error) {\r\n                alert(error.response.data.message);\r\n            }\r\n        };\r\n\r\n        if (sessionStorage.getItem(\"role\").toString().toLowerCase() !== \"coach\" || sessionStorage.getItem(\"sus_id\")) fetchWeightData();\r\n    }, []);\r\n\r\n\r\n    const theme = useTheme();\r\n    const colors = tokens(theme.palette.mode);\r\n\r\n    if (!chartData) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <ResponsiveLine\r\n            data={chartData}\r\n            theme={{\r\n                axis: {\r\n                    domain: {\r\n                        line: {\r\n                            stroke: colors.grey[100],\r\n                        },\r\n                    },\r\n                    legend: {\r\n                        text: {\r\n                            fill: colors.grey[100],\r\n                        },\r\n                    },\r\n                    ticks: {\r\n                        line: {\r\n                            stroke: colors.grey[100],\r\n                            strokeWidth: 1,\r\n                        },\r\n                        text: {\r\n                            fill: colors.grey[100],\r\n                        },\r\n                    },\r\n                },\r\n                legends: {\r\n                    text: {\r\n                        fill: colors.grey[100],\r\n                    },\r\n                },\r\n                tooltip: {\r\n                    container: {\r\n                        color: colors.primary[500],\r\n                    },\r\n                },\r\n            }}\r\n            colors={isDashboard ? { datum: \"color\" } : { scheme: \"nivo\" }} // added\r\n            margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\r\n            xScale={{ type: \"point\" }}\r\n            yScale={{\r\n                type: \"linear\",\r\n                min: \"auto\",\r\n                max: \"auto\",\r\n                stacked: false,\r\n                reverse: false,\r\n            }}\r\n            yFormat=\" >-.2f\"\r\n            curve=\"catmullRom\"\r\n            axisTop={null}\r\n            axisRight={null}\r\n            axisBottom={{\r\n                orient: \"bottom\",\r\n                tickSize: 0,\r\n                tickPadding: 5,\r\n                tickRotation: 0,\r\n                legend: isDashboard ? undefined : \"Monate\", // added\r\n                legendOffset: 36,\r\n                legendPosition: \"middle\",\r\n            }}\r\n            axisLeft={{\r\n                orient: \"left\",\r\n                tickValues: 5, // added\r\n                tickSize: 3,\r\n                tickPadding: 5,\r\n                tickRotation: 0,\r\n                legend: isDashboard ? undefined : \"in kg\", // added\r\n                legendOffset: -40,\r\n                legendPosition: \"middle\",\r\n            }}\r\n            enableGridX={false}\r\n            enableGridY={false}\r\n            pointSize={8}\r\n            pointColor={{ theme: \"background\" }}\r\n            pointBorderWidth={2}\r\n            pointBorderColor={{ from: \"serieColor\" }}\r\n            pointLabelYOffset={-12}\r\n            useMesh={true}\r\n            legends={[\r\n                {\r\n                    anchor: \"bottom-right\",\r\n                    direction: \"column\",\r\n                    justify: false,\r\n                    translateX: 100,\r\n                    translateY: 0,\r\n                    itemsSpacing: 0,\r\n                    itemDirection: \"left-to-right\",\r\n                    itemWidth: 80,\r\n                    itemHeight: 20,\r\n                    itemOpacity: 0.75,\r\n                    symbolSize: 12,\r\n                    symbolShape: \"circle\",\r\n                    symbolBorderColor: \"rgba(0, 0, 0, .5)\",\r\n                    effects: [\r\n                        {\r\n                            on: \"hover\",\r\n                            style: {\r\n                                itemBackground: \"rgba(0, 0, 0, .03)\",\r\n                                itemOpacity: 1,\r\n                            },\r\n                        },\r\n                    ],\r\n                },\r\n            ]}\r\n        />\r\n    );\r\n};\r\n\r\nexport default LineChartWeight;","import { tokens } from \"../theme\";\r\n\r\nexport const mockDataTeam = [\r\n    {\r\n        id: 1,\r\n        name: \"Jon Snow\",\r\n        e5l: \"jonsnow@g5l.com\",\r\n        age: 35,\r\n        phone: \"(665)121-5454\",\r\n        access: \"admin\",\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Cersei Lannister\",\r\n        e5l: \"cerseilannister@g5l.com\",\r\n        age: 42,\r\n        phone: \"(421)314-2288\",\r\n        access: \"manager\",\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Jaime Lannister\",\r\n        e5l: \"jaimelannister@g5l.com\",\r\n        age: 45,\r\n        phone: \"(422)982-6739\",\r\n        access: \"user\",\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Anya Stark\",\r\n        e5l: \"anyastark@g5l.com\",\r\n        age: 16,\r\n        phone: \"(921)425-6742\",\r\n        access: \"admin\",\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"Daenerys Targaryen\",\r\n        e5l: \"daenerystargaryen@g5l.com\",\r\n        age: 31,\r\n        phone: \"(421)445-1189\",\r\n        access: \"user\",\r\n    },\r\n    {\r\n        id: 6,\r\n        name: \"Ever Melisandre\",\r\n        e5l: \"evermelisandre@g5l.com\",\r\n        age: 150,\r\n        phone: \"(232)545-6483\",\r\n        access: \"manager\",\r\n    },\r\n    {\r\n        id: 7,\r\n        name: \"Ferrara Clifford\",\r\n        e5l: \"ferraraclifford@g5l.com\",\r\n        age: 44,\r\n        phone: \"(543)124-0123\",\r\n        access: \"user\",\r\n    },\r\n    {\r\n        id: 8,\r\n        name: \"Rossini Frances\",\r\n        e5l: \"rossinifrances@g5l.com\",\r\n        age: 36,\r\n        phone: \"(222)444-5555\",\r\n        access: \"user\",\r\n    },\r\n    {\r\n        id: 9,\r\n        name: \"Harvey Roxie\",\r\n        e5l: \"harveyroxie@g5l.com\",\r\n        age: 65,\r\n        phone: \"(444)555-6239\",\r\n        access: \"admin\",\r\n    },\r\n];\r\n\r\nexport const mockDataContacts = [\r\n    {\r\n        id: 1,\r\n        name: \"Jon Snow\",\r\n        e5l: \"jonsnow@g5l.com\",\r\n        age: 35,\r\n        phone: \"(665)121-5454\",\r\n        address: \"0912 Won Street, Alabama, SY 10001\",\r\n        city: \"New York\",\r\n        zipCode: \"10001\",\r\n        registrarId: 123512,\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Cersei Lannister\",\r\n        e5l: \"cerseilannister@g5l.com\",\r\n        age: 42,\r\n        phone: \"(421)314-2288\",\r\n        address: \"1234 5n Street, New York, NY 10001\",\r\n        city: \"New York\",\r\n        zipCode: \"13151\",\r\n        registrarId: 123512,\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Jaime Lannister\",\r\n        e5l: \"jaimelannister@g5l.com\",\r\n        age: 45,\r\n        phone: \"(422)982-6739\",\r\n        address: \"3333 Want Blvd, Estanza, NAY 42125\",\r\n        city: \"New York\",\r\n        zipCode: \"87281\",\r\n        registrarId: 4132513,\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Anya Stark\",\r\n        e5l: \"anyastark@g5l.com\",\r\n        age: 16,\r\n        phone: \"(921)425-6742\",\r\n        address: \"1514 5n Street, New York, NY 22298\",\r\n        city: \"New York\",\r\n        zipCode: \"15551\",\r\n        registrarId: 123512,\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"Daenerys Targaryen\",\r\n        e5l: \"daenerystargaryen@g5l.com\",\r\n        age: 31,\r\n        phone: \"(421)445-1189\",\r\n        address: \"11122 Welping Ave, Tenting, CD 21321\",\r\n        city: \"Tenting\",\r\n        zipCode: \"14215\",\r\n        registrarId: 123512,\r\n    },\r\n    {\r\n        id: 6,\r\n        name: \"Ever Melisandre\",\r\n        e5l: \"evermelisandre@g5l.com\",\r\n        age: 150,\r\n        phone: \"(232)545-6483\",\r\n        address: \"1234 Canvile Street, Esvazark, NY 10001\",\r\n        city: \"Esvazark\",\r\n        zipCode: \"10001\",\r\n        registrarId: 123512,\r\n    },\r\n    {\r\n        id: 7,\r\n        name: \"Ferrara Clifford\",\r\n        e5l: \"ferraraclifford@g5l.com\",\r\n        age: 44,\r\n        phone: \"(543)124-0123\",\r\n        address: \"22215 Super Street, Everting, ZO 515234\",\r\n        city: \"Evertin\",\r\n        zipCode: \"51523\",\r\n        registrarId: 123512,\r\n    },\r\n    {\r\n        id: 8,\r\n        name: \"Rossini Frances\",\r\n        e5l: \"rossinifrances@g5l.com\",\r\n        age: 36,\r\n        phone: \"(222)444-5555\",\r\n        address: \"4123 Ever Blvd, Wentington, AD 142213\",\r\n        city: \"Esteras\",\r\n        zipCode: \"44215\",\r\n        registrarId: 512315,\r\n    },\r\n    {\r\n        id: 9,\r\n        name: \"Harvey Roxie\",\r\n        e5l: \"harveyroxie@g5l.com\",\r\n        age: 65,\r\n        phone: \"(444)555-6239\",\r\n        address: \"51234 Avery Street, Cantory, ND 212412\",\r\n        city: \"Colunza\",\r\n        zipCode: \"111234\",\r\n        registrarId: 928397,\r\n    },\r\n    {\r\n        id: 10,\r\n        name: \"Enteri Redack\",\r\n        e5l: \"enteriredack@g5l.com\",\r\n        age: 42,\r\n        phone: \"(222)444-5555\",\r\n        address: \"4123 Easer Blvd, Wentington, AD 142213\",\r\n        city: \"Esteras\",\r\n        zipCode: \"44215\",\r\n        registrarId: 533215,\r\n    },\r\n    {\r\n        id: 11,\r\n        name: \"Steve Goodman\",\r\n        e5l: \"stevegoodmane@g5l.com\",\r\n        age: 11,\r\n        phone: \"(444)555-6239\",\r\n        address: \"51234 Fiveton Street, CunFory, ND 212412\",\r\n        city: \"Colunza\",\r\n        zipCode: \"1234\",\r\n        registrarId: 92197,\r\n    },\r\n];\r\n\r\nexport const mockDataInvoices = [\r\n    {\r\n        id: 1,\r\n        name: \"Jon Snow\",\r\n        e5l: \"jonsnow@g5l.com\",\r\n        cost: \"21.24\",\r\n        phone: \"(665)121-5454\",\r\n        date: \"03/12/2022\",\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Cersei Lannister\",\r\n        e5l: \"cerseilannister@g5l.com\",\r\n        cost: \"1.24\",\r\n        phone: \"(421)314-2288\",\r\n        date: \"06/15/2021\",\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Jaime Lannister\",\r\n        e5l: \"jaimelannister@g5l.com\",\r\n        cost: \"11.24\",\r\n        phone: \"(422)982-6739\",\r\n        date: \"05/02/2022\",\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Anya Stark\",\r\n        e5l: \"anyastark@g5l.com\",\r\n        cost: \"80.55\",\r\n        phone: \"(921)425-6742\",\r\n        date: \"03/21/2022\",\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"Daenerys Targaryen\",\r\n        e5l: \"daenerystargaryen@g5l.com\",\r\n        cost: \"1.24\",\r\n        phone: \"(421)445-1189\",\r\n        date: \"01/12/2021\",\r\n    },\r\n    {\r\n        id: 6,\r\n        name: \"Ever Melisandre\",\r\n        e5l: \"evermelisandre@g5l.com\",\r\n        cost: \"63.12\",\r\n        phone: \"(232)545-6483\",\r\n        date: \"11/02/2022\",\r\n    },\r\n    {\r\n        id: 7,\r\n        name: \"Ferrara Clifford\",\r\n        e5l: \"ferraraclifford@g5l.com\",\r\n        cost: \"52.42\",\r\n        phone: \"(543)124-0123\",\r\n        date: \"02/11/2022\",\r\n    },\r\n    {\r\n        id: 8,\r\n        name: \"Rossini Frances\",\r\n        e5l: \"rossinifrances@g5l.com\",\r\n        cost: \"21.24\",\r\n        phone: \"(222)444-5555\",\r\n        date: \"05/02/2021\",\r\n    },\r\n];\r\n\r\nexport const mockTransactions = [\r\n    {\r\n        txId: \"01e4dsa\",\r\n        user: \"johndoe\",\r\n        date: \"2021-09-01\",\r\n        cost: \"43.95\",\r\n    },\r\n    {\r\n        txId: \"0315dsaa\",\r\n        user: \"jackdower\",\r\n        date: \"2022-04-01\",\r\n        cost: \"133.45\",\r\n    },\r\n    {\r\n        txId: \"01e4dsa\",\r\n        user: \"aberdohnny\",\r\n        date: \"2021-09-01\",\r\n        cost: \"43.95\",\r\n    },\r\n    {\r\n        txId: \"51034szv\",\r\n        user: \"goodmanave\",\r\n        date: \"2022-11-05\",\r\n        cost: \"200.95\",\r\n    },\r\n    {\r\n        txId: \"0a123sb\",\r\n        user: \"stevebower\",\r\n        date: \"2022-11-02\",\r\n        cost: \"13.55\",\r\n    },\r\n    {\r\n        txId: \"01e4dsa\",\r\n        user: \"aberdohnny\",\r\n        date: \"2021-09-01\",\r\n        cost: \"43.95\",\r\n    },\r\n    {\r\n        txId: \"120s51a\",\r\n        user: \"wootzifer\",\r\n        date: \"2019-04-15\",\r\n        cost: \"24.20\",\r\n    },\r\n    {\r\n        txId: \"0315dsaa\",\r\n        user: \"jackdower\",\r\n        date: \"2022-04-01\",\r\n        cost: \"133.45\",\r\n    },\r\n];\r\n\r\nexport const mockBarDataTraining = [\r\n    {\r\n        day: \"MO\",\r\n        \"Trainingsdauer\": 5,\r\n        \"TrainingsdauerColor\": \"hsl(229, 70%, 50%)\",\r\n        // \"Trainingsintensität\" : 8,\r\n        // \"TrainingsIntensitätColor\": \"hsl(296, 70%, 50%)\",\r\n    },\r\n    {\r\n        day: \"DI\",\r\n        \"Trainingsdauer\": 5,\r\n        \"TrainingsdauerColor\": \"hsl(229, 70%, 50%)\",\r\n        Trainingsintensität : 8,\r\n        TrainingsintensitätColor: \"hsl(296, 70%, 50%)\",\r\n    },\r\n    {\r\n        day: \"MI\",\r\n        \"Trainingsdauer\": 5,\r\n        \"TrainingsdauerColor\": \"hsl(229, 70%, 50%)\",\r\n        Trainingsintensität : 8,\r\n        TrainingsIntensitätColor: \"hsl(296, 70%, 50%)\",\r\n    },\r\n    {\r\n        day: \"DO\",\r\n        \"Trainingsdauer\": 5,\r\n        \"TrainingsdauerColor\": \"hsl(229, 70%, 50%)\",\r\n        Trainingsintensität : 8,\r\n        TrainingsIntensitätColor: \"hsl(296, 70%, 50%)\",\r\n    },\r\n    {\r\n        day: \"FR\",\r\n        \"Trainingsdauer\": 5,\r\n        \"TrainingsdauerColor\": \"hsl(229, 70%, 50%)\",\r\n        Trainingsintensität : 8,\r\n        TrainingsIntensitätColor: \"hsl(296, 70%, 50%)\",\r\n    },\r\n    {\r\n        day: \"SA\",\r\n        \"Trainingsdauer\": 5,\r\n        \"TrainingsdauerColor\": \"hsl(229, 70%, 50%)\",\r\n        Trainingsintensität : 8,\r\n        TrainingsIntensitätColor: \"hsl(296, 70%, 50%)\",\r\n    },\r\n    {\r\n        day: \"SO\",\r\n        \"Trainingsdauer\": 3,\r\n        \"TrainingsdauerColor\": \"hsl(229, 70%, 50%)\",\r\n        Trainingsintensität : 5,\r\n        TrainingsIntensitätColor: \"hsl(296, 70%, 50%)\",\r\n    },\r\n];\r\n\r\nexport const mockBarDataSleep = [\r\n    {\r\n        day: \"MO\",\r\n        \"Schlafdauer\": 137,\r\n        \"SchlafdauerColor\": \"hsl(229, 70%, 50%)\",\r\n        // \"Schlafqualität\" : 5,\r\n        // \"SchlafqualitätColor\": \"hsl(296, 70%, 50%)\",\r\n    },\r\n    {\r\n        day: \"DI\",\r\n        \"Schlafdauer\": 55,\r\n        \"SchlafdauerColor\": \"hsl(307, 70%, 50%)\",\r\n        \"Schlafqualität\" : 5,\r\n        \"SchlafqualitätColor\": \"hsl(296, 70%, 50%)\",\r\n    },\r\n    {\r\n        day: \"MI\",\r\n        \"Schlafdauer\": 109,\r\n        \"SchlafdauerColor\": \"hsl(72, 70%, 50%)\",\r\n        Schlafqualität : 5,\r\n        SchlafqualitätColor: \"hsl(296, 70%, 50%)\",\r\n    },\r\n    {\r\n        day: \"DO\",\r\n        \"Schlafdauer\": 133,\r\n        \"SchlafdauerColor\": \"hsl(257, 70%, 50%)\",\r\n        Schlafqualität : 5,\r\n        SchlafqualitätColor: \"hsl(296, 70%, 50%)\",\r\n    },\r\n    {\r\n        day: \"FR\",\r\n        \"Schlafdauer\": 81,\r\n        \"SchlafdauerColor\": \"hsl(190, 70%, 50%)\",\r\n        Schlafqualität : 5,\r\n        SchlafqualitätColor: \"hsl(296, 70%, 50%)\",\r\n    },\r\n    {\r\n        day: \"SA\",\r\n        \"Schlafdauer\": 66,\r\n        \"SchlafdauerColor\": \"hsl(208, 70%, 50%)\",\r\n        Schlafqualität : 5,\r\n        SchlafqualitätColor: \"hsl(296, 70%, 50%)\",\r\n    },\r\n    {\r\n        day: \"SO\",\r\n        \"Schlafdauer\": 80,\r\n        \"SchlafdauerColor\": \"hsl(87, 70%, 50%)\",\r\n        Schlafqualität : 5,\r\n        SchlafqualitätColor: \"hsl(296, 70%, 50%)\",\r\n    },\r\n];\r\n\r\nexport const mockPieData = [\r\n    {\r\n        id: \"hack\",\r\n        label: \"hack\",\r\n        value: 239,\r\n        color: \"hsl(104, 70%, 50%)\",\r\n    },\r\n    {\r\n        id: \"make\",\r\n        label: \"make\",\r\n        value: 170,\r\n        color: \"hsl(162, 70%, 50%)\",\r\n    },\r\n    {\r\n        id: \"go\",\r\n        label: \"go\",\r\n        value: 322,\r\n        color: \"hsl(291, 70%, 50%)\",\r\n    },\r\n    {\r\n        id: \"lisp\",\r\n        label: \"lisp\",\r\n        value: 503,\r\n        color: \"hsl(229, 70%, 50%)\",\r\n    },\r\n    {\r\n        id: \"scala\",\r\n        label: \"scala\",\r\n        value: 584,\r\n        color: \"hsl(344, 70%, 50%)\",\r\n    },\r\n];\r\n\r\nexport const mockLineData = [\r\n    {\r\n        id: \"Zielgewicht\",\r\n        color: tokens(\"dark\").greenAccent[500],\r\n        data: [\r\n            {\r\n                x: \"1\",\r\n                y: 65,\r\n            },\r\n            {\r\n                x: \"2\",\r\n                y: 75,\r\n            },\r\n            {\r\n                x: \"3\",\r\n                y: 36,\r\n            },\r\n            {\r\n                x: \"4\",\r\n                y: 16,\r\n            },\r\n            {\r\n                x: \"5\",\r\n                y: 35,\r\n            },\r\n            {\r\n                x: \"6\",\r\n                y: 36,\r\n            },\r\n            {\r\n                x: \"7\",\r\n                y: 88,\r\n            },\r\n            {\r\n                x: \"8\",\r\n                y: 32,\r\n            },\r\n            {\r\n                x: \"9\",\r\n                y: 81,\r\n            },\r\n            {\r\n                x: \"10\",\r\n                y: 1,\r\n            },\r\n            {\r\n                x: \"11\",\r\n                y: 35,\r\n            },\r\n            {\r\n                x: \"12\",\r\n                y: 14,\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        id: \"Gewicht\",\r\n        color: tokens(\"dark\").blueAccent[300],\r\n        data: [\r\n            {\r\n                x: \"1\",\r\n                y: 65,\r\n            },\r\n            {\r\n                x: \"2\",\r\n                y: 67,\r\n            },\r\n            {\r\n                x: \"3\",\r\n                y: 67,\r\n            },\r\n            {\r\n                x: \"4\",\r\n                y: 68,\r\n            },\r\n            {\r\n                x: \"5\",\r\n                y: 68,\r\n            },\r\n            {\r\n                x: \"6\",\r\n                y: 69,\r\n            },\r\n            {\r\n                x: \"7\",\r\n                y: 69.5,\r\n            },\r\n            {\r\n                x: \"8\",\r\n                y: 70.5,\r\n            },\r\n            {\r\n                x: \"9\",\r\n                y: 71,\r\n            },\r\n            {\r\n                x: \"10\",\r\n                y: 72,\r\n            },\r\n            {\r\n                x: \"11\",\r\n                y: 73.5,\r\n            },\r\n            {\r\n                x: \"12\",\r\n                y: 80,\r\n            },\r\n        ],\r\n    },\r\n];\r\n\r\n","import { Box, useTheme } from \"@mui/material\";\r\nimport { tokens } from \"../theme\";\r\n\r\nconst ProgressCircle = ({ progress = \"0.75\", size = \"40\" }) => {\r\n    const theme = useTheme();\r\n    const colors = tokens(theme.palette.mode);\r\n    const angle = progress * 360;\r\n    return (\r\n        <Box\r\n            sx={{\r\n                background: `radial-gradient(${colors.primary[400]} 55%, transparent 56%),\r\n            conic-gradient(transparent 0deg ${angle}deg, ${colors.blueAccent[500]} ${angle}deg 360deg),\r\n            ${colors.greenAccent[500]}`,\r\n                borderRadius: \"50%\",\r\n                width: `${size}px`,\r\n                height: `${size}px`,\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ProgressCircle;","import { Box, Typography, useTheme } from \"@mui/material\";\r\nimport { tokens } from \"../theme\";\r\nimport ProgressCircle from \"./ProgressCircle\";\r\n\r\nconst StatBox = ({ title, subtitle, icon, progress, increase }) => {\r\n    const theme = useTheme();\r\n    const colors = tokens(theme.palette.mode);\r\n\r\n    return (\r\n        <Box width=\"100%\" m=\"0 30px\">\r\n            <Box display=\"flex\" justifyContent=\"space-between\">\r\n                <Box>\r\n                    {icon}\r\n                    <Typography\r\n                        variant=\"h4\"\r\n                        fontWeight=\"bold\"\r\n                        sx={{ color: colors.grey[100] }}\r\n                    >\r\n                        {title}\r\n                    </Typography>\r\n                </Box>\r\n                <Box>\r\n                    <ProgressCircle progress={progress} />\r\n                </Box>\r\n            </Box>\r\n            <Box display=\"flex\" justifyContent=\"space-between\" mt=\"2px\">\r\n                <Typography variant=\"h5\" sx={{ color: colors.greenAccent[500] }}>\r\n                    {subtitle}\r\n                </Typography>\r\n                <Typography\r\n                    variant=\"h5\"\r\n                    fontStyle=\"italic\"\r\n                    sx={{ color: colors.greenAccent[600] }}\r\n                >\r\n                    {increase}\r\n                </Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default StatBox;","import { formatDate } from \"@fullcalendar/core\";\r\nimport {\r\n  Box,\r\n  IconButton,\r\n  Typography,\r\n  useTheme,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Select,\r\n  InputLabel,\r\n  FormControl\r\n} from \"@mui/material\";\r\nimport { tokens } from \"../../theme\";\r\nimport MonitorWeightIcon from \"@mui/icons-material/MonitorWeight\";\r\nimport HotelIcon from \"@mui/icons-material/Hotel\";\r\nimport PersonAddIcon from \"@mui/icons-material/PersonAdd\";\r\nimport TrafficIcon from \"@mui/icons-material/Traffic\";\r\nimport Header from \"../../components/Header\";\r\nimport LineChartWeight from \"../../components/LineChartWeight\";\r\nimport BarChartTraining from \"../../components/BarChartTraining\";\r\nimport BarChartSleep from \"../../components/BarChartSleep\";\r\nimport StatBox from \"../../components/StatBox\";\r\nimport BarChartTrainingsLength from \"../../components/BarChartTrainingsLength\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {api} from \"../../utils/api\";\r\nimport {MenuItem} from \"react-pro-sidebar\";\r\n\r\nconst Dashboard = () => {\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n  const [eventstData, setEventsData] = useState(Array);\r\n\r\n  useEffect(() => {\r\n    const fetchEventsData = async () => {\r\n      try {\r\n        const response = await api.get('/get-events.php');\r\n        setEventsData(response.data);\r\n      } catch (error) {\r\n        alert(error.response.data.message);\r\n      }\r\n    };\r\n\r\n    if (sessionStorage.getItem(\"role\").toString().toLowerCase() !== \"coach\" || sessionStorage.getItem(\"sus_id\")) fetchEventsData();\r\n  }, []);\r\n\r\n  return (\r\n    <Box m=\"20px\">\r\n      {/* HEADER */}\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Header\r\n          title=\"DASHBOARD\"\r\n          subtitle=\"Willkommen zu Ihrem Dashboard\"\r\n        />\r\n      </Box>\r\n\r\n      {/* GRID & CHARTS */}\r\n      <Box\r\n        display=\"grid\"\r\n        gridTemplateColumns=\"repeat(12, 1fr)\"\r\n        gridAutoRows=\"140px\"\r\n        gap=\"20px\"\r\n      >\r\n        {/* ROW 1 */}\r\n        <Box\r\n          gridColumn=\"span 3\"\r\n          backgroundColor={colors.primary[400]}\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n        >\r\n          <StatBox\r\n            title=\"72.3kg\"\r\n            subtitle=\"Gewichtsänderung in Kilogramm dieser Monat\"\r\n            progress=\"0.75\"\r\n            increase=\"+0.2kg\"\r\n            icon={<MonitorWeightIcon sx={{ color: colors.greenAccent[600], fontSize: \"26px\" }} />}\r\n          />\r\n        </Box>\r\n        <Box\r\n          gridColumn=\"span 3\"\r\n          backgroundColor={colors.primary[400]}\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n        >\r\n          <StatBox\r\n            title=\"7.2h\"\r\n            subtitle=\"Durchschnittliche Schlafdauer diese Woche\"\r\n            progress=\"0.90\"\r\n            increase=\"+0.3h\"\r\n            icon={<HotelIcon sx={{ color: colors.greenAccent[600], fontSize: \"26px\" }} />}\r\n          />\r\n        </Box>\r\n        <Box\r\n          gridColumn=\"span 3\"\r\n          backgroundColor={colors.primary[400]}\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n        >\r\n          <StatBox\r\n            title=\"2.5h\"\r\n            subtitle=\"Durchschnittliche Trainingszeit diese Woche\"\r\n            progress=\"0.30\"\r\n            increase=\"+4h\"\r\n            increase=\"+4h\"\r\n            icon={<PersonAddIcon sx={{ color: colors.greenAccent[600], fontSize: \"26px\" }} />}\r\n          />\r\n        </Box>\r\n        <Box\r\n          gridColumn=\"span 3\"\r\n          backgroundColor={colors.primary[400]}\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n        >\r\n          <StatBox\r\n            title=\"23h\"\r\n            subtitle=\"Summe der Trainingszeit diese Woche\"\r\n            progress=\"0.80\"\r\n            increase=\"+10h\"\r\n            icon={<TrafficIcon sx={{ color: colors.greenAccent[600], fontSize: \"26px\" }} />}\r\n          />\r\n        </Box>\r\n\r\n        {/* ROW 2 */}\r\n        <Box\r\n          gridColumn=\"span 6\"\r\n          gridRow=\"span 2\"\r\n          backgroundColor={colors.primary[400]}\r\n        >\r\n          <Box\r\n            mt=\"25px\"\r\n            p=\"0 30px\"\r\n            display=\"flex \"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Box>\r\n              <Typography\r\n                variant=\"h5\"\r\n                fontWeight=\"600\"\r\n                color={colors.grey[100]}\r\n              >\r\n                Gewicht\r\n              </Typography>\r\n              <Typography\r\n                variant=\"h3\"\r\n                fontWeight=\"bold\"\r\n                color={colors.greenAccent[500]}\r\n              >\r\n                72.3kg\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n          <Box\r\n            height=\"250px\"\r\n            m=\"-20px 0 0 0\"\r\n          >\r\n            <LineChartWeight isDashboard={true} />\r\n          </Box>\r\n        </Box>\r\n        {/* CALENDAR SIDEBAR */}\r\n        <Box\r\n          gridColumn=\"span 6\"\r\n          gridRow=\"span 2\"\r\n          backgroundColor={colors.primary[400]}\r\n          p=\"30px\"\r\n        >\r\n          <Typography variant=\"h5\">Anstehende Termine</Typography>\r\n          <List>\r\n            {eventstData.map((event) => (\r\n              <ListItem\r\n                key={event.id}\r\n                sx={{\r\n                  backgroundColor: colors.greenAccent[500],\r\n                  margin: \"10px 0\",\r\n                  borderRadius: \"2px\",\r\n                }}\r\n              >\r\n                <ListItemText\r\n                  primary={<Typography>[{event.type}] {event.text}</Typography>}\r\n                  secondary={\r\n                    <Typography>\r\n                      {formatDate(event.date, {\r\n                        year: \"numeric\",\r\n                        month: \"short\",\r\n                        day: \"numeric\",\r\n                        locale: \"CH\",\r\n                      })}\r\n                    </Typography>\r\n                  }\r\n                />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Box>\r\n        {/* <Box\r\n          gridColumn=\"span 4\"\r\n          gridRow=\"span 2\"\r\n          backgroundColor={colors.primary[400]}\r\n          overflow=\"auto\"\r\n        >\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n            borderBottom={`4px solid ${colors.primary[500]}`}\r\n            colors={colors.grey[100]}\r\n            p=\"15px\"\r\n          >\r\n            <Typography\r\n              color={colors.grey[100]}\r\n              variant=\"h5\"\r\n              fontWeight=\"600\"\r\n            >\r\n              Anstehende Ereignisse\r\n            </Typography>\r\n          </Box>\r\n          {mockTransactions.map((transaction, i) => (\r\n            <Box\r\n              key={`${transaction.txId}-${i}`}\r\n              display=\"flex\"\r\n              justifyContent=\"space-between\"\r\n              alignItems=\"center\"\r\n              borderBottom={`4px solid ${colors.primary[500]}`}\r\n              p=\"15px\"\r\n            >\r\n              <Box>\r\n                <Typography\r\n                  color={colors.greenAccent[500]}\r\n                  variant=\"h5\"\r\n                  fontWeight=\"600\"\r\n                >\r\n                  {transaction.txId}\r\n                </Typography>\r\n                <Typography color={colors.grey[100]}>{transaction.user}</Typography>\r\n              </Box>\r\n              <Box color={colors.grey[100]}>{transaction.date}</Box>\r\n              <Box\r\n                backgroundColor={colors.greenAccent[500]}\r\n                p=\"5px 10px\"\r\n                borderRadius=\"4px\"\r\n              >\r\n                ${transaction.cost}\r\n              </Box>\r\n            </Box>\r\n          ))}\r\n        </Box> */}\r\n\r\n        {/* ROW 3 */}\r\n\r\n        <Box\r\n          gridColumn=\"span 6\"\r\n          gridRow=\"span 2\"\r\n          backgroundColor={colors.primary[400]}\r\n        >\r\n          <Typography\r\n            variant=\"h5\"\r\n            fontWeight=\"600\"\r\n            sx={{ padding: \"30px 30px 0 30px\" }}\r\n          >\r\n            Trainingszeit in Stunden\r\n          </Typography>\r\n          <Box\r\n            height=\"250px\"\r\n            mt=\"-20px\"\r\n          >\r\n            <BarChartTrainingsLength isDashboard={true} />\r\n          </Box>\r\n        </Box>\r\n\r\n        <Box\r\n          gridColumn=\"span 6\"\r\n          gridRow=\"span 2\"\r\n          backgroundColor={colors.primary[400]}\r\n        >\r\n          <Typography\r\n            variant=\"h5\"\r\n            fontWeight=\"600\"\r\n            sx={{ padding: \"30px 30px 0 30px\" }}\r\n          >\r\n            Schlaf in Stunden\r\n          </Typography>\r\n          <Box\r\n            height=\"250px\"\r\n            mt=\"-20px\"\r\n          >\r\n            <BarChartSleep isDashboard={true} />\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7 13c1.66 0 3-1.34 3-3S8.66 7 7 7s-3 1.34-3 3 1.34 3 3 3zm12-6h-8v7H3V5H1v15h2v-3h18v3h2v-9c0-2.21-1.79-4-4-4z\"\n}), 'Hotel');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 9c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3z\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M10 8.5h1v1h-1zm1.5 0h1v1h-1zm1.5 0h1v1h-1z\"\n}, \"1\")], 'MonitorWeight');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm-9-2V7H4v3H1v2h3v3h2v-3h3v-2H6zm9 4c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'PersonAdd');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 10h-3V8.86c1.72-.45 3-2 3-3.86h-3V4c0-.55-.45-1-1-1H8c-.55 0-1 .45-1 1v1H4c0 1.86 1.28 3.41 3 3.86V10H4c0 1.86 1.28 3.41 3 3.86V15H4c0 1.86 1.28 3.41 3 3.86V20c0 .55.45 1 1 1h8c.55 0 1-.45 1-1v-1.14c1.72-.45 3-2 3-3.86h-3v-1.14c1.72-.45 3-2 3-3.86zm-8 9c-1.11 0-2-.9-2-2s.89-2 2-2c1.1 0 2 .9 2 2s-.89 2-2 2zm0-5c-1.11 0-2-.9-2-2s.89-2 2-2c1.1 0 2 .9 2 2s-.89 2-2 2zm0-5c-1.11 0-2-.9-2-2 0-1.11.89-2 2-2 1.1 0 2 .89 2 2 0 1.1-.89 2-2 2z\"\n}), 'Traffic');\nexports.default = _default;"],"names":["_ref","_ref$isDashboard","isDashboard","reload","theme","useTheme","colors","tokens","palette","mode","_useState","useState","Array","_useState2","_slicedToArray","chartData","setChartData","useEffect","fetchWeightData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dayNames","response","weightData","wrap","_context","prev","next","api","get","sent","data","map","entry","day","Date","date","getDay","Schlafdauer","sleep","SchlafdauerColor","t0","alert","message","stop","apply","arguments","sessionStorage","getItem","toString","toLowerCase","_jsx","ResponsiveBar","axis","domain","line","stroke","grey","legend","text","fill","ticks","strokeWidth","legends","keys","indexBy","margin","top","right","bottom","left","padding","valueScale","type","indexScale","round","scheme","defs","id","background","color","size","stagger","rotation","lineWidth","spacing","borderColor","from","modifiers","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","undefined","legendPosition","legendOffset","axisLeft","enableLabel","labelSkipWidth","labelSkipHeight","labelTextColor","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","style","role","barAriaLabel","e","formattedValue","indexValue","Trainingsdauer","training","TrainingsdauerColor","isCustomLineColors","goalWeightData","x","y","weight","goal_weight","blueAccent","greenAccent","ResponsiveLine","tooltip","container","primary","datum","xScale","yScale","min","max","stacked","reverse","yFormat","curve","orient","tickValues","enableGridX","enableGridY","pointSize","pointColor","pointBorderWidth","pointBorderColor","pointLabelYOffset","useMesh","symbolShape","symbolBorderColor","itemBackground","children","mockDataContacts","name","e5l","age","phone","address","city","zipCode","registrarId","mockDataInvoices","cost","_ref$progress","progress","_ref$size","angle","Box","sx","concat","borderRadius","width","height","title","subtitle","icon","increase","_jsxs","m","display","justifyContent","Typography","variant","fontWeight","ProgressCircle","mt","fontStyle","_jsx2","eventstData","setEventsData","fetchEventsData","alignItems","Header","gridTemplateColumns","gridAutoRows","gap","gridColumn","backgroundColor","StatBox","MonitorWeightIcon","fontSize","HotelIcon","_defineProperty","PersonAddIcon","TrafficIcon","gridRow","p","LineChartWeight","List","event","ListItem","ListItemText","secondary","formatDate","year","month","locale","BarChartTrainingsLength","BarChartSleep","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}