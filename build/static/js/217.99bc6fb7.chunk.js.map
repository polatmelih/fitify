{"version":3,"file":"static/js/217.99bc6fb7.chunk.js","mappings":"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","sources":["components/BarChartSleep.jsx","data/mockData.jsx","components/BarChartSleepGoal.jsx","scenes/pie/index.jsx"],"sourcesContent":["import { useTheme } from \"@mui/material\";\r\nimport { ResponsiveBar } from \"@nivo/bar\";\r\nimport { tokens } from \"../theme\";\r\nimport { mockBarDataSleep as data } from \"../data/mockData\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {api} from \"../utils/api\";\r\n\r\nconst BarChartSleep = ({ isDashboard = false, reload }) => {\r\n    const theme = useTheme();\r\n    const colors = tokens(theme.palette.mode);\r\n    const [chartData, setChartData] = useState(Array);\r\n\r\n    useEffect(() => {\r\n        const fetchWeightData = async () => {\r\n            try {\r\n                const dayNames = [\"SO\", \"MO\", \"DI\", \"MI\", \"DO\", \"FR\", \"SA\"];\r\n                const response = await api.get('/get-sleep.php');\r\n                const weightData = response.data.map(entry => ({\r\n                    day: dayNames[new Date(entry.date).getDay()], // Converts the date string to a Date object\r\n                    Schlafdauer: entry.sleep,\r\n                    SchlafdauerColor: \"hsl(307, 70%, 50%)\",\r\n                }));\r\n                setChartData(weightData)\r\n            } catch (error) {\r\n                alert(error.response.data.message);\r\n            }\r\n        };\r\n\r\n        if (sessionStorage.getItem(\"role\").toString().toLowerCase() !== \"coach\" || sessionStorage.getItem(\"sus_id\")) fetchWeightData();\r\n    }, [reload]);\r\n\r\n    return (\r\n        <ResponsiveBar\r\n            data={chartData}\r\n            theme={{\r\n                // added\r\n                axis: {\r\n                    domain: {\r\n                        line: {\r\n                            stroke: colors.grey[100],\r\n                        },\r\n                    },\r\n                    legend: {\r\n                        text: {\r\n                            fill: colors.grey[100],\r\n                        },\r\n                    },\r\n                    ticks: {\r\n                        line: {\r\n                            stroke: colors.grey[100],\r\n                            strokeWidth: 1,\r\n                        },\r\n                        text: {\r\n                            fill: colors.grey[100],\r\n                        },\r\n                    },\r\n                },\r\n                legends: {\r\n                    text: {\r\n                        fill: colors.grey[100],\r\n                    },\r\n                },\r\n            }}\r\n            keys={[\"Schlafdauer\"]}\r\n            indexBy=\"day\"\r\n            margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\r\n            padding={0.3}\r\n            valueScale={{ type: \"linear\" }}\r\n            indexScale={{ type: \"band\", round: true }}\r\n            colors={{ scheme: \"category10\" }}\r\n            defs={[\r\n                {\r\n                    id: \"dots\",\r\n                    type: \"patternDots\",\r\n                    background: \"inherit\",\r\n                    color: \"#38bcb2\",\r\n                    size: 4,\r\n                    padding: 1,\r\n                    stagger: true,\r\n                },\r\n                {\r\n                    id: \"lines\",\r\n                    type: \"patternLines\",\r\n                    background: \"inherit\",\r\n                    color: \"#eed312\",\r\n                    rotation: -45,\r\n                    lineWidth: 6,\r\n                    spacing: 10,\r\n                },\r\n            ]}\r\n            borderColor={{\r\n                from: \"color\",\r\n                modifiers: [[\"darker\", \"1.6\"]],\r\n            }}\r\n            axisTop={null}\r\n            axisRight={null}\r\n            axisBottom={{\r\n                tickSize: 5,\r\n                tickPadding: 5,\r\n                tickRotation: 0,\r\n                legend: isDashboard ? undefined : \"Tag\", // changed\r\n                legendPosition: \"middle\",\r\n                legendOffset: 32,\r\n            }}\r\n            axisLeft={{\r\n                tickSize: 5,\r\n                tickPadding: 5,\r\n                tickRotation: 0,\r\n                legend: isDashboard ? undefined : \"in h\", // changed\r\n                legendPosition: \"middle\",\r\n                legendOffset: -40,\r\n            }}\r\n            enableLabel={false}\r\n            labelSkipWidth={12}\r\n            labelSkipHeight={12}\r\n            labelTextColor={{\r\n                from: \"color\",\r\n                modifiers: [[\"darker\", 1.6]],\r\n            }}\r\n            legends={[\r\n                {\r\n                    dataFrom: \"keys\",\r\n                    anchor: \"bottom-right\",\r\n                    direction: \"column\",\r\n                    justify: false,\r\n                    translateX: 120,\r\n                    translateY: 0,\r\n                    itemsSpacing: 2,\r\n                    itemWidth: 100,\r\n                    itemHeight: 20,\r\n                    itemDirection: \"left-to-right\",\r\n                    itemOpacity: 0.85,\r\n                    symbolSize: 20,\r\n                    effects: [\r\n                        {\r\n                            on: \"hover\",\r\n                            style: {\r\n                                itemOpacity: 1,\r\n                            },\r\n                        },\r\n                    ],\r\n                },\r\n            ]}\r\n            role=\"application\"\r\n            barAriaLabel={function (e) {\r\n                return e.id + \": \" + e.formattedValue + \" in day: \" + e.indexValue;\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default BarChartSleep;","import { tokens } from \"../theme\";\r\n\r\nexport const mockDataTeam = [\r\n    {\r\n        id: 1,\r\n        name: \"Jon Snow\",\r\n        e5l: \"jonsnow@g5l.com\",\r\n        age: 35,\r\n        phone: \"(665)121-5454\",\r\n        access: \"admin\",\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Cersei Lannister\",\r\n        e5l: \"cerseilannister@g5l.com\",\r\n        age: 42,\r\n        phone: \"(421)314-2288\",\r\n        access: \"manager\",\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Jaime Lannister\",\r\n        e5l: \"jaimelannister@g5l.com\",\r\n        age: 45,\r\n        phone: \"(422)982-6739\",\r\n        access: \"user\",\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Anya Stark\",\r\n        e5l: \"anyastark@g5l.com\",\r\n        age: 16,\r\n        phone: \"(921)425-6742\",\r\n        access: \"admin\",\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"Daenerys Targaryen\",\r\n        e5l: \"daenerystargaryen@g5l.com\",\r\n        age: 31,\r\n        phone: \"(421)445-1189\",\r\n        access: \"user\",\r\n    },\r\n    {\r\n        id: 6,\r\n        name: \"Ever Melisandre\",\r\n        e5l: \"evermelisandre@g5l.com\",\r\n        age: 150,\r\n        phone: \"(232)545-6483\",\r\n        access: \"manager\",\r\n    },\r\n    {\r\n        id: 7,\r\n        name: \"Ferrara Clifford\",\r\n        e5l: \"ferraraclifford@g5l.com\",\r\n        age: 44,\r\n        phone: \"(543)124-0123\",\r\n        access: \"user\",\r\n    },\r\n    {\r\n        id: 8,\r\n        name: \"Rossini Frances\",\r\n        e5l: \"rossinifrances@g5l.com\",\r\n        age: 36,\r\n        phone: \"(222)444-5555\",\r\n        access: \"user\",\r\n    },\r\n    {\r\n        id: 9,\r\n        name: \"Harvey Roxie\",\r\n        e5l: \"harveyroxie@g5l.com\",\r\n        age: 65,\r\n        phone: \"(444)555-6239\",\r\n        access: \"admin\",\r\n    },\r\n];\r\n\r\nexport const mockDataContacts = [\r\n    {\r\n        id: 1,\r\n        name: \"Jon Snow\",\r\n        e5l: \"jonsnow@g5l.com\",\r\n        age: 35,\r\n        phone: \"(665)121-5454\",\r\n        address: \"0912 Won Street, Alabama, SY 10001\",\r\n        city: \"New York\",\r\n        zipCode: \"10001\",\r\n        registrarId: 123512,\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Cersei Lannister\",\r\n        e5l: \"cerseilannister@g5l.com\",\r\n        age: 42,\r\n        phone: \"(421)314-2288\",\r\n        address: \"1234 5n Street, New York, NY 10001\",\r\n        city: \"New York\",\r\n        zipCode: \"13151\",\r\n        registrarId: 123512,\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Jaime Lannister\",\r\n        e5l: \"jaimelannister@g5l.com\",\r\n        age: 45,\r\n        phone: \"(422)982-6739\",\r\n        address: \"3333 Want Blvd, Estanza, NAY 42125\",\r\n        city: \"New York\",\r\n        zipCode: \"87281\",\r\n        registrarId: 4132513,\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Anya Stark\",\r\n        e5l: \"anyastark@g5l.com\",\r\n        age: 16,\r\n        phone: \"(921)425-6742\",\r\n        address: \"1514 5n Street, New York, NY 22298\",\r\n        city: \"New York\",\r\n        zipCode: \"15551\",\r\n        registrarId: 123512,\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"Daenerys Targaryen\",\r\n        e5l: \"daenerystargaryen@g5l.com\",\r\n        age: 31,\r\n        phone: \"(421)445-1189\",\r\n        address: \"11122 Welping Ave, Tenting, CD 21321\",\r\n        city: \"Tenting\",\r\n        zipCode: \"14215\",\r\n        registrarId: 123512,\r\n    },\r\n    {\r\n        id: 6,\r\n        name: \"Ever Melisandre\",\r\n        e5l: \"evermelisandre@g5l.com\",\r\n        age: 150,\r\n        phone: \"(232)545-6483\",\r\n        address: \"1234 Canvile Street, Esvazark, NY 10001\",\r\n        city: \"Esvazark\",\r\n        zipCode: \"10001\",\r\n        registrarId: 123512,\r\n    },\r\n    {\r\n        id: 7,\r\n        name: \"Ferrara Clifford\",\r\n        e5l: \"ferraraclifford@g5l.com\",\r\n        age: 44,\r\n        phone: \"(543)124-0123\",\r\n        address: \"22215 Super Street, Everting, ZO 515234\",\r\n        city: \"Evertin\",\r\n        zipCode: \"51523\",\r\n        registrarId: 123512,\r\n    },\r\n    {\r\n        id: 8,\r\n        name: \"Rossini Frances\",\r\n        e5l: \"rossinifrances@g5l.com\",\r\n        age: 36,\r\n        phone: \"(222)444-5555\",\r\n        address: \"4123 Ever Blvd, Wentington, AD 142213\",\r\n        city: \"Esteras\",\r\n        zipCode: \"44215\",\r\n        registrarId: 512315,\r\n    },\r\n    {\r\n        id: 9,\r\n        name: \"Harvey Roxie\",\r\n        e5l: \"harveyroxie@g5l.com\",\r\n        age: 65,\r\n        phone: \"(444)555-6239\",\r\n        address: \"51234 Avery Street, Cantory, ND 212412\",\r\n        city: \"Colunza\",\r\n        zipCode: \"111234\",\r\n        registrarId: 928397,\r\n    },\r\n    {\r\n        id: 10,\r\n        name: \"Enteri Redack\",\r\n        e5l: \"enteriredack@g5l.com\",\r\n        age: 42,\r\n        phone: \"(222)444-5555\",\r\n        address: \"4123 Easer Blvd, Wentington, AD 142213\",\r\n        city: \"Esteras\",\r\n        zipCode: \"44215\",\r\n        registrarId: 533215,\r\n    },\r\n    {\r\n        id: 11,\r\n        name: \"Steve Goodman\",\r\n        e5l: \"stevegoodmane@g5l.com\",\r\n        age: 11,\r\n        phone: \"(444)555-6239\",\r\n        address: \"51234 Fiveton Street, CunFory, ND 212412\",\r\n        city: \"Colunza\",\r\n        zipCode: \"1234\",\r\n        registrarId: 92197,\r\n    },\r\n];\r\n\r\nexport const mockDataInvoices = [\r\n    {\r\n        id: 1,\r\n        name: \"Jon Snow\",\r\n        e5l: \"jonsnow@g5l.com\",\r\n        cost: \"21.24\",\r\n        phone: \"(665)121-5454\",\r\n        date: \"03/12/2022\",\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Cersei Lannister\",\r\n        e5l: \"cerseilannister@g5l.com\",\r\n        cost: \"1.24\",\r\n        phone: \"(421)314-2288\",\r\n        date: \"06/15/2021\",\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Jaime Lannister\",\r\n        e5l: \"jaimelannister@g5l.com\",\r\n        cost: \"11.24\",\r\n        phone: \"(422)982-6739\",\r\n        date: \"05/02/2022\",\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Anya Stark\",\r\n        e5l: \"anyastark@g5l.com\",\r\n        cost: \"80.55\",\r\n        phone: \"(921)425-6742\",\r\n        date: \"03/21/2022\",\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"Daenerys Targaryen\",\r\n        e5l: \"daenerystargaryen@g5l.com\",\r\n        cost: \"1.24\",\r\n        phone: \"(421)445-1189\",\r\n        date: \"01/12/2021\",\r\n    },\r\n    {\r\n        id: 6,\r\n        name: \"Ever Melisandre\",\r\n        e5l: \"evermelisandre@g5l.com\",\r\n        cost: \"63.12\",\r\n        phone: \"(232)545-6483\",\r\n        date: \"11/02/2022\",\r\n    },\r\n    {\r\n        id: 7,\r\n        name: \"Ferrara Clifford\",\r\n        e5l: \"ferraraclifford@g5l.com\",\r\n        cost: \"52.42\",\r\n        phone: \"(543)124-0123\",\r\n        date: \"02/11/2022\",\r\n    },\r\n    {\r\n        id: 8,\r\n        name: \"Rossini Frances\",\r\n        e5l: \"rossinifrances@g5l.com\",\r\n        cost: \"21.24\",\r\n        phone: \"(222)444-5555\",\r\n        date: \"05/02/2021\",\r\n    },\r\n];\r\n\r\nexport const mockTransactions = [\r\n    {\r\n        txId: \"01e4dsa\",\r\n        user: \"johndoe\",\r\n        date: \"2021-09-01\",\r\n        cost: \"43.95\",\r\n    },\r\n    {\r\n        txId: \"0315dsaa\",\r\n        user: \"jackdower\",\r\n        date: \"2022-04-01\",\r\n        cost: \"133.45\",\r\n    },\r\n    {\r\n        txId: \"01e4dsa\",\r\n        user: \"aberdohnny\",\r\n        date: \"2021-09-01\",\r\n        cost: \"43.95\",\r\n    },\r\n    {\r\n        txId: \"51034szv\",\r\n        user: \"goodmanave\",\r\n        date: \"2022-11-05\",\r\n        cost: \"200.95\",\r\n    },\r\n    {\r\n        txId: \"0a123sb\",\r\n        user: \"stevebower\",\r\n        date: \"2022-11-02\",\r\n        cost: \"13.55\",\r\n    },\r\n    {\r\n        txId: \"01e4dsa\",\r\n        user: \"aberdohnny\",\r\n        date: \"2021-09-01\",\r\n        cost: \"43.95\",\r\n    },\r\n    {\r\n        txId: \"120s51a\",\r\n        user: \"wootzifer\",\r\n        date: \"2019-04-15\",\r\n        cost: \"24.20\",\r\n    },\r\n    {\r\n        txId: \"0315dsaa\",\r\n        user: \"jackdower\",\r\n        date: \"2022-04-01\",\r\n        cost: \"133.45\",\r\n    },\r\n];\r\n\r\nexport const mockBarDataTraining = [\r\n    {\r\n        day: \"MO\",\r\n        \"Trainingsdauer\": 5,\r\n        \"TrainingsdauerColor\": \"hsl(229, 70%, 50%)\",\r\n        // \"Trainingsintensität\" : 8,\r\n        // \"TrainingsIntensitätColor\": \"hsl(296, 70%, 50%)\",\r\n    },\r\n    {\r\n        day: \"DI\",\r\n        \"Trainingsdauer\": 5,\r\n        \"TrainingsdauerColor\": \"hsl(229, 70%, 50%)\",\r\n        Trainingsintensität : 8,\r\n        TrainingsintensitätColor: \"hsl(296, 70%, 50%)\",\r\n    },\r\n    {\r\n        day: \"MI\",\r\n        \"Trainingsdauer\": 5,\r\n        \"TrainingsdauerColor\": \"hsl(229, 70%, 50%)\",\r\n        Trainingsintensität : 8,\r\n        TrainingsIntensitätColor: \"hsl(296, 70%, 50%)\",\r\n    },\r\n    {\r\n        day: \"DO\",\r\n        \"Trainingsdauer\": 5,\r\n        \"TrainingsdauerColor\": \"hsl(229, 70%, 50%)\",\r\n        Trainingsintensität : 8,\r\n        TrainingsIntensitätColor: \"hsl(296, 70%, 50%)\",\r\n    },\r\n    {\r\n        day: \"FR\",\r\n        \"Trainingsdauer\": 5,\r\n        \"TrainingsdauerColor\": \"hsl(229, 70%, 50%)\",\r\n        Trainingsintensität : 8,\r\n        TrainingsIntensitätColor: \"hsl(296, 70%, 50%)\",\r\n    },\r\n    {\r\n        day: \"SA\",\r\n        \"Trainingsdauer\": 5,\r\n        \"TrainingsdauerColor\": \"hsl(229, 70%, 50%)\",\r\n        Trainingsintensität : 8,\r\n        TrainingsIntensitätColor: \"hsl(296, 70%, 50%)\",\r\n    },\r\n    {\r\n        day: \"SO\",\r\n        \"Trainingsdauer\": 3,\r\n        \"TrainingsdauerColor\": \"hsl(229, 70%, 50%)\",\r\n        Trainingsintensität : 5,\r\n        TrainingsIntensitätColor: \"hsl(296, 70%, 50%)\",\r\n    },\r\n];\r\n\r\nexport const mockBarDataSleep = [\r\n    {\r\n        day: \"MO\",\r\n        \"Schlafdauer\": 137,\r\n        \"SchlafdauerColor\": \"hsl(229, 70%, 50%)\",\r\n        // \"Schlafqualität\" : 5,\r\n        // \"SchlafqualitätColor\": \"hsl(296, 70%, 50%)\",\r\n    },\r\n    {\r\n        day: \"DI\",\r\n        \"Schlafdauer\": 55,\r\n        \"SchlafdauerColor\": \"hsl(307, 70%, 50%)\",\r\n        \"Schlafqualität\" : 5,\r\n        \"SchlafqualitätColor\": \"hsl(296, 70%, 50%)\",\r\n    },\r\n    {\r\n        day: \"MI\",\r\n        \"Schlafdauer\": 109,\r\n        \"SchlafdauerColor\": \"hsl(72, 70%, 50%)\",\r\n        Schlafqualität : 5,\r\n        SchlafqualitätColor: \"hsl(296, 70%, 50%)\",\r\n    },\r\n    {\r\n        day: \"DO\",\r\n        \"Schlafdauer\": 133,\r\n        \"SchlafdauerColor\": \"hsl(257, 70%, 50%)\",\r\n        Schlafqualität : 5,\r\n        SchlafqualitätColor: \"hsl(296, 70%, 50%)\",\r\n    },\r\n    {\r\n        day: \"FR\",\r\n        \"Schlafdauer\": 81,\r\n        \"SchlafdauerColor\": \"hsl(190, 70%, 50%)\",\r\n        Schlafqualität : 5,\r\n        SchlafqualitätColor: \"hsl(296, 70%, 50%)\",\r\n    },\r\n    {\r\n        day: \"SA\",\r\n        \"Schlafdauer\": 66,\r\n        \"SchlafdauerColor\": \"hsl(208, 70%, 50%)\",\r\n        Schlafqualität : 5,\r\n        SchlafqualitätColor: \"hsl(296, 70%, 50%)\",\r\n    },\r\n    {\r\n        day: \"SO\",\r\n        \"Schlafdauer\": 80,\r\n        \"SchlafdauerColor\": \"hsl(87, 70%, 50%)\",\r\n        Schlafqualität : 5,\r\n        SchlafqualitätColor: \"hsl(296, 70%, 50%)\",\r\n    },\r\n];\r\n\r\nexport const mockPieData = [\r\n    {\r\n        id: \"hack\",\r\n        label: \"hack\",\r\n        value: 239,\r\n        color: \"hsl(104, 70%, 50%)\",\r\n    },\r\n    {\r\n        id: \"make\",\r\n        label: \"make\",\r\n        value: 170,\r\n        color: \"hsl(162, 70%, 50%)\",\r\n    },\r\n    {\r\n        id: \"go\",\r\n        label: \"go\",\r\n        value: 322,\r\n        color: \"hsl(291, 70%, 50%)\",\r\n    },\r\n    {\r\n        id: \"lisp\",\r\n        label: \"lisp\",\r\n        value: 503,\r\n        color: \"hsl(229, 70%, 50%)\",\r\n    },\r\n    {\r\n        id: \"scala\",\r\n        label: \"scala\",\r\n        value: 584,\r\n        color: \"hsl(344, 70%, 50%)\",\r\n    },\r\n];\r\n\r\nexport const mockLineData = [\r\n    {\r\n        id: \"Zielgewicht\",\r\n        color: tokens(\"dark\").greenAccent[500],\r\n        data: [\r\n            {\r\n                x: \"1\",\r\n                y: 65,\r\n            },\r\n            {\r\n                x: \"2\",\r\n                y: 75,\r\n            },\r\n            {\r\n                x: \"3\",\r\n                y: 36,\r\n            },\r\n            {\r\n                x: \"4\",\r\n                y: 16,\r\n            },\r\n            {\r\n                x: \"5\",\r\n                y: 35,\r\n            },\r\n            {\r\n                x: \"6\",\r\n                y: 36,\r\n            },\r\n            {\r\n                x: \"7\",\r\n                y: 88,\r\n            },\r\n            {\r\n                x: \"8\",\r\n                y: 32,\r\n            },\r\n            {\r\n                x: \"9\",\r\n                y: 81,\r\n            },\r\n            {\r\n                x: \"10\",\r\n                y: 1,\r\n            },\r\n            {\r\n                x: \"11\",\r\n                y: 35,\r\n            },\r\n            {\r\n                x: \"12\",\r\n                y: 14,\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        id: \"Gewicht\",\r\n        color: tokens(\"dark\").blueAccent[300],\r\n        data: [\r\n            {\r\n                x: \"1\",\r\n                y: 65,\r\n            },\r\n            {\r\n                x: \"2\",\r\n                y: 67,\r\n            },\r\n            {\r\n                x: \"3\",\r\n                y: 67,\r\n            },\r\n            {\r\n                x: \"4\",\r\n                y: 68,\r\n            },\r\n            {\r\n                x: \"5\",\r\n                y: 68,\r\n            },\r\n            {\r\n                x: \"6\",\r\n                y: 69,\r\n            },\r\n            {\r\n                x: \"7\",\r\n                y: 69.5,\r\n            },\r\n            {\r\n                x: \"8\",\r\n                y: 70.5,\r\n            },\r\n            {\r\n                x: \"9\",\r\n                y: 71,\r\n            },\r\n            {\r\n                x: \"10\",\r\n                y: 72,\r\n            },\r\n            {\r\n                x: \"11\",\r\n                y: 73.5,\r\n            },\r\n            {\r\n                x: \"12\",\r\n                y: 80,\r\n            },\r\n        ],\r\n    },\r\n];\r\n\r\n","import { useTheme } from \"@mui/material\";\r\nimport { ResponsiveBar } from \"@nivo/bar\";\r\nimport { tokens } from \"../theme\";\r\nimport { mockBarDataSleep as data } from \"../data/mockData\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {api} from \"../utils/api\";\r\n\r\nconst BarChartSleep = ({ isDashboard = false }) => {\r\n    const theme = useTheme();\r\n    const colors = tokens(theme.palette.mode);\r\n    const [chartData, setChartData] = useState(Array);\r\n\r\n    useEffect(() => {\r\n        const fetchWeightData = async () => {\r\n            try {\r\n                const dayNames = [\"SO\", \"MO\", \"DI\", \"MI\", \"DO\", \"FR\", \"SA\"];\r\n                const response = await api.get('/get-sleep.php');\r\n                const weightData = response.data.map(entry => ({\r\n                    day: dayNames[new Date(entry.date).getDay()], // Converts the date string to a Date object\r\n                    Schlafqualität: entry.sleep_goal,\r\n                    SchlafqualitätColor: \"hsl(28, 100%, 52.7%)\",\r\n                }));\r\n                setChartData(weightData)\r\n            } catch (error) {\r\n                alert(error.response.data.message);\r\n            }\r\n        };\r\n\r\n        if (sessionStorage.getItem(\"role\").toString().toLowerCase() !== \"coach\" || sessionStorage.getItem(\"sus_id\")) fetchWeightData();\r\n    }, []);\r\n\r\n    return (\r\n        <ResponsiveBar\r\n            data={chartData}\r\n            theme={{\r\n                // added\r\n                axis: {\r\n                    domain: {\r\n                        line: {\r\n                            stroke: colors.grey[100],\r\n                        },\r\n                    },\r\n                    legend: {\r\n                        text: {\r\n                            fill: colors.grey[100],\r\n                        },\r\n                    },\r\n                    ticks: {\r\n                        line: {\r\n                            stroke: colors.grey[100],\r\n                            strokeWidth: 1,\r\n                        },\r\n                        text: {\r\n                            fill: colors.grey[100],\r\n                        },\r\n                    },\r\n                },\r\n                legends: {\r\n                    text: {\r\n                        fill: colors.grey[100],\r\n                    },\r\n                },\r\n            }}\r\n            keys={[\"Schlafqualität\"]}\r\n            indexBy=\"day\"\r\n            margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\r\n            padding={0.3}\r\n            valueScale={{ type: \"linear\" }}\r\n            indexScale={{ type: \"band\", round: true }}\r\n            colors={{ scheme: \"category10\" }}\r\n            defs={[\r\n                {\r\n                    id: \"dots\",\r\n                    type: \"patternDots\",\r\n                    background: \"inherit\",\r\n                    color: \"#38bcb2\",\r\n                    size: 4,\r\n                    padding: 1,\r\n                    stagger: true,\r\n                },\r\n                {\r\n                    id: \"lines\",\r\n                    type: \"patternLines\",\r\n                    background: \"inherit\",\r\n                    color: \"#eed312\",\r\n                    rotation: -45,\r\n                    lineWidth: 6,\r\n                    spacing: 10,\r\n                },\r\n            ]}\r\n            borderColor={{\r\n                from: \"color\",\r\n                modifiers: [[\"darker\", \"1.6\"]],\r\n            }}\r\n            axisTop={null}\r\n            axisRight={null}\r\n            axisBottom={{\r\n                tickSize: 5,\r\n                tickPadding: 5,\r\n                tickRotation: 0,\r\n                legend: isDashboard ? undefined : \"Tag\", // changed\r\n                legendPosition: \"middle\",\r\n                legendOffset: 32,\r\n            }}\r\n            axisLeft={{\r\n                tickSize: 5,\r\n                tickPadding: 5,\r\n                tickRotation: 0,\r\n                legend: isDashboard ? undefined : \"in h\", // changed\r\n                legendPosition: \"middle\",\r\n                legendOffset: -40,\r\n            }}\r\n            enableLabel={false}\r\n            labelSkipWidth={12}\r\n            labelSkipHeight={12}\r\n            labelTextColor={{\r\n                from: \"color\",\r\n                modifiers: [[\"darker\", 1.6]],\r\n            }}\r\n            legends={[\r\n                {\r\n                    dataFrom: \"keys\",\r\n                    anchor: \"bottom-right\",\r\n                    direction: \"column\",\r\n                    justify: false,\r\n                    translateX: 120,\r\n                    translateY: 0,\r\n                    itemsSpacing: 2,\r\n                    itemWidth: 100,\r\n                    itemHeight: 20,\r\n                    itemDirection: \"left-to-right\",\r\n                    itemOpacity: 0.85,\r\n                    symbolSize: 20,\r\n                    effects: [\r\n                        {\r\n                            on: \"hover\",\r\n                            style: {\r\n                                itemOpacity: 1,\r\n                            },\r\n                        },\r\n                    ],\r\n                },\r\n            ]}\r\n            role=\"application\"\r\n            barAriaLabel={function (e) {\r\n                return e.id + \": \" + e.formattedValue + \" in day: \" + e.indexValue;\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default BarChartSleep;","import {Box, Button, TextField} from \"@mui/material\";\r\nimport Header from \"../../components/Header\";\r\nimport BarChartSleep from \"../../components/BarChartSleep\";\r\nimport BarChartSleepGoal from \"../../components/BarChartSleepGoal\";\r\nimport {useState} from \"react\";\r\nimport {api} from \"../../utils/api\";\r\n\r\nconst Pie = () => {\r\n    const [input1, setInput1] = useState(\"\");\r\n    const [input2, setInput2] = useState(\"\");\r\n    const [rerender1, setRerender1] = useState(crypto.randomUUID());\r\n    const [rerender2, setRerender2] = useState(crypto.randomUUID());\r\n\r\n    const handleSubmit = async () => {\r\n        try {\r\n            const requestBody = JSON.parse(JSON.stringify({\"sleep\": input1, \"sleep_goal\": input2}));\r\n            await api.post(\"/set-sleep.php\", requestBody);\r\n            setInput1(\"\")\r\n            setInput2(\"\")\r\n            setRerender1(crypto.randomUUID())\r\n            setRerender2(crypto.randomUUID())\r\n        } catch (error) {\r\n            alert(error.response.data.message);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box m=\"20px\">\r\n            <Header title=\"Schlafdetails\" subtitle=\"Schlafdetails im Überblick\" />\r\n            {sessionStorage.getItem(\"role\").toString().toLowerCase() !== \"coach\" && <Box>\r\n                <TextField type=\"number\" value={input1} label=\"Schlafdauer\" variant=\"outlined\" onChange={(e) => setInput1(e.target.value)} sx={{mr: \"20px\"}} />\r\n                <TextField type=\"number\" value={input2} label=\"Schlafqualität\" variant=\"outlined\" onChange={(e) => setInput2(e.target.value)} sx={{mr: \"20px\"}} />\r\n                <Button\r\n                    disabled={!input1 || !input2}\r\n                    variant=\"contained\"\r\n                    size=\"large\"\r\n                    sx={{height: \"50px\"}}\r\n                    onClick={handleSubmit}\r\n                >Eintragen</Button>\r\n            </Box>}\r\n            <Box height=\"38vh\">\r\n                <BarChartSleep key={rerender1} />\r\n            </Box>\r\n            <Box height=\"38vh\">\r\n                <BarChartSleepGoal key={rerender2} />\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Pie;"],"names":["_ref","_ref$isDashboard","isDashboard","reload","theme","useTheme","colors","tokens","palette","mode","_useState","useState","Array","_useState2","_slicedToArray","chartData","setChartData","useEffect","fetchWeightData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dayNames","response","weightData","wrap","_context","prev","next","api","get","sent","data","map","entry","day","Date","date","getDay","Schlafdauer","sleep","SchlafdauerColor","t0","alert","message","stop","apply","arguments","sessionStorage","getItem","toString","toLowerCase","_jsx","ResponsiveBar","axis","domain","line","stroke","grey","legend","text","fill","ticks","strokeWidth","legends","keys","indexBy","margin","top","right","bottom","left","padding","valueScale","type","indexScale","round","scheme","defs","id","background","color","size","stagger","rotation","lineWidth","spacing","borderColor","from","modifiers","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","undefined","legendPosition","legendOffset","axisLeft","enableLabel","labelSkipWidth","labelSkipHeight","labelTextColor","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","style","role","barAriaLabel","e","formattedValue","indexValue","mockDataContacts","name","e5l","age","phone","address","city","zipCode","registrarId","mockDataInvoices","cost","greenAccent","blueAccent","Schlafqualität","sleep_goal","SchlafqualitätColor","input1","setInput1","_useState3","_useState4","input2","setInput2","_useState5","crypto","randomUUID","_useState6","rerender1","setRerender1","_useState7","_useState8","rerender2","setRerender2","handleSubmit","requestBody","JSON","parse","stringify","post","_jsxs","Box","m","children","Header","title","subtitle","TextField","value","label","variant","onChange","target","sx","mr","Button","disabled","height","onClick","BarChartSleep","BarChartSleepGoal"],"sourceRoot":""}