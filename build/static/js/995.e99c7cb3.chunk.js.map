{"version":3,"file":"static/js/995.e99c7cb3.chunk.js","mappings":"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","sources":["../node_modules/@nivo/annotations/src/props.ts","../node_modules/@nivo/annotations/src/utils.ts","../node_modules/@nivo/annotations/src/compute.ts","../node_modules/@nivo/annotations/src/hooks.ts","../node_modules/@nivo/annotations/src/AnnotationNote.tsx","../node_modules/@nivo/annotations/src/AnnotationLink.tsx","../node_modules/@nivo/annotations/src/CircleAnnotationOutline.tsx","../node_modules/@nivo/annotations/src/DotAnnotationOutline.tsx","../node_modules/@nivo/annotations/src/RectAnnotationOutline.tsx","../node_modules/@nivo/annotations/src/Annotation.tsx","../node_modules/@nivo/annotations/src/canvas.ts","../node_modules/d3-shape/src/array.js","../node_modules/d3-shape/src/stack.js","../node_modules/@nivo/bar/src/BarAnnotations.tsx","../node_modules/@nivo/bar/src/BarLegends.tsx","../node_modules/@nivo/bar/src/BarItem.tsx","../node_modules/@nivo/bar/src/props.ts","../node_modules/@nivo/bar/src/BarTooltip.tsx","../node_modules/@nivo/bar/src/compute/common.ts","../node_modules/@nivo/bar/src/compute/grouped.ts","../node_modules/@nivo/bar/src/compute/stacked.ts","../node_modules/@nivo/bar/src/compute/legends.ts","../node_modules/@nivo/bar/src/hooks.ts","../node_modules/@nivo/bar/src/Bar.tsx","../node_modules/@nivo/bar/src/BarCanvas.tsx","../node_modules/@nivo/bar/src/ResponsiveBar.tsx","../node_modules/@nivo/bar/src/ResponsiveBarCanvas.tsx","../node_modules/lodash/_arrayEach.js","../node_modules/lodash/_baseAssign.js","../node_modules/lodash/_baseAssignIn.js","../node_modules/lodash/_baseClone.js","../node_modules/lodash/_baseIsMap.js","../node_modules/lodash/_baseIsSet.js","../node_modules/lodash/_baseSlice.js","../node_modules/lodash/_baseUnset.js","../node_modules/lodash/_cloneDataView.js","../node_modules/lodash/_cloneRegExp.js","../node_modules/lodash/_cloneSymbol.js","../node_modules/lodash/_copySymbols.js","../node_modules/lodash/_copySymbolsIn.js","../node_modules/lodash/_customOmitClone.js","../node_modules/lodash/_getAllKeysIn.js","../node_modules/lodash/_getSymbolsIn.js","../node_modules/lodash/_initCloneArray.js","../node_modules/lodash/_initCloneByTag.js","../node_modules/lodash/_parent.js","../node_modules/lodash/isMap.js","../node_modules/lodash/isSet.js","../node_modules/lodash/omit.js"],"sourcesContent":["export const defaultProps = {\n    dotSize: 4,\n    noteWidth: 120,\n    noteTextOffset: 8,\n    animate: true,\n}\n","import {\n    AnnotationSpec,\n    CircleAnnotationSpec,\n    DotAnnotationSpec,\n    Note,\n    NoteCanvas,\n    NoteSvg,\n    RectAnnotationSpec,\n} from './types'\nimport { isValidElement } from 'react'\n\nexport const isSvgNote = <Datum>(note: Note<Datum>): note is NoteSvg<Datum> => {\n    const noteType = typeof note\n\n    return (\n        isValidElement(note) ||\n        noteType === 'string' ||\n        noteType === 'function' ||\n        noteType === 'object'\n    )\n}\n\nexport const isCanvasNote = <Datum>(note: Note<Datum>): note is NoteCanvas<Datum> => {\n    const noteType = typeof note\n\n    return noteType === 'string' || noteType === 'function'\n}\n\nexport const isCircleAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is CircleAnnotationSpec<Datum> => annotationSpec.type === 'circle'\n\nexport const isDotAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is DotAnnotationSpec<Datum> => annotationSpec.type === 'dot'\n\nexport const isRectAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is RectAnnotationSpec<Datum> => annotationSpec.type === 'rect'\n","import { filter, isNumber, omit } from 'lodash'\nimport {\n    radiansToDegrees,\n    absoluteAngleDegrees,\n    degreesToRadians,\n    positionFromAngle,\n} from '@nivo/core'\nimport { defaultProps } from './props'\nimport {\n    AnnotationPositionGetter,\n    AnnotationDimensionsGetter,\n    BoundAnnotation,\n    AnnotationMatcher,\n    AnnotationInstructions,\n} from './types'\nimport { isCircleAnnotation, isRectAnnotation } from './utils'\n\nexport const bindAnnotations = <\n    Datum = {\n        x: number\n        y: number\n    }\n>({\n    data,\n    annotations,\n    getPosition,\n    getDimensions,\n}: {\n    data: Datum[]\n    annotations: AnnotationMatcher<Datum>[]\n    getPosition: AnnotationPositionGetter<Datum>\n    getDimensions: AnnotationDimensionsGetter<Datum>\n}): BoundAnnotation<Datum>[] =>\n    annotations.reduce((acc: BoundAnnotation<Datum>[], annotation) => {\n        const offset = annotation.offset || 0\n\n        return [\n            ...acc,\n            ...filter<Datum>(data, annotation.match).map(datum => {\n                const position = getPosition(datum)\n                const dimensions = getDimensions(datum)\n\n                if (isCircleAnnotation(annotation) || isRectAnnotation(annotation)) {\n                    dimensions.size = dimensions.size + offset * 2\n                    dimensions.width = dimensions.width + offset * 2\n                    dimensions.height = dimensions.height + offset * 2\n                }\n\n                // acc.push({\n                //     ...omit(annotation, ['match', 'offset']),\n                //     ...position,\n                //     ...dimensions,\n                //     size: annotation.size || dimensions.size,\n                //     datum,\n                // } as any)\n                // return [\n                //     ...acc,\n                //     {\n                //         ...omit(annotation, ['match', 'offset']),\n                //         ...position,\n                //         ...dimensions,\n                //         size: annotation.size || dimensions.size,\n                //         datum,\n                //     },\n                // ]\n                return {\n                    ...omit(annotation, ['match', 'offset']),\n                    ...position,\n                    ...dimensions,\n                    size: annotation.size || dimensions.size,\n                    datum,\n                } as Required<BoundAnnotation<Datum>>\n            }),\n        ]\n\n        // return acc\n    }, [])\n\nexport const getLinkAngle = (\n    sourceX: number,\n    sourceY: number,\n    targetX: number,\n    targetY: number\n) => {\n    const angle = Math.atan2(targetY - sourceY, targetX - sourceX)\n\n    return absoluteAngleDegrees(radiansToDegrees(angle))\n}\n\nexport const computeAnnotation = <Datum>(\n    annotation: BoundAnnotation<Datum>\n): AnnotationInstructions => {\n    const {\n        x,\n        y,\n        noteX,\n        noteY,\n        noteWidth = defaultProps.noteWidth,\n        noteTextOffset = defaultProps.noteTextOffset,\n    } = annotation\n\n    let computedNoteX: number\n    let computedNoteY: number\n\n    if (isNumber(noteX)) {\n        computedNoteX = x + noteX\n    } else if (noteX.abs !== undefined) {\n        computedNoteX = noteX.abs\n    } else {\n        throw new Error(`noteX should be either a number or an object containing an 'abs' property`)\n    }\n\n    if (isNumber(noteY)) {\n        computedNoteY = y + noteY\n    } else if (noteY.abs !== undefined) {\n        computedNoteY = noteY.abs\n    } else {\n        throw new Error(`noteY should be either a number or an object containing an 'abs' property`)\n    }\n\n    let computedX = x\n    let computedY = y\n\n    const angle = getLinkAngle(x, y, computedNoteX, computedNoteY)\n\n    if (isCircleAnnotation<Datum>(annotation)) {\n        const position = positionFromAngle(degreesToRadians(angle), annotation.size / 2)\n        computedX += position.x\n        computedY += position.y\n    }\n\n    if (isRectAnnotation<Datum>(annotation)) {\n        const eighth = Math.round((angle + 90) / 45) % 8\n        if (eighth === 0) {\n            computedY -= annotation.height / 2\n        }\n        if (eighth === 1) {\n            computedX += annotation.width / 2\n            computedY -= annotation.height / 2\n        }\n        if (eighth === 2) {\n            computedX += annotation.width / 2\n        }\n        if (eighth === 3) {\n            computedX += annotation.width / 2\n            computedY += annotation.height / 2\n        }\n        if (eighth === 4) {\n            computedY += annotation.height / 2\n        }\n        if (eighth === 5) {\n            computedX -= annotation.width / 2\n            computedY += annotation.height / 2\n        }\n        if (eighth === 6) {\n            computedX -= annotation.width / 2\n        }\n        if (eighth === 7) {\n            computedX -= annotation.width / 2\n            computedY -= annotation.height / 2\n        }\n    }\n\n    let textX = computedNoteX\n    const textY = computedNoteY - noteTextOffset\n\n    let noteLineX = computedNoteX\n    const noteLineY = computedNoteY\n\n    if ((angle + 90) % 360 > 180) {\n        textX -= noteWidth\n        noteLineX -= noteWidth\n    } else {\n        noteLineX += noteWidth\n    }\n\n    return {\n        points: [\n            [computedX, computedY],\n            [computedNoteX, computedNoteY],\n            [noteLineX, noteLineY],\n        ] as [number, number][],\n        text: [textX, textY],\n        angle: angle + 90,\n    }\n}\n","import { useMemo } from 'react'\nimport { bindAnnotations, computeAnnotation } from './compute'\nimport {\n    AnnotationDimensionsGetter,\n    AnnotationMatcher,\n    AnnotationPositionGetter,\n    BoundAnnotation,\n} from './types'\n\n/**\n * Bind annotations to a dataset.\n */\nexport const useAnnotations = <Datum>({\n    data,\n    annotations,\n    getPosition,\n    getDimensions,\n}: {\n    data: Datum[]\n    annotations: AnnotationMatcher<Datum>[]\n    getPosition: AnnotationPositionGetter<Datum>\n    getDimensions: AnnotationDimensionsGetter<Datum>\n}) =>\n    useMemo(\n        () =>\n            bindAnnotations<Datum>({\n                data,\n                annotations,\n                getPosition,\n                getDimensions,\n            }),\n        [data, annotations, getPosition, getDimensions]\n    )\n\nexport const useComputedAnnotations = <Datum>({\n    annotations,\n}: {\n    annotations: BoundAnnotation<Datum>[]\n}) =>\n    useMemo(\n        () =>\n            annotations.map(annotation => ({\n                ...annotation,\n                computed: computeAnnotation<Datum>({\n                    ...annotation,\n                }),\n            })),\n        [annotations]\n    )\n\nexport const useComputedAnnotation = <Datum>(annotation: BoundAnnotation<Datum>) =>\n    useMemo(() => computeAnnotation<Datum>(annotation), [annotation])\n","import { createElement } from 'react'\nimport omit from 'lodash/omit'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { NoteSvg } from './types'\n\nexport const AnnotationNote = <Datum,>({\n    datum,\n    x,\n    y,\n    note,\n}: {\n    datum: Datum\n    x: number\n    y: number\n    note: NoteSvg<Datum>\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    if (typeof note === 'function') {\n        return createElement(note, { x, y, datum })\n    }\n\n    return (\n        <>\n            {theme.annotations.text.outlineWidth > 0 && (\n                <animated.text\n                    x={animatedProps.x}\n                    y={animatedProps.y}\n                    style={{\n                        ...theme.annotations.text,\n                        strokeLinejoin: 'round',\n                        strokeWidth: theme.annotations.text.outlineWidth * 2,\n                        stroke: theme.annotations.text.outlineColor,\n                    }}\n                >\n                    {note}\n                </animated.text>\n            )}\n            <animated.text\n                x={animatedProps.x}\n                y={animatedProps.y}\n                style={omit(theme.annotations.text, ['outlineWidth', 'outlineColor'])}\n            >\n                {note}\n            </animated.text>\n        </>\n    )\n}\n","import { useMemo } from 'react'\nimport { animated } from '@react-spring/web'\nimport { useAnimatedPath, useTheme } from '@nivo/core'\n\nexport const AnnotationLink = ({\n    points,\n    isOutline = false,\n}: {\n    points: [number, number][]\n    isOutline?: boolean\n}) => {\n    const theme = useTheme()\n\n    const path = useMemo(() => {\n        const [firstPoint, ...otherPoints] = points\n\n        return otherPoints.reduce(\n            (acc, [x, y]) => `${acc} L${x},${y}`,\n            `M${firstPoint[0]},${firstPoint[1]}`\n        )\n    }, [points])\n\n    const animatedPath = useAnimatedPath(path)\n\n    if (isOutline && theme.annotations.link.outlineWidth <= 0) {\n        return null\n    }\n\n    const style = { ...theme.annotations.link }\n    if (isOutline) {\n        style.strokeLinecap = 'square'\n        style.strokeWidth =\n            theme.annotations.link.strokeWidth + theme.annotations.link.outlineWidth * 2\n        style.stroke = theme.annotations.link.outlineColor\n        style.opacity = theme.annotations.link.outlineOpacity\n    }\n\n    return <animated.path fill=\"none\" d={animatedPath} style={style} />\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\n\nexport const CircleAnnotationOutline = ({ x, y, size }: { x: number; y: number; size: number }) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.circle\n                    cx={animatedProps.x}\n                    cy={animatedProps.y}\n                    r={animatedProps.radius}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth:\n                            theme.annotations.outline.strokeWidth +\n                            theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                        opacity: theme.annotations.outline.outlineOpacity,\n                    }}\n                />\n            )}\n            <animated.circle\n                cx={animatedProps.x}\n                cy={animatedProps.y}\n                r={animatedProps.radius}\n                style={theme.annotations.outline}\n            />\n        </>\n    )\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\nimport { defaultProps } from './props'\n\nexport const DotAnnotationOutline = ({\n    x,\n    y,\n    size = defaultProps.dotSize,\n}: {\n    x: number\n    y: number\n    size?: number\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.circle\n                    cx={animatedProps.x}\n                    cy={animatedProps.y}\n                    r={animatedProps.radius}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth: theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                        opacity: theme.annotations.outline.outlineOpacity,\n                    }}\n                />\n            )}\n            <animated.circle\n                cx={animatedProps.x}\n                cy={animatedProps.y}\n                r={animatedProps.radius}\n                style={theme.annotations.symbol}\n            />\n        </>\n    )\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\n\nexport const RectAnnotationOutline = ({\n    x,\n    y,\n    width,\n    height,\n    borderRadius = 6,\n}: {\n    x: number\n    y: number\n    width: number\n    height: number\n    borderRadius?: number\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x: x - width / 2,\n        y: y - height / 2,\n        width,\n        height,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.rect\n                    x={animatedProps.x}\n                    y={animatedProps.y}\n                    rx={borderRadius}\n                    ry={borderRadius}\n                    width={animatedProps.width}\n                    height={animatedProps.height}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth:\n                            theme.annotations.outline.strokeWidth +\n                            theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                        opacity: theme.annotations.outline.outlineOpacity,\n                    }}\n                />\n            )}\n            <animated.rect\n                x={animatedProps.x}\n                y={animatedProps.y}\n                rx={borderRadius}\n                ry={borderRadius}\n                width={animatedProps.width}\n                height={animatedProps.height}\n                style={theme.annotations.outline}\n            />\n        </>\n    )\n}\n","import { useComputedAnnotation } from './hooks'\nimport { AnnotationNote } from './AnnotationNote'\nimport { AnnotationLink } from './AnnotationLink'\nimport { CircleAnnotationOutline } from './CircleAnnotationOutline'\nimport { DotAnnotationOutline } from './DotAnnotationOutline'\nimport { RectAnnotationOutline } from './RectAnnotationOutline'\nimport { BoundAnnotation } from './types'\nimport { isCircleAnnotation, isDotAnnotation, isRectAnnotation, isSvgNote } from './utils'\n\nexport const Annotation = <Datum,>(annotation: BoundAnnotation<Datum>) => {\n    const { datum, x, y, note } = annotation\n    const computed = useComputedAnnotation(annotation)\n\n    if (!isSvgNote(note)) {\n        throw new Error('note should be a valid react element')\n    }\n\n    return (\n        <>\n            <AnnotationLink points={computed.points} isOutline={true} />\n            {isCircleAnnotation(annotation) && (\n                <CircleAnnotationOutline x={x} y={y} size={annotation.size} />\n            )}\n            {isDotAnnotation(annotation) && (\n                <DotAnnotationOutline x={x} y={y} size={annotation.size} />\n            )}\n            {isRectAnnotation(annotation) && (\n                <RectAnnotationOutline\n                    x={x}\n                    y={y}\n                    width={annotation.width}\n                    height={annotation.height}\n                    borderRadius={annotation.borderRadius}\n                />\n            )}\n            <AnnotationLink points={computed.points} />\n            <AnnotationNote datum={datum} x={computed.text[0]} y={computed.text[1]} note={note} />\n        </>\n    )\n}\n","import { CompleteTheme } from '@nivo/core'\nimport { ComputedAnnotation } from './types'\nimport { isCanvasNote, isCircleAnnotation, isDotAnnotation, isRectAnnotation } from './utils'\n\nconst drawPoints = (ctx: CanvasRenderingContext2D, points: [number, number][]) => {\n    points.forEach(([x, y], index) => {\n        if (index === 0) {\n            ctx.moveTo(x, y)\n        } else {\n            ctx.lineTo(x, y)\n        }\n    })\n}\n\nexport const renderAnnotationsToCanvas = <Datum>(\n    ctx: CanvasRenderingContext2D,\n    {\n        annotations,\n        theme,\n    }: {\n        annotations: ComputedAnnotation<Datum>[]\n        theme: CompleteTheme\n    }\n) => {\n    if (annotations.length === 0) return\n\n    ctx.save()\n    annotations.forEach(annotation => {\n        if (!isCanvasNote(annotation.note)) {\n            throw new Error('note is invalid for canvas implementation')\n        }\n\n        if (theme.annotations.link.outlineWidth > 0) {\n            ctx.lineCap = 'square'\n            ctx.strokeStyle = theme.annotations.link.outlineColor\n            ctx.lineWidth =\n                theme.annotations.link.strokeWidth + theme.annotations.link.outlineWidth * 2\n            ctx.beginPath()\n            drawPoints(ctx, annotation.computed.points)\n            ctx.stroke()\n            ctx.lineCap = 'butt'\n        }\n\n        if (isCircleAnnotation(annotation) && theme.annotations.outline.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.outline.outlineColor\n            ctx.lineWidth =\n                theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isDotAnnotation(annotation) && theme.annotations.symbol.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.symbol.outlineColor\n            ctx.lineWidth = theme.annotations.symbol.outlineWidth * 2\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isRectAnnotation(annotation) && theme.annotations.outline.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.outline.outlineColor\n            ctx.lineWidth =\n                theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2\n            ctx.beginPath()\n            ctx.rect(\n                annotation.x - annotation.width / 2,\n                annotation.y - annotation.height / 2,\n                annotation.width,\n                annotation.height\n            )\n            ctx.stroke()\n        }\n\n        ctx.strokeStyle = theme.annotations.link.stroke\n        ctx.lineWidth = theme.annotations.link.strokeWidth\n        ctx.beginPath()\n        drawPoints(ctx, annotation.computed.points)\n        ctx.stroke()\n\n        if (isCircleAnnotation(annotation)) {\n            ctx.strokeStyle = theme.annotations.outline.stroke\n            ctx.lineWidth = theme.annotations.outline.strokeWidth\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isDotAnnotation(annotation)) {\n            ctx.fillStyle = theme.annotations.symbol.fill\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.fill()\n        }\n\n        if (isRectAnnotation(annotation)) {\n            ctx.strokeStyle = theme.annotations.outline.stroke\n            ctx.lineWidth = theme.annotations.outline.strokeWidth\n            ctx.beginPath()\n            ctx.rect(\n                annotation.x - annotation.width / 2,\n                annotation.y - annotation.height / 2,\n                annotation.width,\n                annotation.height\n            )\n            ctx.stroke()\n        }\n\n        if (typeof annotation.note === 'function') {\n            annotation.note(ctx, {\n                datum: annotation.datum,\n                x: annotation.computed.text[0],\n                y: annotation.computed.text[1],\n                theme,\n            })\n        } else {\n            ctx.font = `${theme.annotations.text.fontSize}px ${theme.annotations.text.fontFamily}`\n            ctx.textAlign = 'left'\n            ctx.textBaseline = 'alphabetic'\n\n            ctx.fillStyle = theme.annotations.text.fill\n            ctx.strokeStyle = theme.annotations.text.outlineColor\n            ctx.lineWidth = theme.annotations.text.outlineWidth * 2\n\n            if (theme.annotations.text.outlineWidth > 0) {\n                ctx.lineJoin = 'round'\n                ctx.strokeText(\n                    annotation.note,\n                    annotation.computed.text[0],\n                    annotation.computed.text[1]\n                )\n                ctx.lineJoin = 'miter'\n            }\n            ctx.fillText(annotation.note, annotation.computed.text[0], annotation.computed.text[1])\n        }\n    })\n    ctx.restore()\n}\n","export var slice = Array.prototype.slice;\n","import {slice} from \"./array.js\";\nimport constant from \"./constant.js\";\nimport offsetNone from \"./offset/none.js\";\nimport orderNone from \"./order/none.js\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import { Annotation, useAnnotations } from '@nivo/annotations'\nimport { BarAnnotationsProps } from './types'\n\nexport const BarAnnotations = <RawDatum,>({ bars, annotations }: BarAnnotationsProps<RawDatum>) => {\n    const boundAnnotations = useAnnotations({\n        data: bars,\n        annotations,\n        getPosition: bar => ({\n            x: bar.x + bar.width / 2,\n            y: bar.y + bar.height / 2,\n        }),\n        getDimensions: ({ height, width }) => ({\n            width,\n            height,\n            size: Math.max(width, height),\n        }),\n    })\n\n    return (\n        <>\n            {boundAnnotations.map((annotation, i) => (\n                <Annotation key={i} {...annotation} />\n            ))}\n        </>\n    )\n}\n","import { BoxLegendSvg } from '@nivo/legends'\nimport { BarLegendProps, LegendData } from './types'\n\ninterface BarLegendsProps {\n    width: number\n    height: number\n    legends: [BarLegendProps, LegendData[]][]\n    toggleSerie: (id: string | number) => void\n}\n\nexport const BarLegends = ({ width, height, legends, toggleSerie }: BarLegendsProps) => (\n    <>\n        {legends.map(([legend, data], i) => (\n            <BoxLegendSvg\n                key={i}\n                {...legend}\n                containerWidth={width}\n                containerHeight={height}\n                data={legend.data ?? data}\n                toggleSerie={\n                    legend.toggleSerie && legend.dataFrom === 'keys' ? toggleSerie : undefined\n                }\n            />\n        ))}\n    </>\n)\n","import { createElement, MouseEvent, useCallback, useMemo } from 'react'\nimport { animated, to } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { BarDatum, BarItemProps } from './types'\n\nexport const BarItem = <RawDatum extends BarDatum>({\n    bar: { data, ...bar },\n\n    style: {\n        borderColor,\n        color,\n        height,\n        labelColor,\n        labelOpacity,\n        labelX,\n        labelY,\n        transform,\n        width,\n    },\n\n    borderRadius,\n    borderWidth,\n\n    label,\n    shouldRenderLabel,\n\n    isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    tooltip,\n\n    isFocusable,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: BarItemProps<RawDatum>) => {\n    const theme = useTheme()\n    const { showTooltipFromEvent, showTooltipAt, hideTooltip } = useTooltip()\n\n    const renderTooltip = useMemo(\n        () => () => createElement(tooltip, { ...bar, ...data }),\n        [tooltip, bar, data]\n    )\n\n    const handleClick = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onClick?.({ color: bar.color, ...data }, event)\n        },\n        [bar, data, onClick]\n    )\n    const handleTooltip = useCallback(\n        (event: MouseEvent<SVGRectElement>) => showTooltipFromEvent(renderTooltip(), event),\n        [showTooltipFromEvent, renderTooltip]\n    )\n    const handleMouseEnter = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onMouseEnter?.(data, event)\n            showTooltipFromEvent(renderTooltip(), event)\n        },\n        [data, onMouseEnter, showTooltipFromEvent, renderTooltip]\n    )\n    const handleMouseLeave = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onMouseLeave?.(data, event)\n            hideTooltip()\n        },\n        [data, hideTooltip, onMouseLeave]\n    )\n\n    // extra handlers to allow keyboard navigation\n    const handleFocus = useCallback(() => {\n        showTooltipAt(renderTooltip(), [bar.absX + bar.width / 2, bar.absY])\n    }, [showTooltipAt, renderTooltip, bar])\n    const handleBlur = useCallback(() => {\n        hideTooltip()\n    }, [hideTooltip])\n\n    return (\n        <animated.g transform={transform}>\n            <animated.rect\n                width={to(width, value => Math.max(value, 0))}\n                height={to(height, value => Math.max(value, 0))}\n                rx={borderRadius}\n                ry={borderRadius}\n                fill={data.fill ?? color}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                focusable={isFocusable}\n                tabIndex={isFocusable ? 0 : undefined}\n                aria-label={ariaLabel ? ariaLabel(data) : undefined}\n                aria-labelledby={ariaLabelledBy ? ariaLabelledBy(data) : undefined}\n                aria-describedby={ariaDescribedBy ? ariaDescribedBy(data) : undefined}\n                onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n                onMouseMove={isInteractive ? handleTooltip : undefined}\n                onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n                onClick={isInteractive ? handleClick : undefined}\n                onFocus={isInteractive && isFocusable ? handleFocus : undefined}\n                onBlur={isInteractive && isFocusable ? handleBlur : undefined}\n            />\n            {shouldRenderLabel && (\n                <animated.text\n                    x={labelX}\n                    y={labelY}\n                    textAnchor=\"middle\"\n                    dominantBaseline=\"central\"\n                    fillOpacity={labelOpacity}\n                    style={{\n                        ...theme.labels.text,\n                        pointerEvents: 'none',\n                        fill: labelColor,\n                    }}\n                >\n                    {label}\n                </animated.text>\n            )}\n        </animated.g>\n    )\n}\n","import { BarItem } from './BarItem'\nimport { BarTooltip } from './BarTooltip'\nimport { ComputedDatum } from './types'\nimport { InheritedColorConfig, OrdinalColorScaleConfig } from '@nivo/colors'\nimport { ScaleBandSpec, ScaleSpec } from '@nivo/scales'\n\nexport const defaultProps = {\n    indexBy: 'id',\n    keys: ['value'],\n\n    groupMode: 'stacked' as const,\n    layout: 'vertical' as const,\n    reverse: false,\n\n    minValue: 'auto' as const,\n    maxValue: 'auto' as const,\n\n    valueScale: { type: 'linear' } as ScaleSpec,\n    indexScale: { type: 'band', round: true } as ScaleBandSpec,\n\n    padding: 0.1,\n    innerPadding: 0,\n\n    axisBottom: {},\n    axisLeft: {},\n    enableGridX: false,\n    enableGridY: true,\n\n    enableLabel: true,\n    label: 'formattedValue',\n    labelSkipWidth: 0,\n    labelSkipHeight: 0,\n    labelTextColor: { from: 'theme', theme: 'labels.text.fill' },\n\n    colorBy: 'id' as const,\n    colors: { scheme: 'nivo' } as OrdinalColorScaleConfig,\n\n    borderRadius: 0,\n    borderWidth: 0,\n    borderColor: { from: 'color' } as InheritedColorConfig<any>,\n\n    isInteractive: true,\n    tooltip: BarTooltip,\n    tooltipLabel: <RawDatum>(datum: ComputedDatum<RawDatum>) => `${datum.id} - ${datum.indexValue}`,\n\n    legends: [],\n    initialHiddenIds: [],\n    annotations: [],\n    markers: [],\n}\n\nexport const svgDefaultProps = {\n    ...defaultProps,\n    layers: ['grid', 'axes', 'bars', 'markers', 'legends', 'annotations'],\n    barComponent: BarItem,\n\n    defs: [],\n    fill: [],\n\n    animate: true,\n    motionConfig: 'default',\n\n    role: 'img',\n    isFocusable: false,\n}\n\nexport const canvasDefaultProps = {\n    ...defaultProps,\n    layers: ['grid', 'axes', 'bars', 'legends', 'annotations'],\n\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio ?? 1 : 1,\n}\n","import { BarTooltipProps } from './types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nexport const BarTooltip = <RawDatum,>({ color, label, ...data }: BarTooltipProps<RawDatum>) => {\n    return <BasicTooltip id={label} value={data.formattedValue} enableChip={true} color={color} />\n}\n","import { ScaleBandSpec, ScaleBand, computeScale } from '@nivo/scales'\n\n/**\n * Generates indexed scale.\n */\nexport const getIndexScale = <RawDatum>(\n    data: RawDatum[],\n    getIndex: (datum: RawDatum) => string,\n    padding: number,\n    indexScale: ScaleBandSpec,\n    size: number,\n    axis: 'x' | 'y'\n) => {\n    return (\n        computeScale(\n            indexScale,\n            { all: data.map(getIndex), min: 0, max: 0 },\n            size,\n            axis\n        ) as ScaleBand<string>\n    ).padding(padding)\n}\n\n/**\n * This method ensures all the provided keys exist in the entire series.\n */\nexport const normalizeData = <RawDatum>(data: RawDatum[], keys: string[]) =>\n    data.map(\n        item =>\n            ({\n                ...keys.reduce<Record<string, unknown>>((acc, key) => {\n                    acc[key] = null\n                    return acc\n                }, {}),\n                ...item,\n            } as RawDatum)\n    )\n\nexport const filterNullValues = <RawDatum extends Record<string, unknown>>(data: RawDatum) =>\n    Object.keys(data).reduce<Record<string, unknown>>((acc, key) => {\n        if (data[key]) {\n            acc[key] = data[key]\n        }\n        return acc\n    }, {}) as Exclude<RawDatum, null | undefined | false | '' | 0>\n\nexport const coerceValue = <T>(value: T) => [value, Number(value)] as const\n","import { Margin } from '@nivo/core'\nimport { OrdinalColorScale } from '@nivo/colors'\nimport { Scale, ScaleBand, computeScale } from '@nivo/scales'\nimport { BarDatum, BarSvgProps, ComputedBarDatum, ComputedDatum } from '../types'\nimport { coerceValue, filterNullValues, getIndexScale, normalizeData } from './common'\n\ntype Params<RawDatum, XScaleInput, YScaleInput> = {\n    data: RawDatum[]\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    innerPadding: number\n    keys: string[]\n    xScale: XScaleInput extends string ? ScaleBand<XScaleInput> : Scale<XScaleInput, number>\n    yScale: YScaleInput extends string ? ScaleBand<YScaleInput> : Scale<YScaleInput, number>\n    margin: Margin\n}\n\nconst gt = (value: number, other: number) => value > other\nconst lt = (value: number, other: number) => value < other\n\nconst range = (start: number, end: number) =>\n    Array.from(' '.repeat(end - start), (_, index) => start + index)\n\nconst clampToZero = (value: number) => (gt(value, 0) ? 0 : value)\nconst zeroIfNotFinite = (value: number) => (isFinite(value) ? value : 0)\n\n/**\n * Generates x/y scales & bars for vertical grouped bar chart.\n */\nconst generateVerticalGroupedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        data,\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding = 0,\n        keys,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, string, number>,\n    barWidth: number,\n    reverse: boolean,\n    yRef: number\n): ComputedBarDatum<RawDatum>[] => {\n    const compare = reverse ? lt : gt\n    const getY = (d: number) => (compare(d, 0) ? yScale(d) ?? 0 : yRef)\n    const getHeight = (d: number, y: number) => (compare(d, 0) ? yRef - y : (yScale(d) ?? 0) - yRef)\n    const cleanedData = data.map(filterNullValues)\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    keys.forEach((key, i) =>\n        range(0, xScale.domain().length).forEach(index => {\n            const [rawValue, value] = coerceValue(data[index][key])\n            const indexValue = getIndex(data[index])\n            const x = (xScale(indexValue) ?? 0) + barWidth * i + innerPadding * i\n            const y = getY(value)\n            const barHeight = getHeight(value, y)\n            const barData: ComputedDatum<RawDatum> = {\n                id: key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index,\n                indexValue,\n                data: cleanedData[index],\n            }\n\n            bars.push({\n                key: `${key}.${barData.indexValue}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for horizontal grouped bar chart.\n */\nconst generateHorizontalGroupedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        data,\n        formatValue,\n        getIndex,\n        getColor,\n        getTooltipLabel,\n        keys,\n        innerPadding = 0,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, number, string>,\n    barHeight: number,\n    reverse: boolean,\n    xRef: number\n): ComputedBarDatum<RawDatum>[] => {\n    const compare = reverse ? lt : gt\n    const getX = (d: number) => (compare(d, 0) ? xRef : xScale(d) ?? 0)\n    const getWidth = (d: number, x: number) => (compare(d, 0) ? (xScale(d) ?? 0) - xRef : xRef - x)\n    const cleanedData = data.map(filterNullValues)\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    keys.forEach((key, i) =>\n        range(0, yScale.domain().length).forEach(index => {\n            const [rawValue, value] = coerceValue(data[index][key])\n            const indexValue = getIndex(data[index])\n            const x = getX(value)\n            const y = (yScale(indexValue) ?? 0) + barHeight * i + innerPadding * i\n            const barWidth = getWidth(value, x)\n            const barData: ComputedDatum<RawDatum> = {\n                id: key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index,\n                indexValue,\n                data: cleanedData[index],\n            }\n\n            bars.push({\n                key: `${key}.${barData.indexValue}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for grouped bar chart.\n */\nexport const generateGroupedBars = <RawDatum extends BarDatum>({\n    layout,\n    minValue,\n    maxValue,\n    reverse,\n    width,\n    height,\n    padding = 0,\n    innerPadding = 0,\n    valueScale,\n    indexScale: indexScaleConfig,\n    hiddenIds = [],\n    ...props\n}: Pick<\n    Required<BarSvgProps<RawDatum>>,\n    | 'data'\n    | 'height'\n    | 'indexScale'\n    | 'innerPadding'\n    | 'keys'\n    | 'layout'\n    | 'maxValue'\n    | 'minValue'\n    | 'padding'\n    | 'reverse'\n    | 'valueScale'\n    | 'width'\n> & {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    margin: Margin\n    hiddenIds?: (string | number)[]\n}) => {\n    const keys = props.keys.filter(key => !hiddenIds.includes(key))\n    const data = normalizeData(props.data, keys)\n    const [axis, otherAxis, size] =\n        layout === 'vertical' ? (['y', 'x', width] as const) : (['x', 'y', height] as const)\n    const indexScale = getIndexScale(\n        data,\n        props.getIndex,\n        padding,\n        indexScaleConfig,\n        size,\n        otherAxis\n    )\n\n    const scaleSpec = {\n        max: maxValue,\n        min: minValue,\n        reverse,\n        ...valueScale,\n    }\n\n    const clampMin = scaleSpec.min === 'auto' ? clampToZero : (value: number) => value\n\n    const values = data\n        .reduce<number[]>((acc, entry) => [...acc, ...keys.map(k => entry[k] as number)], [])\n        .filter(Boolean)\n    const min = clampMin(Math.min(...values))\n    const max = zeroIfNotFinite(Math.max(...values))\n\n    const scale = computeScale(\n        scaleSpec as any,\n        { all: values, min, max },\n        axis === 'x' ? width : height,\n        axis\n    )\n\n    const [xScale, yScale] = layout === 'vertical' ? [indexScale, scale] : [scale, indexScale]\n\n    const bandwidth = (indexScale.bandwidth() - innerPadding * (keys.length - 1)) / keys.length\n    const params = [\n        { ...props, data, keys, innerPadding, xScale, yScale } as Params<RawDatum, any, any>,\n        bandwidth,\n        scaleSpec.reverse,\n        scale(0) ?? 0,\n    ] as const\n\n    const bars: ComputedBarDatum<RawDatum>[] =\n        bandwidth > 0\n            ? layout === 'vertical'\n                ? generateVerticalGroupedBars(...params)\n                : generateHorizontalGroupedBars(...params)\n            : []\n\n    return { xScale, yScale, bars }\n}\n","import { Margin } from '@nivo/core'\nimport { OrdinalColorScale } from '@nivo/colors'\nimport { Scale, ScaleBand, computeScale } from '@nivo/scales'\nimport { Series, SeriesPoint, stack, stackOffsetDiverging } from 'd3-shape'\nimport { BarDatum, BarSvgProps, ComputedBarDatum, ComputedDatum } from '../types'\nimport { coerceValue, filterNullValues, getIndexScale, normalizeData } from './common'\n\ntype StackDatum<RawDatum> = SeriesPoint<RawDatum>\n\ntype Params<RawDatum, XScaleInput, YScaleInput> = {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    innerPadding: number\n    stackedData: Series<RawDatum, string>[]\n    xScale: XScaleInput extends string ? ScaleBand<XScaleInput> : Scale<XScaleInput, number>\n    yScale: YScaleInput extends string ? ScaleBand<YScaleInput> : Scale<YScaleInput, number>\n    margin: Margin\n}\n\nconst flattenDeep = <T>(arr: T[]): T =>\n    arr.some(Array.isArray) ? flattenDeep(([] as T[]).concat(...arr)) : (arr as unknown as T)\n\nconst filterZerosIfLog = (array: number[], type: string) =>\n    type === 'log' ? array.filter(num => num !== 0) : array\n\n/**\n * Generates x/y scales & bars for vertical stacked bar chart.\n */\nconst generateVerticalStackedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding,\n        stackedData,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, string, number>,\n    barWidth: number,\n    reverse: boolean\n): ComputedBarDatum<RawDatum>[] => {\n    const getY = (d: StackDatum<RawDatum>) => yScale(d[reverse ? 0 : 1])\n    const getHeight = (d: StackDatum<RawDatum>, y: number) => (yScale(d[reverse ? 1 : 0]) ?? 0) - y\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    stackedData.forEach(stackedDataItem =>\n        xScale.domain().forEach((index, i) => {\n            const d = stackedDataItem[i]\n            const x = xScale(getIndex(d.data)) ?? 0\n            const y = (getY(d) ?? 0) + innerPadding * 0.5\n            const barHeight = getHeight(d, y) - innerPadding\n            const [rawValue, value] = coerceValue(d.data[stackedDataItem.key])\n\n            const barData: ComputedDatum<RawDatum> = {\n                id: stackedDataItem.key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index: i,\n                indexValue: index,\n                data: filterNullValues(d.data),\n            }\n\n            bars.push({\n                key: `${stackedDataItem.key}.${index}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for horizontal stacked bar chart.\n */\nconst generateHorizontalStackedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding,\n        stackedData,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, number, string>,\n    barHeight: number,\n    reverse: boolean\n): ComputedBarDatum<RawDatum>[] => {\n    const getX = (d: StackDatum<RawDatum>) => xScale(d[reverse ? 1 : 0])\n    const getWidth = (d: StackDatum<RawDatum>, x: number) => (xScale(d[reverse ? 0 : 1]) ?? 0) - x\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    stackedData.forEach(stackedDataItem =>\n        yScale.domain().forEach((index, i) => {\n            const d = stackedDataItem[i]\n            const y = yScale(getIndex(d.data)) ?? 0\n            const x = (getX(d) ?? 0) + innerPadding * 0.5\n            const barWidth = getWidth(d, x) - innerPadding\n            const [rawValue, value] = coerceValue(d.data[stackedDataItem.key])\n\n            const barData: ComputedDatum<RawDatum> = {\n                id: stackedDataItem.key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index: i,\n                indexValue: index,\n                data: filterNullValues(d.data),\n            }\n\n            bars.push({\n                key: `${stackedDataItem.key}.${index}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for stacked bar chart.\n */\nexport const generateStackedBars = <RawDatum extends BarDatum>({\n    data,\n    layout,\n    minValue,\n    maxValue,\n    reverse,\n    width,\n    height,\n    padding = 0,\n    valueScale,\n    indexScale: indexScaleConfig,\n    hiddenIds = [],\n    ...props\n}: Pick<\n    Required<BarSvgProps<RawDatum>>,\n    | 'data'\n    | 'height'\n    | 'indexScale'\n    | 'innerPadding'\n    | 'keys'\n    | 'layout'\n    | 'maxValue'\n    | 'minValue'\n    | 'padding'\n    | 'reverse'\n    | 'valueScale'\n    | 'width'\n> & {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    margin: Margin\n    hiddenIds?: (string | number)[]\n}) => {\n    const keys = props.keys.filter(key => !hiddenIds.includes(key))\n    const stackedData = stack<RawDatum, string>().keys(keys).offset(stackOffsetDiverging)(\n        normalizeData(data, keys)\n    )\n\n    const [axis, otherAxis, size] =\n        layout === 'vertical' ? (['y', 'x', width] as const) : (['x', 'y', height] as const)\n    const indexScale = getIndexScale(\n        data,\n        props.getIndex,\n        padding,\n        indexScaleConfig,\n        size,\n        otherAxis\n    )\n\n    const scaleSpec = {\n        max: maxValue,\n        min: minValue,\n        reverse,\n        ...valueScale,\n    }\n\n    const values = filterZerosIfLog(\n        flattenDeep(stackedData as unknown as number[][]),\n        valueScale.type\n    )\n    const min = Math.min(...values)\n    const max = Math.max(...values)\n\n    const scale = computeScale(\n        scaleSpec as any,\n        { all: values, min, max },\n        axis === 'x' ? width : height,\n        axis\n    )\n\n    const [xScale, yScale] = layout === 'vertical' ? [indexScale, scale] : [scale, indexScale]\n\n    const innerPadding = props.innerPadding > 0 ? props.innerPadding : 0\n    const bandwidth = indexScale.bandwidth()\n    const params = [\n        { ...props, innerPadding, stackedData, xScale, yScale } as Params<RawDatum, any, any>,\n        bandwidth,\n        scaleSpec.reverse,\n    ] as const\n\n    const bars: ComputedBarDatum<RawDatum>[] =\n        bandwidth > 0\n            ? layout === 'vertical'\n                ? generateVerticalStackedBars(...params)\n                : generateHorizontalStackedBars(...params)\n            : []\n\n    return { xScale, yScale, bars }\n}\n","import {\n    BarDatum,\n    BarLegendProps,\n    BarSvgProps,\n    BarsWithHidden,\n    LegendData,\n    LegendLabelDatum,\n} from '../types'\nimport { getPropertyAccessor } from '@nivo/core'\nimport { uniqBy } from 'lodash'\n\nexport const getLegendDataForKeys = <RawDatum extends BarDatum>(\n    bars: BarsWithHidden<RawDatum>,\n    layout: NonNullable<BarSvgProps<RawDatum>['layout']>,\n    direction: BarLegendProps['direction'],\n    groupMode: NonNullable<BarSvgProps<RawDatum>['groupMode']>,\n    reverse: boolean,\n    getLegendLabel: (datum: LegendLabelDatum<RawDatum>) => string\n): LegendData[] => {\n    const data = uniqBy(\n        bars.map(bar => ({\n            id: bar.data.id,\n            label: getLegendLabel(bar.data),\n            hidden: bar.data.hidden,\n            color: bar.color ?? '#000',\n        })),\n        ({ id }) => id\n    )\n\n    if (\n        (layout === 'vertical' &&\n            groupMode === 'stacked' &&\n            direction === 'column' &&\n            reverse !== true) ||\n        (layout === 'horizontal' && groupMode === 'stacked' && reverse === true)\n    ) {\n        data.reverse()\n    }\n\n    return data\n}\n\nexport const getLegendDataForIndexes = <RawDatum extends BarDatum>(\n    bars: BarsWithHidden<RawDatum>,\n    layout: NonNullable<BarSvgProps<RawDatum>['layout']>,\n    getLegendLabel: (datum: LegendLabelDatum<RawDatum>) => string\n): LegendData[] => {\n    const data = uniqBy(\n        bars.map(bar => ({\n            id: bar.data.indexValue ?? '',\n            label: getLegendLabel(bar.data),\n            hidden: bar.data.hidden,\n            color: bar.color ?? '#000',\n        })),\n        ({ id }) => id\n    )\n\n    if (layout === 'horizontal') {\n        data.reverse()\n    }\n\n    return data\n}\n\nexport const getLegendData = <RawDatum extends BarDatum>({\n    bars,\n    direction,\n    from,\n    groupMode,\n    layout,\n    legendLabel,\n    reverse,\n}: Pick<Required<BarSvgProps<RawDatum>>, 'layout' | 'groupMode' | 'reverse'> & {\n    bars: BarsWithHidden<RawDatum>\n    direction: BarLegendProps['direction']\n    from: BarLegendProps['dataFrom']\n    legendLabel: BarSvgProps<RawDatum>['legendLabel']\n}) => {\n    const getLegendLabel = getPropertyAccessor(\n        legendLabel ?? (from === 'indexes' ? 'indexValue' : 'id')\n    )\n\n    if (from === 'indexes') {\n        return getLegendDataForIndexes(bars, layout, getLegendLabel)\n    }\n\n    return getLegendDataForKeys(bars, layout, direction, groupMode, reverse, getLegendLabel)\n}\n","import { useCallback, useMemo, useState } from 'react'\nimport { useInheritedColor, useOrdinalColorScale } from '@nivo/colors'\nimport { usePropertyAccessor, useTheme, useValueFormatter, Margin } from '@nivo/core'\nimport {\n    DataProps,\n    BarCommonProps,\n    BarDatum,\n    ComputedBarDatumWithValue,\n    LegendData,\n    BarLegendProps,\n} from './types'\nimport { defaultProps } from './props'\nimport { generateGroupedBars, generateStackedBars, getLegendData } from './compute'\n\nexport const useBar = <RawDatum extends BarDatum>({\n    indexBy = defaultProps.indexBy,\n    keys = defaultProps.keys,\n    label = defaultProps.label,\n    tooltipLabel = defaultProps.tooltipLabel,\n    valueFormat,\n    colors = defaultProps.colors,\n    colorBy = defaultProps.colorBy,\n    borderColor = defaultProps.borderColor,\n    labelTextColor = defaultProps.labelTextColor,\n    groupMode = defaultProps.groupMode,\n    layout = defaultProps.layout,\n    reverse = defaultProps.reverse,\n    data,\n    minValue = defaultProps.minValue,\n    maxValue = defaultProps.maxValue,\n    margin,\n    width,\n    height,\n    padding = defaultProps.padding,\n    innerPadding = defaultProps.innerPadding,\n    valueScale = defaultProps.valueScale,\n    indexScale = defaultProps.indexScale,\n    initialHiddenIds = defaultProps.initialHiddenIds,\n    enableLabel = defaultProps.enableLabel,\n    labelSkipWidth = defaultProps.labelSkipWidth,\n    labelSkipHeight = defaultProps.labelSkipHeight,\n    legends = defaultProps.legends,\n    legendLabel,\n}: {\n    indexBy?: BarCommonProps<RawDatum>['indexBy']\n    label?: BarCommonProps<RawDatum>['label']\n    tooltipLabel?: BarCommonProps<RawDatum>['tooltipLabel']\n    valueFormat?: BarCommonProps<RawDatum>['valueFormat']\n    colors?: BarCommonProps<RawDatum>['colors']\n    colorBy?: BarCommonProps<RawDatum>['colorBy']\n    borderColor?: BarCommonProps<RawDatum>['borderColor']\n    labelTextColor?: BarCommonProps<RawDatum>['labelTextColor']\n    groupMode?: BarCommonProps<RawDatum>['groupMode']\n    layout?: BarCommonProps<RawDatum>['layout']\n    reverse?: BarCommonProps<RawDatum>['reverse']\n    data: DataProps<RawDatum>['data']\n    keys?: BarCommonProps<RawDatum>['keys']\n    minValue?: BarCommonProps<RawDatum>['minValue']\n    maxValue?: BarCommonProps<RawDatum>['maxValue']\n    margin: Margin\n    width: number\n    height: number\n    padding?: BarCommonProps<RawDatum>['padding']\n    innerPadding?: BarCommonProps<RawDatum>['innerPadding']\n    valueScale?: BarCommonProps<RawDatum>['valueScale']\n    indexScale?: BarCommonProps<RawDatum>['indexScale']\n    initialHiddenIds?: BarCommonProps<RawDatum>['initialHiddenIds']\n    enableLabel?: BarCommonProps<RawDatum>['enableLabel']\n    labelSkipWidth?: BarCommonProps<RawDatum>['labelSkipWidth']\n    labelSkipHeight?: BarCommonProps<RawDatum>['labelSkipHeight']\n    legends?: BarCommonProps<RawDatum>['legends']\n    legendLabel?: BarCommonProps<RawDatum>['legendLabel']\n}) => {\n    const [hiddenIds, setHiddenIds] = useState(initialHiddenIds ?? [])\n    const toggleSerie = useCallback((id: string | number) => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const getIndex = usePropertyAccessor(indexBy)\n    const getLabel = usePropertyAccessor(label)\n    const getTooltipLabel = usePropertyAccessor(tooltipLabel)\n    const formatValue = useValueFormatter(valueFormat)\n\n    const theme = useTheme()\n    const getColor = useOrdinalColorScale(colors, colorBy)\n    const getBorderColor = useInheritedColor<ComputedBarDatumWithValue<RawDatum>>(\n        borderColor,\n        theme\n    )\n    const getLabelColor = useInheritedColor<ComputedBarDatumWithValue<RawDatum>>(\n        labelTextColor,\n        theme\n    )\n\n    const generateBars = groupMode === 'grouped' ? generateGroupedBars : generateStackedBars\n    const { bars, xScale, yScale } = generateBars({\n        layout,\n        reverse,\n        data,\n        getIndex,\n        keys,\n        minValue,\n        maxValue,\n        width,\n        height,\n        getColor,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        hiddenIds,\n        formatValue,\n        getTooltipLabel,\n        margin,\n    })\n\n    const barsWithValue = useMemo(\n        () =>\n            bars\n                .filter(\n                    (bar): bar is ComputedBarDatumWithValue<RawDatum> => bar.data.value !== null\n                )\n                .map((bar, index) => ({\n                    ...bar,\n                    index,\n                })),\n        [bars]\n    )\n\n    const shouldRenderBarLabel = useCallback(\n        ({ width, height }: { height: number; width: number }) => {\n            if (!enableLabel) return false\n            if (labelSkipWidth > 0 && width < labelSkipWidth) return false\n            if (labelSkipHeight > 0 && height < labelSkipHeight) return false\n            return true\n        },\n        [enableLabel, labelSkipWidth, labelSkipHeight]\n    )\n\n    const legendData = useMemo(\n        () =>\n            keys.map(key => {\n                const bar = bars.find(bar => bar.data.id === key)\n\n                return { ...bar, data: { id: key, ...bar?.data, hidden: hiddenIds.includes(key) } }\n            }),\n        [hiddenIds, keys, bars]\n    )\n\n    const legendsWithData: [BarLegendProps, LegendData[]][] = useMemo(\n        () =>\n            legends.map(legend => {\n                const data = getLegendData({\n                    bars: legend.dataFrom === 'keys' ? legendData : bars,\n                    direction: legend.direction,\n                    from: legend.dataFrom,\n                    groupMode,\n                    layout,\n                    legendLabel,\n                    reverse,\n                })\n\n                return [legend, data]\n            }),\n        [legends, legendData, bars, groupMode, layout, legendLabel, reverse]\n    )\n\n    return {\n        bars,\n        barsWithValue,\n        xScale,\n        yScale,\n        getIndex,\n        getLabel,\n        getTooltipLabel,\n        formatValue,\n        getColor,\n        getBorderColor,\n        getLabelColor,\n        shouldRenderBarLabel,\n        hiddenIds,\n        toggleSerie,\n        legendsWithData,\n    }\n}\n","import { Axes, Grid } from '@nivo/axes'\nimport { BarAnnotations } from './BarAnnotations'\nimport {\n    BarCustomLayerProps,\n    BarDatum,\n    BarLayer,\n    BarLayerId,\n    BarSvgProps,\n    ComputedBarDatumWithValue,\n} from './types'\nimport { BarLegends } from './BarLegends'\nimport {\n    CartesianMarkers,\n    Container,\n    SvgWrapper,\n    // @ts-ignore\n    bindDefs,\n    useDimensions,\n    useMotionConfig,\n} from '@nivo/core'\nimport { Fragment, ReactNode, createElement, useMemo } from 'react'\nimport { svgDefaultProps } from './props'\nimport { useTransition } from '@react-spring/web'\nimport { useBar } from './hooks'\n\ntype InnerBarProps<RawDatum extends BarDatum> = Omit<\n    BarSvgProps<RawDatum>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerBar = <RawDatum extends BarDatum>({\n    data,\n    indexBy,\n    keys,\n\n    margin: partialMargin,\n    width,\n    height,\n\n    groupMode,\n    layout,\n    reverse,\n    minValue,\n    maxValue,\n\n    valueScale,\n    indexScale,\n\n    padding,\n    innerPadding,\n\n    axisTop,\n    axisRight,\n    axisBottom = svgDefaultProps.axisBottom,\n    axisLeft = svgDefaultProps.axisLeft,\n    enableGridX = svgDefaultProps.enableGridX,\n    enableGridY = svgDefaultProps.enableGridY,\n    gridXValues,\n    gridYValues,\n\n    layers = svgDefaultProps.layers as BarLayer<RawDatum>[],\n    barComponent = svgDefaultProps.barComponent,\n\n    enableLabel = svgDefaultProps.enableLabel,\n    label,\n    labelSkipWidth = svgDefaultProps.labelSkipWidth,\n    labelSkipHeight = svgDefaultProps.labelSkipHeight,\n    labelTextColor,\n\n    markers = svgDefaultProps.markers,\n\n    colorBy,\n    colors,\n    defs = svgDefaultProps.defs,\n    fill = svgDefaultProps.fill,\n    borderRadius = svgDefaultProps.borderRadius,\n    borderWidth = svgDefaultProps.borderWidth,\n    borderColor,\n\n    annotations = svgDefaultProps.annotations,\n\n    legendLabel,\n    tooltipLabel,\n\n    valueFormat,\n\n    isInteractive = svgDefaultProps.isInteractive,\n    tooltip = svgDefaultProps.tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    legends,\n\n    role = svgDefaultProps.role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n    isFocusable = svgDefaultProps.isFocusable,\n    barAriaLabel,\n    barAriaLabelledBy,\n    barAriaDescribedBy,\n\n    initialHiddenIds,\n}: InnerBarProps<RawDatum>) => {\n    const { animate, config: springConfig } = useMotionConfig()\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        bars,\n        barsWithValue,\n        xScale,\n        yScale,\n        getLabel,\n        getTooltipLabel,\n        getBorderColor,\n        getLabelColor,\n        shouldRenderBarLabel,\n        toggleSerie,\n        legendsWithData,\n    } = useBar<RawDatum>({\n        indexBy,\n        label,\n        tooltipLabel,\n        valueFormat,\n        colors,\n        colorBy,\n        borderColor,\n        labelTextColor,\n        groupMode,\n        layout,\n        reverse,\n        data,\n        keys,\n        minValue,\n        maxValue,\n        margin,\n        width: innerWidth,\n        height: innerHeight,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        enableLabel,\n        labelSkipWidth,\n        labelSkipHeight,\n        legends,\n        legendLabel,\n        initialHiddenIds,\n    })\n\n    const transition = useTransition<\n        ComputedBarDatumWithValue<RawDatum>,\n        {\n            borderColor: string\n            color: string\n            height: number\n            labelColor: string\n            labelOpacity: number\n            labelX: number\n            labelY: number\n            opacity: number\n            transform: string\n            width: number\n        }\n    >(barsWithValue, {\n        keys: bar => bar.key,\n        from: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: 0,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 0,\n            labelX: bar.width / 2,\n            labelY: bar.height / 2,\n            transform: `translate(${bar.x}, ${bar.y + bar.height})`,\n            width: bar.width,\n            ...(layout === 'vertical'\n                ? {}\n                : {\n                      height: bar.height,\n                      transform: `translate(${bar.x}, ${bar.y})`,\n                      width: 0,\n                  }),\n        }),\n        enter: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: bar.height,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 1,\n            labelX: bar.width / 2,\n            labelY: bar.height / 2,\n            transform: `translate(${bar.x}, ${bar.y})`,\n            width: bar.width,\n        }),\n        update: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: bar.height,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 1,\n            labelX: bar.width / 2,\n            labelY: bar.height / 2,\n            transform: `translate(${bar.x}, ${bar.y})`,\n            width: bar.width,\n        }),\n        leave: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: 0,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 0,\n            labelX: bar.width / 2,\n            labelY: 0,\n            transform: `translate(${bar.x}, ${bar.y + bar.height})`,\n            width: bar.width,\n            ...(layout === 'vertical'\n                ? {}\n                : {\n                      labelX: 0,\n                      labelY: bar.height / 2,\n                      height: bar.height,\n                      transform: `translate(${bar.x}, ${bar.y})`,\n                      width: 0,\n                  }),\n        }),\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const commonProps = useMemo(\n        () => ({\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            isInteractive,\n            labelSkipWidth,\n            labelSkipHeight,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            getTooltipLabel,\n            tooltip,\n            isFocusable,\n            ariaLabel: barAriaLabel,\n            ariaLabelledBy: barAriaLabelledBy,\n            ariaDescribedBy: barAriaDescribedBy,\n        }),\n        [\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            getTooltipLabel,\n            isInteractive,\n            labelSkipHeight,\n            labelSkipWidth,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            tooltip,\n            isFocusable,\n            barAriaLabel,\n            barAriaLabelledBy,\n            barAriaDescribedBy,\n        ]\n    )\n\n    const boundDefs = bindDefs(defs, bars, fill, {\n        dataKey: 'data',\n        targetKey: 'data.fill',\n    })\n\n    const layerById: Record<BarLayerId, ReactNode> = {\n        annotations: null,\n        axes: null,\n        bars: null,\n        grid: null,\n        legends: null,\n        markers: null,\n    }\n\n    if (layers.includes('annotations')) {\n        layerById.annotations = (\n            <BarAnnotations key=\"annotations\" bars={bars} annotations={annotations} />\n        )\n    }\n\n    if (layers.includes('axes')) {\n        layerById.axes = (\n            <Axes\n                key=\"axes\"\n                xScale={xScale}\n                yScale={yScale}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        )\n    }\n\n    if (layers.includes('bars')) {\n        layerById.bars = (\n            <Fragment key=\"bars\">\n                {transition((style, bar) =>\n                    createElement(barComponent, {\n                        ...commonProps,\n                        bar,\n                        style,\n                        shouldRenderLabel: shouldRenderBarLabel(bar),\n                        label: getLabel(bar.data),\n                    })\n                )}\n            </Fragment>\n        )\n    }\n\n    if (layers.includes('grid')) {\n        layerById.grid = (\n            <Grid\n                key=\"grid\"\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? xScale : null}\n                yScale={enableGridY ? yScale : null}\n                xValues={gridXValues}\n                yValues={gridYValues}\n            />\n        )\n    }\n\n    if (layers.includes('legends')) {\n        layerById.legends = (\n            <BarLegends\n                key=\"legends\"\n                width={innerWidth}\n                height={innerHeight}\n                legends={legendsWithData}\n                toggleSerie={toggleSerie}\n            />\n        )\n    }\n\n    if (layers.includes('markers')) {\n        layerById.markers = (\n            <CartesianMarkers<number | string, number>\n                key=\"markers\"\n                markers={markers as any[]}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={xScale as (v: number | string) => number}\n                yScale={yScale as (v: number) => number}\n            />\n        )\n    }\n\n    const layerContext: BarCustomLayerProps<RawDatum> = useMemo(\n        () => ({\n            ...commonProps,\n            margin,\n            width,\n            height,\n            innerWidth,\n            innerHeight,\n            bars,\n            legendData: legendsWithData,\n            enableLabel,\n            xScale,\n            yScale,\n            tooltip,\n            getTooltipLabel,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n        }),\n        [\n            commonProps,\n            margin,\n            width,\n            height,\n            innerWidth,\n            innerHeight,\n            bars,\n            legendsWithData,\n            enableLabel,\n            xScale,\n            yScale,\n            tooltip,\n            getTooltipLabel,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n        ]\n    )\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n            isFocusable={isFocusable}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Bar = <RawDatum extends BarDatum>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: BarSvgProps<RawDatum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerBar<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import {\n    BarCanvasCustomLayerProps,\n    BarCanvasLayer,\n    BarCanvasProps,\n    BarDatum,\n    ComputedBarDatum,\n} from './types'\nimport {\n    Container,\n    Margin,\n    getRelativeCursor,\n    isCursorInRect,\n    useDimensions,\n    useTheme,\n} from '@nivo/core'\nimport {\n    ForwardedRef,\n    createElement,\n    forwardRef,\n    useCallback,\n    useEffect,\n    useMemo,\n    useRef,\n} from 'react'\nimport { canvasDefaultProps } from './props'\nimport {\n    renderAnnotationsToCanvas,\n    useAnnotations,\n    useComputedAnnotations,\n} from '@nivo/annotations'\nimport { renderAxesToCanvas, renderGridLinesToCanvas } from '@nivo/axes'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { useBar } from './hooks'\n\ntype InnerBarCanvasProps<RawDatum extends BarDatum> = Omit<\n    BarCanvasProps<RawDatum>,\n    'renderWrapper' | 'theme'\n> & {\n    canvasRef: ForwardedRef<HTMLCanvasElement>\n}\n\nconst findBarUnderCursor = <RawDatum,>(\n    nodes: ComputedBarDatum<RawDatum>[],\n    margin: Margin,\n    x: number,\n    y: number\n) =>\n    nodes.find(node =>\n        isCursorInRect(node.x + margin.left, node.y + margin.top, node.width, node.height, x, y)\n    )\n\nconst isNumber = (value: unknown): value is number => typeof value === 'number'\n\nconst InnerBarCanvas = <RawDatum extends BarDatum>({\n    data,\n    indexBy,\n    keys,\n\n    margin: partialMargin,\n    width,\n    height,\n\n    groupMode,\n    layout,\n    reverse,\n    minValue,\n    maxValue,\n\n    valueScale,\n    indexScale,\n\n    padding,\n    innerPadding,\n\n    axisTop,\n    axisRight,\n    axisBottom = canvasDefaultProps.axisBottom,\n    axisLeft = canvasDefaultProps.axisLeft,\n    enableGridX = canvasDefaultProps.enableGridX,\n    enableGridY = canvasDefaultProps.enableGridY,\n    gridXValues,\n    gridYValues,\n\n    layers = canvasDefaultProps.layers as BarCanvasLayer<RawDatum>[],\n    renderBar = (\n        ctx,\n        {\n            bar: { color, height, width, x, y },\n\n            borderColor,\n            borderRadius,\n            borderWidth,\n            label,\n            labelColor,\n            shouldRenderLabel,\n        }\n    ) => {\n        ctx.fillStyle = color\n\n        if (borderWidth > 0) {\n            ctx.strokeStyle = borderColor\n            ctx.lineWidth = borderWidth\n        }\n\n        ctx.beginPath()\n\n        if (borderRadius > 0) {\n            const radius = Math.min(borderRadius, height)\n\n            ctx.moveTo(x + radius, y)\n            ctx.lineTo(x + width - radius, y)\n            ctx.quadraticCurveTo(x + width, y, x + width, y + radius)\n            ctx.lineTo(x + width, y + height - radius)\n            ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height)\n            ctx.lineTo(x + radius, y + height)\n            ctx.quadraticCurveTo(x, y + height, x, y + height - radius)\n            ctx.lineTo(x, y + radius)\n            ctx.quadraticCurveTo(x, y, x + radius, y)\n            ctx.closePath()\n        } else {\n            ctx.rect(x, y, width, height)\n        }\n\n        ctx.fill()\n\n        if (borderWidth > 0) {\n            ctx.stroke()\n        }\n\n        if (shouldRenderLabel) {\n            ctx.textBaseline = 'middle'\n            ctx.textAlign = 'center'\n            ctx.fillStyle = labelColor\n            ctx.fillText(label, x + width / 2, y + height / 2)\n        }\n    },\n\n    enableLabel = canvasDefaultProps.enableLabel,\n    label,\n    labelSkipWidth = canvasDefaultProps.labelSkipWidth,\n    labelSkipHeight = canvasDefaultProps.labelSkipHeight,\n    labelTextColor,\n\n    colorBy,\n    colors,\n    borderRadius = canvasDefaultProps.borderRadius,\n    borderWidth = canvasDefaultProps.borderWidth,\n    borderColor,\n\n    annotations = canvasDefaultProps.annotations,\n\n    legendLabel,\n    tooltipLabel,\n\n    valueFormat,\n\n    isInteractive = canvasDefaultProps.isInteractive,\n    tooltip = canvasDefaultProps.tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    legends,\n\n    pixelRatio = canvasDefaultProps.pixelRatio,\n\n    canvasRef,\n}: InnerBarCanvasProps<RawDatum>) => {\n    const canvasEl = useRef<HTMLCanvasElement | null>(null)\n\n    const theme = useTheme()\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        bars,\n        barsWithValue,\n        xScale,\n        yScale,\n        getLabel,\n        getTooltipLabel,\n        getBorderColor,\n        getLabelColor,\n        shouldRenderBarLabel,\n        legendsWithData,\n    } = useBar<RawDatum>({\n        indexBy,\n        label,\n        tooltipLabel,\n        valueFormat,\n        colors,\n        colorBy,\n        borderColor,\n        labelTextColor,\n        groupMode,\n        layout,\n        reverse,\n        data,\n        keys,\n        minValue,\n        maxValue,\n        margin,\n        width: innerWidth,\n        height: innerHeight,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        enableLabel,\n        labelSkipWidth,\n        labelSkipHeight,\n        legends,\n        legendLabel,\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    // Using any because return type isn't correct\n    const boundAnnotations: any = useComputedAnnotations({\n        annotations: useAnnotations({\n            data: bars,\n            annotations,\n            getPosition: node => ({\n                x: node.x,\n                y: node.y,\n            }),\n            getDimensions: ({ width, height }) => ({\n                width,\n                height,\n                size: Math.max(width, height),\n            }),\n        }),\n    })\n\n    // We use `any` here until we can figure out the best way to type xScale/yScale\n    const layerContext: BarCanvasCustomLayerProps<RawDatum> = useMemo(\n        () => ({\n            borderRadius,\n            borderWidth,\n            isInteractive,\n            isFocusable: false,\n            labelSkipWidth,\n            labelSkipHeight,\n            margin,\n            width,\n            height,\n            innerWidth,\n            innerHeight,\n            bars,\n            legendData: legendsWithData,\n            enableLabel,\n            xScale,\n            yScale,\n            tooltip,\n            getTooltipLabel,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n        }),\n        [\n            borderRadius,\n            borderWidth,\n            isInteractive,\n            labelSkipWidth,\n            labelSkipHeight,\n            margin,\n            width,\n            height,\n            innerWidth,\n            innerHeight,\n            bars,\n            legendsWithData,\n            enableLabel,\n            xScale,\n            yScale,\n            tooltip,\n            getTooltipLabel,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n        ]\n    )\n\n    useEffect(() => {\n        const ctx = canvasEl.current?.getContext('2d')\n\n        if (!canvasEl.current) return\n        if (!ctx) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        layers.forEach(layer => {\n            if (layer === 'grid') {\n                if (isNumber(theme.grid.line.strokeWidth) && theme.grid.line.strokeWidth > 0) {\n                    ctx.lineWidth = theme.grid.line.strokeWidth\n                    ctx.strokeStyle = theme.grid.line.stroke as string\n\n                    if (enableGridX) {\n                        renderGridLinesToCanvas<string | number>(ctx, {\n                            width,\n                            height,\n                            scale: xScale,\n                            axis: 'x',\n                            values: gridXValues,\n                        })\n                    }\n\n                    if (enableGridY) {\n                        renderGridLinesToCanvas<string | number>(ctx, {\n                            width,\n                            height,\n                            scale: yScale,\n                            axis: 'y',\n                            values: gridYValues,\n                        })\n                    }\n                }\n            } else if (layer === 'axes') {\n                renderAxesToCanvas(ctx, {\n                    xScale: xScale,\n                    yScale: yScale,\n                    width: innerWidth,\n                    height: innerHeight,\n                    top: axisTop,\n                    right: axisRight,\n                    bottom: axisBottom,\n                    left: axisLeft,\n                    theme,\n                })\n            } else if (layer === 'bars') {\n                barsWithValue.forEach(bar => {\n                    renderBar(ctx, {\n                        bar,\n                        borderColor: getBorderColor(bar) as string,\n                        borderRadius,\n                        borderWidth,\n                        label: getLabel(bar.data),\n                        labelColor: getLabelColor(bar) as string,\n                        shouldRenderLabel: shouldRenderBarLabel(bar),\n                    })\n                })\n            } else if (layer === 'legends') {\n                legendsWithData.forEach(([legend, data]) => {\n                    renderLegendToCanvas(ctx, {\n                        ...legend,\n                        data,\n                        containerWidth: innerWidth,\n                        containerHeight: innerHeight,\n                        theme,\n                    })\n                })\n            } else if (layer === 'annotations') {\n                renderAnnotationsToCanvas(ctx, { annotations: boundAnnotations, theme })\n            } else if (typeof layer === 'function') {\n                layer(ctx, layerContext)\n            }\n        })\n\n        ctx.save()\n    }, [\n        axisBottom,\n        axisLeft,\n        axisRight,\n        axisTop,\n        barsWithValue,\n        borderRadius,\n        borderWidth,\n        boundAnnotations,\n        enableGridX,\n        enableGridY,\n        getBorderColor,\n        getLabel,\n        getLabelColor,\n        gridXValues,\n        gridYValues,\n        groupMode,\n        height,\n        innerHeight,\n        innerWidth,\n        layerContext,\n        layers,\n        layout,\n        legendsWithData,\n        margin.left,\n        margin.top,\n        outerHeight,\n        outerWidth,\n        pixelRatio,\n        renderBar,\n        xScale,\n        yScale,\n        reverse,\n        shouldRenderBarLabel,\n        theme,\n        width,\n    ])\n\n    const handleMouseHover = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar !== undefined) {\n                showTooltipFromEvent(\n                    createElement(tooltip, {\n                        ...bar.data,\n                        color: bar.color,\n                        label: bar.label,\n                        value: Number(bar.data.value),\n                    }),\n                    event\n                )\n\n                if (event.type === 'mouseenter') {\n                    onMouseEnter?.(bar.data, event)\n                }\n            } else {\n                hideTooltip()\n            }\n        },\n        [hideTooltip, margin, onMouseEnter, bars, showTooltipFromEvent, tooltip]\n    )\n\n    const handleMouseLeave = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            hideTooltip()\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar) {\n                onMouseLeave?.(bar.data, event)\n            }\n        },\n        [hideTooltip, margin, onMouseLeave, bars]\n    )\n\n    const handleClick = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar !== undefined) {\n                onClick?.({ ...bar.data, color: bar.color }, event)\n            }\n        },\n        [margin, onClick, bars]\n    )\n\n    return (\n        <canvas\n            ref={canvas => {\n                canvasEl.current = canvas\n                if (canvasRef && 'current' in canvasRef) canvasRef.current = canvas\n            }}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nexport const BarCanvas = forwardRef(\n    <RawDatum extends BarDatum>(\n        { isInteractive, renderWrapper, theme, ...props }: BarCanvasProps<RawDatum>,\n        ref: ForwardedRef<HTMLCanvasElement>\n    ) => (\n        <Container {...{ isInteractive, renderWrapper, theme }} animate={false}>\n            <InnerBarCanvas<RawDatum> {...props} canvasRef={ref} />\n        </Container>\n    )\n)\n","import { Bar } from './Bar'\nimport { BarDatum, BarSvgProps } from './types'\nimport { ResponsiveWrapper } from '@nivo/core'\n\nexport const ResponsiveBar = <RawDatum extends BarDatum>(\n    props: Omit<BarSvgProps<RawDatum>, 'height' | 'width'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Bar<RawDatum> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n","import { BarDatum, BarCanvasProps } from './types'\nimport { BarCanvas } from './BarCanvas'\nimport { ForwardedRef, forwardRef } from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\n\nexport const ResponsiveBarCanvas = forwardRef(function ResponsiveBarCanvas<\n    RawDatum extends BarDatum\n>(props: Omit<BarCanvasProps<RawDatum>, 'height' | 'width'>, ref: ForwardedRef<HTMLCanvasElement>) {\n    return (\n        <ResponsiveWrapper>\n            {({ width, height }) => (\n                <BarCanvas\n                    width={width}\n                    height={height}\n                    {...(props as Omit<BarCanvasProps<BarDatum>, 'height' | 'width'>)}\n                    ref={ref}\n                />\n            )}\n        </ResponsiveWrapper>\n    )\n})\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys'),\n    keysIn = require('./keysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n","var castPath = require('./_castPath'),\n    last = require('./last'),\n    parent = require('./_parent'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nmodule.exports = baseUnset;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n","var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n","var isPlainObject = require('./isPlainObject');\n\n/**\n * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n * objects.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} key The key of the property to inspect.\n * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n */\nfunction customOmitClone(value) {\n  return isPlainObject(value) ? undefined : value;\n}\n\nmodule.exports = customOmitClone;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n","var baseGet = require('./_baseGet'),\n    baseSlice = require('./_baseSlice');\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nmodule.exports = parent;\n","var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n","var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n","var arrayMap = require('./_arrayMap'),\n    baseClone = require('./_baseClone'),\n    baseUnset = require('./_baseUnset'),\n    castPath = require('./_castPath'),\n    copyObject = require('./_copyObject'),\n    customOmitClone = require('./_customOmitClone'),\n    flatRest = require('./_flatRest'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nmodule.exports = omit;\n"],"names":["W","w","t","type","z","P","S","n","i","o","x","e","y","r","noteX","s","noteY","h","noteWidth","d","c","noteTextOffset","f","a","abs","Error","m","Math","atan2","O","p","l","u","size","g","round","height","width","k","v","points","text","angle","j","data","annotations","getPosition","getDimensions","reduce","offset","concat","match","map","datum","C","M","computed","E","note","animate","config","immediate","children","outlineWidth","style","strokeLinejoin","strokeWidth","stroke","outlineColor","I","isOutline","slice","link","strokeLinecap","opacity","outlineOpacity","path","fill","D","radius","outline","circle","cx","cy","L","symbol","R","borderRadius","rect","rx","ry","q","T","J","forEach","moveTo","lineTo","X","theme","length","save","b","lineCap","strokeStyle","lineWidth","beginPath","arc","PI","fillStyle","font","fontSize","fontFamily","textAlign","textBaseline","lineJoin","strokeText","fillText","restore","Array","prototype","stackValue","key","N","bars","max","Q","legends","toggleSerie","containerWidth","containerHeight","dataFrom","U","$","ee","indexBy","keys","groupMode","layout","reverse","minValue","maxValue","valueScale","indexScale","padding","innerPadding","axisBottom","axisLeft","enableGridX","enableGridY","enableLabel","label","labelSkipWidth","labelSkipHeight","labelTextColor","from","colorBy","colors","scheme","borderWidth","borderColor","isInteractive","tooltip","color","K","Y","id","value","formattedValue","enableChip","tooltipLabel","indexValue","initialHiddenIds","markers","ae","layers","barComponent","bar","labelColor","labelOpacity","labelX","labelY","transform","shouldRenderLabel","onClick","onMouseEnter","onMouseLeave","B","isFocusable","ariaLabel","ariaLabelledBy","H","ariaDescribedBy","F","showTooltipFromEvent","showTooltipAt","G","hideTooltip","A","V","absX","absY","Z","focusable","tabIndex","onMouseMove","onFocus","onBlur","textAnchor","dominantBaseline","fillOpacity","labels","pointerEvents","defs","motionConfig","role","ie","pixelRatio","window","devicePixelRatio","te","all","min","ne","re","Object","le","Number","oe","de","ue","ce","repeat","se","he","formatValue","getColor","getIndex","getTooltipLabel","xScale","yScale","margin","domain","hidden","index","push","left","top","be","ge","hiddenIds","filter","includes","Boolean","apply","isFinite","bandwidth","ve","fe","some","isArray","me","stackedData","pe","xe","constant","order","orderNone","offsetNone","stack","oz","kz","this","arguments","sz","sij","ki","si","_","call","ye","direction","legendLabel","Se","valueFormat","indexOf","ke","Le","we","Ce","Ve","We","Me","find","Be","barsWithValue","getLabel","getBorderColor","getLabelColor","shouldRenderBarLabel","legendsWithData","axisTop","axisRight","gridXValues","gridYValues","Ie","Te","Re","He","Pe","Ee","Fe","barAriaLabel","Xe","barAriaLabelledBy","Ye","barAriaDescribedBy","De","Oe","Ge","Ae","je","qe","outerWidth","ze","outerHeight","Ke","Ne","innerWidth","Je","innerHeight","Qe","Ue","Ze","$e","_e","ea","aa","ia","ta","na","ra","la","oa","enter","update","leave","da","ua","dataKey","targetKey","ca","axes","grid","right","bottom","xValues","yValues","sa","legendData","renderWrapper","renderBar","quadraticCurveTo","closePath","canvasRef","current","getContext","scale","background","fillRect","translate","line","axis","values","ref","cursor","module","exports","array","iteratee","copyObject","require","object","source","keysIn","Stack","arrayEach","assignValue","baseAssign","baseAssignIn","cloneBuffer","copyArray","copySymbols","copySymbolsIn","getAllKeys","getAllKeysIn","getTag","initCloneArray","initCloneByTag","initCloneObject","isBuffer","isMap","isObject","isSet","argsTag","funcTag","objectTag","cloneableTags","baseClone","bitmask","customizer","result","isDeep","isFlat","isFull","undefined","isArr","tag","isFunc","stacked","get","set","subValue","add","props","isObjectLike","start","end","castPath","last","parent","toKey","cloneArrayBuffer","dataView","buffer","constructor","byteOffset","byteLength","reFlags","regexp","exec","lastIndex","Symbol","symbolProto","symbolValueOf","valueOf","getSymbols","getSymbolsIn","isPlainObject","baseGetAllKeys","arrayPush","getPrototype","stubArray","getOwnPropertySymbols","hasOwnProperty","input","cloneDataView","cloneRegExp","cloneSymbol","cloneTypedArray","Ctor","baseGet","baseSlice","baseIsMap","baseUnary","nodeUtil","nodeIsMap","baseIsSet","nodeIsSet","arrayMap","baseUnset","customOmitClone","flatRest","omit","paths","CLONE_DEEP_FLAG"],"sourceRoot":""}