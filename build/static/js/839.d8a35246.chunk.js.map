{"version":3,"file":"static/js/839.d8a35246.chunk.js","mappings":"yVA6IA,UAjIc,WACZ,IAAMA,GAAQC,EAAAA,EAAAA,KACRC,GAASC,EAAAA,EAAAA,IAAOH,EAAMI,QAAQC,MACpCC,GAA0CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhCI,GAAFF,EAAA,GAAkBA,EAAA,IACtCG,GAAqCJ,EAAAA,EAAAA,UAASK,OAAMC,GAAAJ,EAAAA,EAAAA,GAAAE,EAAA,GAA7CG,EAAWD,EAAA,GAAEE,EAAaF,EAAA,IAEjCG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEGC,EAAAA,EAAIC,IAAI,mBAAmB,KAAD,EAA3CP,EAAQG,EAAAK,KACRP,EAASD,EAASS,KAAKC,KAAI,SAAAC,GAAK,MAAK,CACzCC,GAAID,EAAMC,GACVC,MAAM,IAADC,OAAMH,EAAMI,KAAI,MAAAD,OAAKH,EAAMK,MAChCC,KAAMN,EAAMM,KACb,IACDzB,EAAcS,GAAQE,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAe,GAAAf,EAAA,SAEtBgB,MAAMhB,EAAAe,GAAMlB,SAASS,KAAKW,SAAS,yBAAAjB,EAAAkB,OAAA,GAAAtB,EAAA,kBAEtC,kBAZoB,OAAAJ,EAAA2B,MAAA,KAAAC,UAAA,MAc2C,UAA5DC,eAAeC,QAAQ,QAAQC,WAAWC,eAA6BH,eAAeC,QAAQ,YAAW/B,GAC/G,GAAG,IAwBH,OACEkC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,EAAE,OAAMC,SAAA,EACXC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CACLpB,MAAM,WACNqB,SAAS,uBAGXN,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFM,QAAQ,OACRC,eAAe,gBAAeL,SAAA,EAG9BH,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFQ,KAAK,UACLC,gBAAiB3D,EAAO4D,QAAQ,KAChCC,EAAE,OACFC,aAAa,MAAKV,SAAA,EAElBC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAIZ,SAAC,wBACzBC,EAAAA,EAAAA,KAACY,EAAAA,EAAI,CAAAb,SACFxC,EAAYmB,KAAI,SAACmC,GAAK,OACnBb,EAAAA,EAAAA,KAACc,EAAAA,GAAQ,CAELC,GAAI,CACFT,gBAAiB3D,EAAOqE,YAAY,KACpCC,OAAQ,SACRR,aAAc,OACdV,UAEJC,EAAAA,EAAAA,KAACkB,EAAAA,EAAY,CACTX,QAASM,EAAMhC,MACfsC,WACEnB,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAAAX,UACRqB,EAAAA,EAAAA,IAAWP,EAAM5B,KAAM,CACtBoC,KAAM,UACNC,MAAO,QACPC,IAAK,UACLC,OAAQ,YAfXX,EAAMjC,GAoBJ,UAMnBoB,EAAAA,EAAAA,KAACH,EAAAA,EAAG,CACFQ,KAAK,WACLoB,GAAG,OAAM1B,UAETC,EAAAA,EAAAA,KAAC0B,EAAAA,EAAY,CACXC,OAAO,OACPC,QAAS,CAACC,EAAAA,EAAeC,EAAAA,EAAgBC,EAAAA,GAAmBC,EAAAA,GAC5DC,cAAe,CACbC,KAAM,kBACNC,OAAQ,QACRC,MAAO,kDAETC,WAAY,CACVC,MAAO,QACPhB,MAAO,QACPiB,KAAM,QACNhB,IAAK,MACLiB,KAAM,SAERC,YAAY,eACZC,UAAU,EACVC,YAAY,EACZC,cAAc,EACdC,cAAc,EACdC,OA9Fc,SAACC,GACvB,IAAMlE,EAAQmE,OAAO,yBACfC,EAAcF,EAASG,KAAKC,SAClCF,EAAYG,WAERvE,GACFoE,EAAYI,SAAS,CACnBzE,GAAG,GAADE,OAAKiE,EAASO,QAAO,KAAAxE,OAAID,GAC3BA,MAAAA,EACA0E,MAAOR,EAASS,SAChBC,IAAKV,EAASW,OACdC,OAAQZ,EAASY,QAGvB,EAiFUC,WA/Ee,SAACb,GACpBc,OAAOC,QAAQ,wEAADhF,OAAmEiE,EAASlC,MAAMhC,MAAK,OACvGkE,EAASlC,MAAMkD,QAEnB,EA4EUC,UAAW,SAAC/F,GAAM,OAAKd,EAAiBc,EAAO,EAC/CgG,cAAe1G,WAM3B,C","sources":["scenes/calendar/index.jsx"],"sourcesContent":["import {useEffect, useState} from \"react\";\r\nimport { formatDate } from \"@fullcalendar/core\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport listPlugin from \"@fullcalendar/list\";\r\nimport { Box, List, ListItem, ListItemText, Typography, useTheme } from \"@mui/material\";\r\nimport Header from \"../../components/Header\";\r\nimport { tokens } from \"../../theme\";\r\nimport {api} from \"../../utils/api\";\r\n\r\nconst Index = () => {\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n  const [currentEvents, setCurrentEvents] = useState([]);\r\n  const [eventstData, setEventsData] = useState(Array);\r\n\r\n  useEffect(() => {\r\n    const fetchEventsData = async () => {\r\n      try {\r\n        const response = await api.get('/get-events.php');\r\n        const events = response.data.map(entry => ({\r\n          id: entry.id,\r\n          title: `[${entry.type}] ${entry.text}`,\r\n          date: entry.date,\r\n        }));\r\n        setEventsData(events);\r\n      } catch (error) {\r\n        alert(error.response.data.message);\r\n      }\r\n    };\r\n\r\n    if (sessionStorage.getItem(\"role\").toString().toLowerCase() !== \"coach\" || sessionStorage.getItem(\"sus_id\")) fetchEventsData();\r\n  }, []);\r\n\r\n  const handleDateClick = (selected) => {\r\n    const title = prompt(\"Bitte Termin eingeben\");\r\n    const calendarApi = selected.view.calendar;\r\n    calendarApi.unselect();\r\n\r\n    if (title) {\r\n      calendarApi.addEvent({\r\n        id: `${selected.dateStr}-${title}`,\r\n        title,\r\n        start: selected.startStr,\r\n        end: selected.endStr,\r\n        allDay: selected.allDay,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleEventClick = (selected) => {\r\n    if (window.confirm(`Sind Sie sich sicher, dass Sie diesen Termin löschen möchten? '${selected.event.title}'`)) {\r\n      selected.event.remove();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box m=\"20px\">\r\n      <Header\r\n        title=\"Kalender\"\r\n        subtitle=\"Termine eintragen\"\r\n      />\r\n\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n      >\r\n        {/* CALENDAR SIDEBAR */}\r\n        <Box\r\n          flex=\"1 1 20%\"\r\n          backgroundColor={colors.primary[400]}\r\n          p=\"15px\"\r\n          borderRadius=\"4px\"\r\n        >\r\n          <Typography variant=\"h5\">Anstehende Termine</Typography>\r\n          <List>\r\n            {eventstData.map((event) => (\r\n                <ListItem\r\n                    key={event.id}\r\n                    sx={{\r\n                      backgroundColor: colors.greenAccent[500],\r\n                      margin: \"10px 0\",\r\n                      borderRadius: \"2px\",\r\n                    }}\r\n                >\r\n                  <ListItemText\r\n                      primary={event.title}\r\n                      secondary={\r\n                        <Typography>\r\n                          {formatDate(event.date, {\r\n                            year: \"numeric\",\r\n                            month: \"short\",\r\n                            day: \"numeric\",\r\n                            locale: \"CH\",\r\n                          })}\r\n                        </Typography>\r\n                      }\r\n                  />\r\n                </ListItem>\r\n            ))}\r\n          </List>\r\n        </Box>\r\n\r\n        {/* CALENDAR */}\r\n        <Box\r\n          flex=\"1 1 100%\"\r\n          ml=\"15px\"\r\n        >\r\n          <FullCalendar\r\n            height=\"75vh\"\r\n            plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin, listPlugin]}\r\n            headerToolbar={{\r\n              left: \"prev,next today\",\r\n              center: \"title\",\r\n              right: \"dayGridMonth,timeGridWeek,timeGridDay,listYear\",\r\n            }}\r\n            buttonText={{\r\n              today: \"Heute\",\r\n              month: \"Monat\",\r\n              week: \"Woche\",\r\n              day: \"Tag\",\r\n              list: \"Liste\",\r\n            }}\r\n            initialView=\"dayGridMonth\"\r\n            editable={true}\r\n            selectable={true}\r\n            selectMirror={true}\r\n            dayMaxEvents={true}\r\n            select={handleDateClick}\r\n            eventClick={handleEventClick}\r\n            eventsSet={(events) => setCurrentEvents(events)}\r\n            initialEvents={eventstData}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"],"names":["theme","useTheme","colors","tokens","palette","mode","_useState","useState","_useState2","_slicedToArray","setCurrentEvents","_useState3","Array","_useState4","eventstData","setEventsData","useEffect","fetchEventsData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","events","wrap","_context","prev","next","api","get","sent","data","map","entry","id","title","concat","type","text","date","t0","alert","message","stop","apply","arguments","sessionStorage","getItem","toString","toLowerCase","_jsxs","Box","m","children","_jsx","Header","subtitle","display","justifyContent","flex","backgroundColor","primary","p","borderRadius","Typography","variant","List","event","ListItem","sx","greenAccent","margin","ListItemText","secondary","formatDate","year","month","day","locale","ml","FullCalendar","height","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","listPlugin","headerToolbar","left","center","right","buttonText","today","week","list","initialView","editable","selectable","selectMirror","dayMaxEvents","select","selected","prompt","calendarApi","view","calendar","unselect","addEvent","dateStr","start","startStr","end","endStr","allDay","eventClick","window","confirm","remove","eventsSet","initialEvents"],"sourceRoot":""}