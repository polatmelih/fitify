{"version":3,"file":"static/js/311.27e67b3e.chunk.js","mappings":"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","sources":["../node_modules/d3-path/src/path.js","../node_modules/d3-shape/src/point.js","../node_modules/d3-shape/src/line.js","../node_modules/delaunator/index.js","../node_modules/d3-delaunay/src/path.js","../node_modules/d3-delaunay/src/polygon.js","../node_modules/d3-delaunay/src/voronoi.js","../node_modules/d3-delaunay/src/delaunay.js","../node_modules/@nivo/voronoi/src/props.ts","../node_modules/@nivo/voronoi/src/computeMesh.ts","../node_modules/@nivo/voronoi/src/hooks.ts","../node_modules/@nivo/voronoi/src/Mesh.tsx","../node_modules/@nivo/line/src/PointTooltip.js","../node_modules/@nivo/line/src/SliceTooltip.js","../node_modules/@nivo/line/src/props.js","../node_modules/@nivo/line/src/hooks.js","../node_modules/d3-shape/src/area.js","../node_modules/@nivo/line/src/Areas.js","../node_modules/@nivo/line/src/LinesItem.js","../node_modules/@nivo/line/src/Lines.js","../node_modules/@nivo/line/src/SlicesItem.js","../node_modules/@nivo/line/src/Slices.js","../node_modules/@nivo/line/src/Points.js","../node_modules/@nivo/line/src/Mesh.js","../node_modules/@nivo/line/src/Line.js","../node_modules/@nivo/line/src/ResponsiveLine.js","../node_modules/@nivo/line/src/LineCanvas.js","../node_modules/@nivo/voronoi/src/meshCanvas.ts","../node_modules/@nivo/line/src/ResponsiveLineCanvas.js"],"sourcesContent":["var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","\nconst EPSILON = Math.pow(2, -52);\nconst EDGE_STACK = new Uint32Array(512);\n\nexport default class Delaunator {\n\n    static from(points, getX = defaultGetX, getY = defaultGetY) {\n        const n = points.length;\n        const coords = new Float64Array(n * 2);\n\n        for (let i = 0; i < n; i++) {\n            const p = points[i];\n            coords[2 * i] = getX(p);\n            coords[2 * i + 1] = getY(p);\n        }\n\n        return new Delaunator(coords);\n    }\n\n    constructor(coords) {\n        const n = coords.length >> 1;\n        if (n > 0 && typeof coords[0] !== 'number') throw new Error('Expected coords to contain numbers.');\n\n        this.coords = coords;\n\n        // arrays that will store the triangulation graph\n        const maxTriangles = Math.max(2 * n - 5, 0);\n        this._triangles = new Uint32Array(maxTriangles * 3);\n        this._halfedges = new Int32Array(maxTriangles * 3);\n\n        // temporary arrays for tracking the edges of the advancing convex hull\n        this._hashSize = Math.ceil(Math.sqrt(n));\n        this._hullPrev = new Uint32Array(n); // edge to prev edge\n        this._hullNext = new Uint32Array(n); // edge to next edge\n        this._hullTri = new Uint32Array(n); // edge to adjacent triangle\n        this._hullHash = new Int32Array(this._hashSize).fill(-1); // angular edge hash\n\n        // temporary arrays for sorting points\n        this._ids = new Uint32Array(n);\n        this._dists = new Float64Array(n);\n\n        this.update();\n    }\n\n    update() {\n        const {coords, _hullPrev: hullPrev, _hullNext: hullNext, _hullTri: hullTri, _hullHash: hullHash} =  this;\n        const n = coords.length >> 1;\n\n        // populate an array of point indices; calculate input data bbox\n        let minX = Infinity;\n        let minY = Infinity;\n        let maxX = -Infinity;\n        let maxY = -Infinity;\n\n        for (let i = 0; i < n; i++) {\n            const x = coords[2 * i];\n            const y = coords[2 * i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n            this._ids[i] = i;\n        }\n        const cx = (minX + maxX) / 2;\n        const cy = (minY + maxY) / 2;\n\n        let minDist = Infinity;\n        let i0, i1, i2;\n\n        // pick a seed point close to the center\n        for (let i = 0; i < n; i++) {\n            const d = dist(cx, cy, coords[2 * i], coords[2 * i + 1]);\n            if (d < minDist) {\n                i0 = i;\n                minDist = d;\n            }\n        }\n        const i0x = coords[2 * i0];\n        const i0y = coords[2 * i0 + 1];\n\n        minDist = Infinity;\n\n        // find the point closest to the seed\n        for (let i = 0; i < n; i++) {\n            if (i === i0) continue;\n            const d = dist(i0x, i0y, coords[2 * i], coords[2 * i + 1]);\n            if (d < minDist && d > 0) {\n                i1 = i;\n                minDist = d;\n            }\n        }\n        let i1x = coords[2 * i1];\n        let i1y = coords[2 * i1 + 1];\n\n        let minRadius = Infinity;\n\n        // find the third point which forms the smallest circumcircle with the first two\n        for (let i = 0; i < n; i++) {\n            if (i === i0 || i === i1) continue;\n            const r = circumradius(i0x, i0y, i1x, i1y, coords[2 * i], coords[2 * i + 1]);\n            if (r < minRadius) {\n                i2 = i;\n                minRadius = r;\n            }\n        }\n        let i2x = coords[2 * i2];\n        let i2y = coords[2 * i2 + 1];\n\n        if (minRadius === Infinity) {\n            // order collinear points by dx (or dy if all x are identical)\n            // and return the list as a hull\n            for (let i = 0; i < n; i++) {\n                this._dists[i] = (coords[2 * i] - coords[0]) || (coords[2 * i + 1] - coords[1]);\n            }\n            quicksort(this._ids, this._dists, 0, n - 1);\n            const hull = new Uint32Array(n);\n            let j = 0;\n            for (let i = 0, d0 = -Infinity; i < n; i++) {\n                const id = this._ids[i];\n                if (this._dists[id] > d0) {\n                    hull[j++] = id;\n                    d0 = this._dists[id];\n                }\n            }\n            this.hull = hull.subarray(0, j);\n            this.triangles = new Uint32Array(0);\n            this.halfedges = new Uint32Array(0);\n            return;\n        }\n\n        // swap the order of the seed points for counter-clockwise orientation\n        if (orient(i0x, i0y, i1x, i1y, i2x, i2y)) {\n            const i = i1;\n            const x = i1x;\n            const y = i1y;\n            i1 = i2;\n            i1x = i2x;\n            i1y = i2y;\n            i2 = i;\n            i2x = x;\n            i2y = y;\n        }\n\n        const center = circumcenter(i0x, i0y, i1x, i1y, i2x, i2y);\n        this._cx = center.x;\n        this._cy = center.y;\n\n        for (let i = 0; i < n; i++) {\n            this._dists[i] = dist(coords[2 * i], coords[2 * i + 1], center.x, center.y);\n        }\n\n        // sort the points by distance from the seed triangle circumcenter\n        quicksort(this._ids, this._dists, 0, n - 1);\n\n        // set up the seed triangle as the starting hull\n        this._hullStart = i0;\n        let hullSize = 3;\n\n        hullNext[i0] = hullPrev[i2] = i1;\n        hullNext[i1] = hullPrev[i0] = i2;\n        hullNext[i2] = hullPrev[i1] = i0;\n\n        hullTri[i0] = 0;\n        hullTri[i1] = 1;\n        hullTri[i2] = 2;\n\n        hullHash.fill(-1);\n        hullHash[this._hashKey(i0x, i0y)] = i0;\n        hullHash[this._hashKey(i1x, i1y)] = i1;\n        hullHash[this._hashKey(i2x, i2y)] = i2;\n\n        this.trianglesLen = 0;\n        this._addTriangle(i0, i1, i2, -1, -1, -1);\n\n        for (let k = 0, xp, yp; k < this._ids.length; k++) {\n            const i = this._ids[k];\n            const x = coords[2 * i];\n            const y = coords[2 * i + 1];\n\n            // skip near-duplicate points\n            if (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON) continue;\n            xp = x;\n            yp = y;\n\n            // skip seed triangle points\n            if (i === i0 || i === i1 || i === i2) continue;\n\n            // find a visible edge on the convex hull using edge hash\n            let start = 0;\n            for (let j = 0, key = this._hashKey(x, y); j < this._hashSize; j++) {\n                start = hullHash[(key + j) % this._hashSize];\n                if (start !== -1 && start !== hullNext[start]) break;\n            }\n\n            start = hullPrev[start];\n            let e = start, q;\n            while (q = hullNext[e], !orient(x, y, coords[2 * e], coords[2 * e + 1], coords[2 * q], coords[2 * q + 1])) {\n                e = q;\n                if (e === start) {\n                    e = -1;\n                    break;\n                }\n            }\n            if (e === -1) continue; // likely a near-duplicate point; skip it\n\n            // add the first triangle from the point\n            let t = this._addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]);\n\n            // recursively flip triangles from the point until they satisfy the Delaunay condition\n            hullTri[i] = this._legalize(t + 2);\n            hullTri[e] = t; // keep track of boundary triangles on the hull\n            hullSize++;\n\n            // walk forward through the hull, adding more triangles and flipping recursively\n            let n = hullNext[e];\n            while (q = hullNext[n], orient(x, y, coords[2 * n], coords[2 * n + 1], coords[2 * q], coords[2 * q + 1])) {\n                t = this._addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);\n                hullTri[i] = this._legalize(t + 2);\n                hullNext[n] = n; // mark as removed\n                hullSize--;\n                n = q;\n            }\n\n            // walk backward from the other side, adding more triangles and flipping\n            if (e === start) {\n                while (q = hullPrev[e], orient(x, y, coords[2 * q], coords[2 * q + 1], coords[2 * e], coords[2 * e + 1])) {\n                    t = this._addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);\n                    this._legalize(t + 2);\n                    hullTri[q] = t;\n                    hullNext[e] = e; // mark as removed\n                    hullSize--;\n                    e = q;\n                }\n            }\n\n            // update the hull indices\n            this._hullStart = hullPrev[i] = e;\n            hullNext[e] = hullPrev[n] = i;\n            hullNext[i] = n;\n\n            // save the two new edges in the hash table\n            hullHash[this._hashKey(x, y)] = i;\n            hullHash[this._hashKey(coords[2 * e], coords[2 * e + 1])] = e;\n        }\n\n        this.hull = new Uint32Array(hullSize);\n        for (let i = 0, e = this._hullStart; i < hullSize; i++) {\n            this.hull[i] = e;\n            e = hullNext[e];\n        }\n\n        // trim typed triangle mesh arrays\n        this.triangles = this._triangles.subarray(0, this.trianglesLen);\n        this.halfedges = this._halfedges.subarray(0, this.trianglesLen);\n    }\n\n    _hashKey(x, y) {\n        return Math.floor(pseudoAngle(x - this._cx, y - this._cy) * this._hashSize) % this._hashSize;\n    }\n\n    _legalize(a) {\n        const {_triangles: triangles, _halfedges: halfedges, coords} = this;\n\n        let i = 0;\n        let ar = 0;\n\n        // recursion eliminated with a fixed-size stack\n        while (true) {\n            const b = halfedges[a];\n\n            /* if the pair of triangles doesn't satisfy the Delaunay condition\n             * (p1 is inside the circumcircle of [p0, pl, pr]), flip them,\n             * then do the same check/flip recursively for the new pair of triangles\n             *\n             *           pl                    pl\n             *          /||\\                  /  \\\n             *       al/ || \\bl            al/    \\a\n             *        /  ||  \\              /      \\\n             *       /  a||b  \\    flip    /___ar___\\\n             *     p0\\   ||   /p1   =>   p0\\---bl---/p1\n             *        \\  ||  /              \\      /\n             *       ar\\ || /br             b\\    /br\n             *          \\||/                  \\  /\n             *           pr                    pr\n             */\n            const a0 = a - a % 3;\n            ar = a0 + (a + 2) % 3;\n\n            if (b === -1) { // convex hull edge\n                if (i === 0) break;\n                a = EDGE_STACK[--i];\n                continue;\n            }\n\n            const b0 = b - b % 3;\n            const al = a0 + (a + 1) % 3;\n            const bl = b0 + (b + 2) % 3;\n\n            const p0 = triangles[ar];\n            const pr = triangles[a];\n            const pl = triangles[al];\n            const p1 = triangles[bl];\n\n            const illegal = inCircle(\n                coords[2 * p0], coords[2 * p0 + 1],\n                coords[2 * pr], coords[2 * pr + 1],\n                coords[2 * pl], coords[2 * pl + 1],\n                coords[2 * p1], coords[2 * p1 + 1]);\n\n            if (illegal) {\n                triangles[a] = p1;\n                triangles[b] = p0;\n\n                const hbl = halfedges[bl];\n\n                // edge swapped on the other side of the hull (rare); fix the halfedge reference\n                if (hbl === -1) {\n                    let e = this._hullStart;\n                    do {\n                        if (this._hullTri[e] === bl) {\n                            this._hullTri[e] = a;\n                            break;\n                        }\n                        e = this._hullPrev[e];\n                    } while (e !== this._hullStart);\n                }\n                this._link(a, hbl);\n                this._link(b, halfedges[ar]);\n                this._link(ar, bl);\n\n                const br = b0 + (b + 1) % 3;\n\n                // don't worry about hitting the cap: it can only happen on extremely degenerate input\n                if (i < EDGE_STACK.length) {\n                    EDGE_STACK[i++] = br;\n                }\n            } else {\n                if (i === 0) break;\n                a = EDGE_STACK[--i];\n            }\n        }\n\n        return ar;\n    }\n\n    _link(a, b) {\n        this._halfedges[a] = b;\n        if (b !== -1) this._halfedges[b] = a;\n    }\n\n    // add a new triangle given vertex indices and adjacent half-edge ids\n    _addTriangle(i0, i1, i2, a, b, c) {\n        const t = this.trianglesLen;\n\n        this._triangles[t] = i0;\n        this._triangles[t + 1] = i1;\n        this._triangles[t + 2] = i2;\n\n        this._link(t, a);\n        this._link(t + 1, b);\n        this._link(t + 2, c);\n\n        this.trianglesLen += 3;\n\n        return t;\n    }\n}\n\n// monotonically increases with real angle, but doesn't need expensive trigonometry\nfunction pseudoAngle(dx, dy) {\n    const p = dx / (Math.abs(dx) + Math.abs(dy));\n    return (dy > 0 ? 3 - p : 1 + p) / 4; // [0..1]\n}\n\nfunction dist(ax, ay, bx, by) {\n    const dx = ax - bx;\n    const dy = ay - by;\n    return dx * dx + dy * dy;\n}\n\n// return 2d orientation sign if we're confident in it through J. Shewchuk's error bound check\nfunction orientIfSure(px, py, rx, ry, qx, qy) {\n    const l = (ry - py) * (qx - px);\n    const r = (rx - px) * (qy - py);\n    return Math.abs(l - r) >= 3.3306690738754716e-16 * Math.abs(l + r) ? l - r : 0;\n}\n\n// a more robust orientation test that's stable in a given triangle (to fix robustness issues)\nfunction orient(rx, ry, qx, qy, px, py) {\n    const sign = orientIfSure(px, py, rx, ry, qx, qy) ||\n    orientIfSure(rx, ry, qx, qy, px, py) ||\n    orientIfSure(qx, qy, px, py, rx, ry);\n    return sign < 0;\n}\n\nfunction inCircle(ax, ay, bx, by, cx, cy, px, py) {\n    const dx = ax - px;\n    const dy = ay - py;\n    const ex = bx - px;\n    const ey = by - py;\n    const fx = cx - px;\n    const fy = cy - py;\n\n    const ap = dx * dx + dy * dy;\n    const bp = ex * ex + ey * ey;\n    const cp = fx * fx + fy * fy;\n\n    return dx * (ey * cp - bp * fy) -\n           dy * (ex * cp - bp * fx) +\n           ap * (ex * fy - ey * fx) < 0;\n}\n\nfunction circumradius(ax, ay, bx, by, cx, cy) {\n    const dx = bx - ax;\n    const dy = by - ay;\n    const ex = cx - ax;\n    const ey = cy - ay;\n\n    const bl = dx * dx + dy * dy;\n    const cl = ex * ex + ey * ey;\n    const d = 0.5 / (dx * ey - dy * ex);\n\n    const x = (ey * bl - dy * cl) * d;\n    const y = (dx * cl - ex * bl) * d;\n\n    return x * x + y * y;\n}\n\nfunction circumcenter(ax, ay, bx, by, cx, cy) {\n    const dx = bx - ax;\n    const dy = by - ay;\n    const ex = cx - ax;\n    const ey = cy - ay;\n\n    const bl = dx * dx + dy * dy;\n    const cl = ex * ex + ey * ey;\n    const d = 0.5 / (dx * ey - dy * ex);\n\n    const x = ax + (ey * bl - dy * cl) * d;\n    const y = ay + (dx * cl - ex * bl) * d;\n\n    return {x, y};\n}\n\nfunction quicksort(ids, dists, left, right) {\n    if (right - left <= 20) {\n        for (let i = left + 1; i <= right; i++) {\n            const temp = ids[i];\n            const tempDist = dists[temp];\n            let j = i - 1;\n            while (j >= left && dists[ids[j]] > tempDist) ids[j + 1] = ids[j--];\n            ids[j + 1] = temp;\n        }\n    } else {\n        const median = (left + right) >> 1;\n        let i = left + 1;\n        let j = right;\n        swap(ids, median, i);\n        if (dists[ids[left]] > dists[ids[right]]) swap(ids, left, right);\n        if (dists[ids[i]] > dists[ids[right]]) swap(ids, i, right);\n        if (dists[ids[left]] > dists[ids[i]]) swap(ids, left, i);\n\n        const temp = ids[i];\n        const tempDist = dists[temp];\n        while (true) {\n            do i++; while (dists[ids[i]] < tempDist);\n            do j--; while (dists[ids[j]] > tempDist);\n            if (j < i) break;\n            swap(ids, i, j);\n        }\n        ids[left + 1] = ids[j];\n        ids[j] = temp;\n\n        if (right - i + 1 >= j - left) {\n            quicksort(ids, dists, i, right);\n            quicksort(ids, dists, left, j - 1);\n        } else {\n            quicksort(ids, dists, left, j - 1);\n            quicksort(ids, dists, i, right);\n        }\n    }\n}\n\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultGetX(p) {\n    return p[0];\n}\nfunction defaultGetY(p) {\n    return p[1];\n}\n","const epsilon = 1e-6;\n\nexport default class Path {\n  constructor() {\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n    this._ = \"\";\n  }\n  moveTo(x, y) {\n    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;\n  }\n  closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  }\n  lineTo(x, y) {\n    this._ += `L${this._x1 = +x},${this._y1 = +y}`;\n  }\n  arc(x, y, r) {\n    x = +x, y = +y, r = +r;\n    const x0 = x + r;\n    const y0 = y;\n    if (r < 0) throw new Error(\"negative radius\");\n    if (this._x1 === null) this._ += `M${x0},${y0}`;\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) this._ += \"L\" + x0 + \",\" + y0;\n    if (!r) return;\n    this._ += `A${r},${r},0,1,1,${x - r},${y}A${r},${r},0,1,1,${this._x1 = x0},${this._y1 = y0}`;\n  }\n  rect(x, y, w, h) {\n    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${+w}v${+h}h${-w}Z`;\n  }\n  value() {\n    return this._ || null;\n  }\n}\n","export default class Polygon {\n  constructor() {\n    this._ = [];\n  }\n  moveTo(x, y) {\n    this._.push([x, y]);\n  }\n  closePath() {\n    this._.push(this._[0].slice());\n  }\n  lineTo(x, y) {\n    this._.push([x, y]);\n  }\n  value() {\n    return this._.length ? this._ : null;\n  }\n}\n","import Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\n\nexport default class Voronoi {\n  constructor(delaunay, [xmin, ymin, xmax, ymax] = [0, 0, 960, 500]) {\n    if (!((xmax = +xmax) >= (xmin = +xmin)) || !((ymax = +ymax) >= (ymin = +ymin))) throw new Error(\"invalid bounds\");\n    this.delaunay = delaunay;\n    this._circumcenters = new Float64Array(delaunay.points.length * 2);\n    this.vectors = new Float64Array(delaunay.points.length * 2);\n    this.xmax = xmax, this.xmin = xmin;\n    this.ymax = ymax, this.ymin = ymin;\n    this._init();\n  }\n  update() {\n    this.delaunay.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const {delaunay: {points, hull, triangles}, vectors} = this;\n\n    // Compute circumcenters.\n    const circumcenters = this.circumcenters = this._circumcenters.subarray(0, triangles.length / 3 * 2);\n    for (let i = 0, j = 0, n = triangles.length, x, y; i < n; i += 3, j += 2) {\n      const t1 = triangles[i] * 2;\n      const t2 = triangles[i + 1] * 2;\n      const t3 = triangles[i + 2] * 2;\n      const x1 = points[t1];\n      const y1 = points[t1 + 1];\n      const x2 = points[t2];\n      const y2 = points[t2 + 1];\n      const x3 = points[t3];\n      const y3 = points[t3 + 1];\n\n      const dx = x2 - x1;\n      const dy = y2 - y1;\n      const ex = x3 - x1;\n      const ey = y3 - y1;\n      const bl = dx * dx + dy * dy;\n      const cl = ex * ex + ey * ey;\n      const ab = (dx * ey - dy * ex) * 2;\n\n      if (!ab) {\n        // degenerate case (collinear diagram)\n        x = (x1 + x3) / 2 - 1e8 * ey;\n        y = (y1 + y3) / 2 + 1e8 * ex;\n      }\n      else if (Math.abs(ab) < 1e-8) {\n        // almost equal points (degenerate triangle)\n        x = (x1 + x3) / 2;\n        y = (y1 + y3) / 2;\n      } else {\n        const d = 1 / ab;\n        x = x1 + (ey * bl - dy * cl) * d;\n        y = y1 + (dx * cl - ex * bl) * d;\n      }\n      circumcenters[j] = x;\n      circumcenters[j + 1] = y;\n    }\n\n    // Compute exterior cell rays.\n    let h = hull[hull.length - 1];\n    let p0, p1 = h * 4;\n    let x0, x1 = points[2 * h];\n    let y0, y1 = points[2 * h + 1];\n    vectors.fill(0);\n    for (let i = 0; i < hull.length; ++i) {\n      h = hull[i];\n      p0 = p1, x0 = x1, y0 = y1;\n      p1 = h * 4, x1 = points[2 * h], y1 = points[2 * h + 1];\n      vectors[p0 + 2] = vectors[p1] = y0 - y1;\n      vectors[p0 + 3] = vectors[p1 + 1] = x1 - x0;\n    }\n  }\n  render(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {delaunay: {halfedges, inedges, hull}, circumcenters, vectors} = this;\n    if (hull.length <= 1) return null;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = Math.floor(i / 3) * 2;\n      const tj = Math.floor(j / 3) * 2;\n      const xi = circumcenters[ti];\n      const yi = circumcenters[ti + 1];\n      const xj = circumcenters[tj];\n      const yj = circumcenters[tj + 1];\n      this._renderSegment(xi, yi, xj, yj, context);\n    }\n    let h0, h1 = hull[hull.length - 1];\n    for (let i = 0; i < hull.length; ++i) {\n      h0 = h1, h1 = hull[i];\n      const t = Math.floor(inedges[h1] / 3) * 2;\n      const x = circumcenters[t];\n      const y = circumcenters[t + 1];\n      const v = h0 * 4;\n      const p = this._project(x, y, vectors[v + 2], vectors[v + 3]);\n      if (p) this._renderSegment(x, y, p[0], p[1], context);\n    }\n    return buffer && buffer.value();\n  }\n  renderBounds(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    context.rect(this.xmin, this.ymin, this.xmax - this.xmin, this.ymax - this.ymin);\n    return buffer && buffer.value();\n  }\n  renderCell(i, context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const points = this._clip(i);\n    if (points === null || !points.length) return;\n    context.moveTo(points[0], points[1]);\n    let n = points.length;\n    while (points[0] === points[n-2] && points[1] === points[n-1] && n > 1) n -= 2;\n    for (let i = 2; i < n; i += 2) {\n      if (points[i] !== points[i-2] || points[i+1] !== points[i-1])\n        context.lineTo(points[i], points[i + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *cellPolygons() {\n    const {delaunay: {points}} = this;\n    for (let i = 0, n = points.length / 2; i < n; ++i) {\n      const cell = this.cellPolygon(i);\n      if (cell) cell.index = i, yield cell;\n    }\n  }\n  cellPolygon(i) {\n    const polygon = new Polygon;\n    this.renderCell(i, polygon);\n    return polygon.value();\n  }\n  _renderSegment(x0, y0, x1, y1, context) {\n    let S;\n    const c0 = this._regioncode(x0, y0);\n    const c1 = this._regioncode(x1, y1);\n    if (c0 === 0 && c1 === 0) {\n      context.moveTo(x0, y0);\n      context.lineTo(x1, y1);\n    } else if (S = this._clipSegment(x0, y0, x1, y1, c0, c1)) {\n      context.moveTo(S[0], S[1]);\n      context.lineTo(S[2], S[3]);\n    }\n  }\n  contains(i, x, y) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return false;\n    return this.delaunay._step(i, x, y) === i;\n  }\n  *neighbors(i) {\n    const ci = this._clip(i);\n    if (ci) for (const j of this.delaunay.neighbors(i)) {\n      const cj = this._clip(j);\n      // find the common edge\n      if (cj) loop: for (let ai = 0, li = ci.length; ai < li; ai += 2) {\n        for (let aj = 0, lj = cj.length; aj < lj; aj += 2) {\n          if (ci[ai] == cj[aj]\n          && ci[ai + 1] == cj[aj + 1]\n          && ci[(ai + 2) % li] == cj[(aj + lj - 2) % lj]\n          && ci[(ai + 3) % li] == cj[(aj + lj - 1) % lj]\n          ) {\n            yield j;\n            break loop;\n          }\n        }\n      }\n    }\n  }\n  _cell(i) {\n    const {circumcenters, delaunay: {inedges, halfedges, triangles}} = this;\n    const e0 = inedges[i];\n    if (e0 === -1) return null; // coincident point\n    const points = [];\n    let e = e0;\n    do {\n      const t = Math.floor(e / 3);\n      points.push(circumcenters[t * 2], circumcenters[t * 2 + 1]);\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n    } while (e !== e0 && e !== -1);\n    return points;\n  }\n  _clip(i) {\n    // degenerate case (1 valid point: return the box)\n    if (i === 0 && this.delaunay.hull.length === 1) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    const points = this._cell(i);\n    if (points === null) return null;\n    const {vectors: V} = this;\n    const v = i * 4;\n    return V[v] || V[v + 1]\n        ? this._clipInfinite(i, points, V[v], V[v + 1], V[v + 2], V[v + 3])\n        : this._clipFinite(i, points);\n  }\n  _clipFinite(i, points) {\n    const n = points.length;\n    let P = null;\n    let x0, y0, x1 = points[n - 2], y1 = points[n - 1];\n    let c0, c1 = this._regioncode(x1, y1);\n    let e0, e1;\n    for (let j = 0; j < n; j += 2) {\n      x0 = x1, y0 = y1, x1 = points[j], y1 = points[j + 1];\n      c0 = c1, c1 = this._regioncode(x1, y1);\n      if (c0 === 0 && c1 === 0) {\n        e0 = e1, e1 = 0;\n        if (P) P.push(x1, y1);\n        else P = [x1, y1];\n      } else {\n        let S, sx0, sy0, sx1, sy1;\n        if (c0 === 0) {\n          if ((S = this._clipSegment(x0, y0, x1, y1, c0, c1)) === null) continue;\n          [sx0, sy0, sx1, sy1] = S;\n        } else {\n          if ((S = this._clipSegment(x1, y1, x0, y0, c1, c0)) === null) continue;\n          [sx1, sy1, sx0, sy0] = S;\n          e0 = e1, e1 = this._edgecode(sx0, sy0);\n          if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n          if (P) P.push(sx0, sy0);\n          else P = [sx0, sy0];\n        }\n        e0 = e1, e1 = this._edgecode(sx1, sy1);\n        if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n        if (P) P.push(sx1, sy1);\n        else P = [sx1, sy1];\n      }\n    }\n    if (P) {\n      e0 = e1, e1 = this._edgecode(P[0], P[1]);\n      if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    return P;\n  }\n  _clipSegment(x0, y0, x1, y1, c0, c1) {\n    while (true) {\n      if (c0 === 0 && c1 === 0) return [x0, y0, x1, y1];\n      if (c0 & c1) return null;\n      let x, y, c = c0 || c1;\n      if (c & 0b1000) x = x0 + (x1 - x0) * (this.ymax - y0) / (y1 - y0), y = this.ymax;\n      else if (c & 0b0100) x = x0 + (x1 - x0) * (this.ymin - y0) / (y1 - y0), y = this.ymin;\n      else if (c & 0b0010) y = y0 + (y1 - y0) * (this.xmax - x0) / (x1 - x0), x = this.xmax;\n      else y = y0 + (y1 - y0) * (this.xmin - x0) / (x1 - x0), x = this.xmin;\n      if (c0) x0 = x, y0 = y, c0 = this._regioncode(x0, y0);\n      else x1 = x, y1 = y, c1 = this._regioncode(x1, y1);\n    }\n  }\n  _clipInfinite(i, points, vx0, vy0, vxn, vyn) {\n    let P = Array.from(points), p;\n    if (p = this._project(P[0], P[1], vx0, vy0)) P.unshift(p[0], p[1]);\n    if (p = this._project(P[P.length - 2], P[P.length - 1], vxn, vyn)) P.push(p[0], p[1]);\n    if (P = this._clipFinite(i, P)) {\n      for (let j = 0, n = P.length, c0, c1 = this._edgecode(P[n - 2], P[n - 1]); j < n; j += 2) {\n        c0 = c1, c1 = this._edgecode(P[j], P[j + 1]);\n        if (c0 && c1) j = this._edge(i, c0, c1, P, j), n = P.length;\n      }\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      P = [this.xmin, this.ymin, this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax];\n    }\n    return P;\n  }\n  _edge(i, e0, e1, P, j) {\n    while (e0 !== e1) {\n      let x, y;\n      switch (e0) {\n        case 0b0101: e0 = 0b0100; continue; // top-left\n        case 0b0100: e0 = 0b0110, x = this.xmax, y = this.ymin; break; // top\n        case 0b0110: e0 = 0b0010; continue; // top-right\n        case 0b0010: e0 = 0b1010, x = this.xmax, y = this.ymax; break; // right\n        case 0b1010: e0 = 0b1000; continue; // bottom-right\n        case 0b1000: e0 = 0b1001, x = this.xmin, y = this.ymax; break; // bottom\n        case 0b1001: e0 = 0b0001; continue; // bottom-left\n        case 0b0001: e0 = 0b0101, x = this.xmin, y = this.ymin; break; // left\n      }\n      if ((P[j] !== x || P[j + 1] !== y) && this.contains(i, x, y)) {\n        P.splice(j, 0, x, y), j += 2;\n      }\n    }\n    if (P.length > 4) {\n      for (let i = 0; i < P.length; i+= 2) {\n        const j = (i + 2) % P.length, k = (i + 4) % P.length;\n        if (P[i] === P[j] && P[j] === P[k]\n        || P[i + 1] === P[j + 1] && P[j + 1] === P[k + 1])\n          P.splice(j, 2), i -= 2;\n      }\n    }\n    return j;\n  }\n  _project(x0, y0, vx, vy) {\n    let t = Infinity, c, x, y;\n    if (vy < 0) { // top\n      if (y0 <= this.ymin) return null;\n      if ((c = (this.ymin - y0) / vy) < t) y = this.ymin, x = x0 + (t = c) * vx;\n    } else if (vy > 0) { // bottom\n      if (y0 >= this.ymax) return null;\n      if ((c = (this.ymax - y0) / vy) < t) y = this.ymax, x = x0 + (t = c) * vx;\n    }\n    if (vx > 0) { // right\n      if (x0 >= this.xmax) return null;\n      if ((c = (this.xmax - x0) / vx) < t) x = this.xmax, y = y0 + (t = c) * vy;\n    } else if (vx < 0) { // left\n      if (x0 <= this.xmin) return null;\n      if ((c = (this.xmin - x0) / vx) < t) x = this.xmin, y = y0 + (t = c) * vy;\n    }\n    return [x, y];\n  }\n  _edgecode(x, y) {\n    return (x === this.xmin ? 0b0001\n        : x === this.xmax ? 0b0010 : 0b0000)\n        | (y === this.ymin ? 0b0100\n        : y === this.ymax ? 0b1000 : 0b0000);\n  }\n  _regioncode(x, y) {\n    return (x < this.xmin ? 0b0001\n        : x > this.xmax ? 0b0010 : 0b0000)\n        | (y < this.ymin ? 0b0100\n        : y > this.ymax ? 0b1000 : 0b0000);\n  }\n}\n","import Delaunator from \"delaunator\";\nimport Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\nimport Voronoi from \"./voronoi.js\";\n\nconst tau = 2 * Math.PI, pow = Math.pow;\n\nfunction pointX(p) {\n  return p[0];\n}\n\nfunction pointY(p) {\n  return p[1];\n}\n\n// A triangulation is collinear if all its triangles have a non-null area\nfunction collinear(d) {\n  const {triangles, coords} = d;\n  for (let i = 0; i < triangles.length; i += 3) {\n    const a = 2 * triangles[i],\n          b = 2 * triangles[i + 1],\n          c = 2 * triangles[i + 2],\n          cross = (coords[c] - coords[a]) * (coords[b + 1] - coords[a + 1])\n                - (coords[b] - coords[a]) * (coords[c + 1] - coords[a + 1]);\n    if (cross > 1e-10) return false;\n  }\n  return true;\n}\n\nfunction jitter(x, y, r) {\n  return [x + Math.sin(x + y) * r, y + Math.cos(x - y) * r];\n}\n\nexport default class Delaunay {\n  static from(points, fx = pointX, fy = pointY, that) {\n    return new Delaunay(\"length\" in points\n        ? flatArray(points, fx, fy, that)\n        : Float64Array.from(flatIterable(points, fx, fy, that)));\n  }\n  constructor(points) {\n    this._delaunator = new Delaunator(points);\n    this.inedges = new Int32Array(points.length / 2);\n    this._hullIndex = new Int32Array(points.length / 2);\n    this.points = this._delaunator.coords;\n    this._init();\n  }\n  update() {\n    this._delaunator.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const d = this._delaunator, points = this.points;\n\n    // check for collinear\n    if (d.hull && d.hull.length > 2 && collinear(d)) {\n      this.collinear = Int32Array.from({length: points.length/2}, (_,i) => i)\n        .sort((i, j) => points[2 * i] - points[2 * j] || points[2 * i + 1] - points[2 * j + 1]); // for exact neighbors\n      const e = this.collinear[0], f = this.collinear[this.collinear.length - 1],\n        bounds = [ points[2 * e], points[2 * e + 1], points[2 * f], points[2 * f + 1] ],\n        r = 1e-8 * Math.hypot(bounds[3] - bounds[1], bounds[2] - bounds[0]);\n      for (let i = 0, n = points.length / 2; i < n; ++i) {\n        const p = jitter(points[2 * i], points[2 * i + 1], r);\n        points[2 * i] = p[0];\n        points[2 * i + 1] = p[1];\n      }\n      this._delaunator = new Delaunator(points);\n    } else {\n      delete this.collinear;\n    }\n\n    const halfedges = this.halfedges = this._delaunator.halfedges;\n    const hull = this.hull = this._delaunator.hull;\n    const triangles = this.triangles = this._delaunator.triangles;\n    const inedges = this.inedges.fill(-1);\n    const hullIndex = this._hullIndex.fill(-1);\n\n    // Compute an index from each point to an (arbitrary) incoming halfedge\n    // Used to give the first neighbor of each point; for this reason,\n    // on the hull we give priority to exterior halfedges\n    for (let e = 0, n = halfedges.length; e < n; ++e) {\n      const p = triangles[e % 3 === 2 ? e - 2 : e + 1];\n      if (halfedges[e] === -1 || inedges[p] === -1) inedges[p] = e;\n    }\n    for (let i = 0, n = hull.length; i < n; ++i) {\n      hullIndex[hull[i]] = i;\n    }\n\n    // degenerate case: 1 or 2 (distinct) points\n    if (hull.length <= 2 && hull.length > 0) {\n      this.triangles = new Int32Array(3).fill(-1);\n      this.halfedges = new Int32Array(3).fill(-1);\n      this.triangles[0] = hull[0];\n      this.triangles[1] = hull[1];\n      this.triangles[2] = hull[1];\n      inedges[hull[0]] = 1;\n      if (hull.length === 2) inedges[hull[1]] = 0;\n    }\n  }\n  voronoi(bounds) {\n    return new Voronoi(this, bounds);\n  }\n  *neighbors(i) {\n    const {inedges, hull, _hullIndex, halfedges, triangles, collinear} = this;\n\n    // degenerate case with several collinear points\n    if (collinear) {\n      const l = collinear.indexOf(i);\n      if (l > 0) yield collinear[l - 1];\n      if (l < collinear.length - 1) yield collinear[l + 1];\n      return;\n    }\n\n    const e0 = inedges[i];\n    if (e0 === -1) return; // coincident point\n    let e = e0, p0 = -1;\n    do {\n      yield p0 = triangles[e];\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) return; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        const p = hull[(_hullIndex[i] + 1) % hull.length];\n        if (p !== p0) yield p;\n        return;\n      }\n    } while (e !== e0);\n  }\n  find(x, y, i = 0) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return -1;\n    const i0 = i;\n    let c;\n    while ((c = this._step(i, x, y)) >= 0 && c !== i && c !== i0) i = c;\n    return c;\n  }\n  _step(i, x, y) {\n    const {inedges, hull, _hullIndex, halfedges, triangles, points} = this;\n    if (inedges[i] === -1 || !points.length) return (i + 1) % (points.length >> 1);\n    let c = i;\n    let dc = pow(x - points[i * 2], 2) + pow(y - points[i * 2 + 1], 2);\n    const e0 = inedges[i];\n    let e = e0;\n    do {\n      let t = triangles[e];\n      const dt = pow(x - points[t * 2], 2) + pow(y - points[t * 2 + 1], 2);\n      if (dt < dc) dc = dt, c = t;\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        e = hull[(_hullIndex[i] + 1) % hull.length];\n        if (e !== t) {\n          if (pow(x - points[e * 2], 2) + pow(y - points[e * 2 + 1], 2) < dc) return e;\n        }\n        break;\n      }\n    } while (e !== e0);\n    return c;\n  }\n  render(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points, halfedges, triangles} = this;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = triangles[i] * 2;\n      const tj = triangles[j] * 2;\n      context.moveTo(points[ti], points[ti + 1]);\n      context.lineTo(points[tj], points[tj + 1]);\n    }\n    this.renderHull(context);\n    return buffer && buffer.value();\n  }\n  renderPoints(context, r = 2) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points} = this;\n    for (let i = 0, n = points.length; i < n; i += 2) {\n      const x = points[i], y = points[i + 1];\n      context.moveTo(x + r, y);\n      context.arc(x, y, r, 0, tau);\n    }\n    return buffer && buffer.value();\n  }\n  renderHull(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {hull, points} = this;\n    const h = hull[0] * 2, n = hull.length;\n    context.moveTo(points[h], points[h + 1]);\n    for (let i = 1; i < n; ++i) {\n      const h = 2 * hull[i];\n      context.lineTo(points[h], points[h + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  hullPolygon() {\n    const polygon = new Polygon;\n    this.renderHull(polygon);\n    return polygon.value();\n  }\n  renderTriangle(i, context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points, triangles} = this;\n    const t0 = triangles[i *= 3] * 2;\n    const t1 = triangles[i + 1] * 2;\n    const t2 = triangles[i + 2] * 2;\n    context.moveTo(points[t0], points[t0 + 1]);\n    context.lineTo(points[t1], points[t1 + 1]);\n    context.lineTo(points[t2], points[t2 + 1]);\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *trianglePolygons() {\n    const {triangles} = this;\n    for (let i = 0, n = triangles.length / 3; i < n; ++i) {\n      yield this.trianglePolygon(i);\n    }\n  }\n  trianglePolygon(i) {\n    const polygon = new Polygon;\n    this.renderTriangle(i, polygon);\n    return polygon.value();\n  }\n}\n\nfunction flatArray(points, fx, fy, that) {\n  const n = points.length;\n  const array = new Float64Array(n * 2);\n  for (let i = 0; i < n; ++i) {\n    const p = points[i];\n    array[i * 2] = fx.call(that, p, i, points);\n    array[i * 2 + 1] = fy.call(that, p, i, points);\n  }\n  return array;\n}\n\nfunction* flatIterable(points, fx, fy, that) {\n  let i = 0;\n  for (const p of points) {\n    yield fx.call(that, p, i, points);\n    yield fy.call(that, p, i, points);\n    ++i;\n  }\n}\n","import { VoronoiDomain, VoronoiLayer } from './types'\n\nexport const defaultVoronoiProps = {\n    xDomain: [0, 1] as VoronoiDomain,\n    yDomain: [0, 1] as VoronoiDomain,\n    layers: ['links', 'cells', 'points', 'bounds'] as VoronoiLayer[],\n    enableLinks: false,\n    linkLineWidth: 1,\n    linkLineColor: '#bbbbbb',\n    enableCells: true,\n    cellLineWidth: 2,\n    cellLineColor: '#000000',\n    enablePoints: true,\n    pointSize: 4,\n    pointColor: '#666666',\n    role: 'img',\n}\n","import { Delaunay } from 'd3-delaunay'\n\ntype NumberPropertyNames<T> = {\n    [K in keyof T]: T[K] extends number ? K : never\n}[keyof T]\n\nexport type XYAccessor<Datum> = NumberPropertyNames<Datum> | ((datum: Datum) => number)\n\nconst getAccessor = <Datum>(directive: XYAccessor<Datum>) =>\n    typeof directive === 'function' ? directive : (datum: Datum) => datum[directive]\n\n/**\n * The delaunay generator requires an array\n * where each point is defined as an array\n * of 2 elements: [x: number, y: number].\n *\n * Points represent the raw input data\n * and x/y represent accessors to x & y.\n */\nexport const computeMeshPoints = <Datum>({\n    points,\n    x = 'x' as NumberPropertyNames<Datum>,\n    y = 'y' as NumberPropertyNames<Datum>,\n}: {\n    points: Datum[]\n    x?: XYAccessor<Datum>\n    y?: XYAccessor<Datum>\n}): [number, number][] => {\n    const getX = getAccessor<Datum>(x)\n    const getY = getAccessor<Datum>(y)\n\n    return points.map(point => [getX(point) as number, getY(point) as number])\n}\n\nexport const computeMesh = ({\n    points,\n    width,\n    height,\n    debug,\n}: {\n    points: [number, number][]\n    width: number\n    height: number\n    debug?: boolean\n}) => {\n    const delaunay = Delaunay.from(points)\n    const voronoi = debug ? delaunay.voronoi([0, 0, width, height]) : undefined\n\n    return { delaunay, voronoi }\n}\n","import { useMemo } from 'react'\nimport { scaleLinear } from 'd3-scale'\nimport { Delaunay } from 'd3-delaunay'\nimport { computeMeshPoints, computeMesh, XYAccessor } from './computeMesh'\nimport { VoronoiCommonProps, VoronoiDatum, VoronoiCustomLayerProps } from './types'\n\nexport const useVoronoiMesh = <Datum>({\n    points,\n    x,\n    y,\n    width,\n    height,\n    debug,\n}: {\n    points: Datum[]\n    x?: XYAccessor<Datum>\n    y?: XYAccessor<Datum>\n    width: number\n    height: number\n    debug?: boolean\n}) => {\n    const points2d = useMemo(() => computeMeshPoints<Datum>({ points, x, y }), [points, x, y])\n\n    return useMemo(\n        () => computeMesh({ points: points2d, width, height, debug }),\n        [points2d, width, height, debug]\n    )\n}\n\nexport const useVoronoi = ({\n    data,\n    width,\n    height,\n    xDomain,\n    yDomain,\n}: {\n    data: VoronoiDatum[]\n    width: number\n    height: number\n    xDomain: VoronoiCommonProps['xDomain']\n    yDomain: VoronoiCommonProps['yDomain']\n}) => {\n    const xScale = useMemo(() => scaleLinear().domain(xDomain).range([0, width]), [xDomain, width])\n    const yScale = useMemo(\n        () => scaleLinear().domain(yDomain).range([0, height]),\n        [yDomain, height]\n    )\n\n    const points = useMemo(\n        () =>\n            data.map(d => ({\n                x: xScale(d.x),\n                y: yScale(d.y),\n                data: d,\n            })),\n        [data, xScale, yScale]\n    )\n\n    return useMemo(() => {\n        const delaunay = Delaunay.from(points.map(p => [p.x, p.y]))\n        const voronoi = delaunay.voronoi([0, 0, width, height])\n\n        return {\n            points,\n            delaunay,\n            voronoi,\n        }\n    }, [points, width, height])\n}\n\n/**\n * Memoize the context to pass to custom layers.\n */\nexport const useVoronoiLayerContext = ({\n    points,\n    delaunay,\n    voronoi,\n}: VoronoiCustomLayerProps): VoronoiCustomLayerProps =>\n    useMemo(\n        () => ({\n            points,\n            delaunay,\n            voronoi,\n        }),\n        [points, delaunay, voronoi]\n    )\n","import { useRef, useState, useCallback, useMemo, MouseEvent } from 'react'\nimport { getRelativeCursor } from '@nivo/core'\nimport { useVoronoiMesh } from './hooks'\nimport { XYAccessor } from './computeMesh'\n\ntype MouseHandler<Datum> = (datum: Datum, event: MouseEvent) => void\n\ninterface MeshProps<Datum> {\n    nodes: Datum[]\n    width: number\n    height: number\n    x?: XYAccessor<Datum>\n    y?: XYAccessor<Datum>\n    onMouseEnter?: MouseHandler<Datum>\n    onMouseMove?: MouseHandler<Datum>\n    onMouseLeave?: MouseHandler<Datum>\n    onClick?: MouseHandler<Datum>\n    debug?: boolean\n}\n\nexport const Mesh = <Datum,>({\n    nodes,\n    width,\n    height,\n    x,\n    y,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    debug,\n}: MeshProps<Datum>) => {\n    const elementRef = useRef<SVGGElement>(null)\n    const [currentIndex, setCurrentIndex] = useState<number | null>(null)\n\n    const { delaunay, voronoi } = useVoronoiMesh({\n        points: nodes,\n        x,\n        y,\n        width,\n        height,\n        debug,\n    })\n\n    const voronoiPath = useMemo(() => {\n        if (debug && voronoi) {\n            return voronoi.render()\n        }\n\n        return undefined\n    }, [debug, voronoi])\n\n    const getIndexAndNodeFromEvent = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            if (!elementRef.current) {\n                return [null, null]\n            }\n\n            const [x, y] = getRelativeCursor(elementRef.current, event)\n            const index = delaunay.find(x, y)\n\n            return [index, index !== undefined ? nodes[index] : null] as [number, Datum | null]\n        },\n        [elementRef, delaunay]\n    )\n\n    const handleMouseEnter = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            const [index, node] = getIndexAndNodeFromEvent(event)\n            setCurrentIndex(index)\n            if (node) {\n                onMouseEnter?.(node, event)\n            }\n        },\n        [getIndexAndNodeFromEvent, setCurrentIndex, onMouseEnter]\n    )\n\n    const handleMouseMove = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            const [index, node] = getIndexAndNodeFromEvent(event)\n            setCurrentIndex(index)\n            if (node) {\n                onMouseMove?.(node, event)\n            }\n        },\n        [getIndexAndNodeFromEvent, setCurrentIndex, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            setCurrentIndex(null)\n            if (onMouseLeave) {\n                let previousNode: Datum | undefined = undefined\n                if (currentIndex !== null) {\n                    previousNode = nodes[currentIndex]\n                }\n                previousNode && onMouseLeave(previousNode, event)\n            }\n        },\n        [setCurrentIndex, currentIndex, onMouseLeave, nodes]\n    )\n\n    const handleClick = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            const [index, node] = getIndexAndNodeFromEvent(event)\n            setCurrentIndex(index)\n            if (node) {\n                onClick?.(node, event)\n            }\n        },\n        [getIndexAndNodeFromEvent, setCurrentIndex, onClick]\n    )\n\n    return (\n        <g ref={elementRef}>\n            {debug && voronoi && (\n                <>\n                    <path d={voronoiPath} stroke=\"red\" strokeWidth={1} opacity={0.75} />\n                    {/* highlight current cell */}\n                    {currentIndex !== null && (\n                        <path fill=\"pink\" opacity={0.35} d={voronoi.renderCell(currentIndex)} />\n                    )}\n                </>\n            )}\n            {/* transparent rect to intercept mouse events */}\n            <rect\n                width={width}\n                height={height}\n                fill=\"red\"\n                opacity={0}\n                style={{ cursor: 'auto' }}\n                onMouseEnter={handleMouseEnter}\n                onMouseMove={handleMouseMove}\n                onMouseLeave={handleMouseLeave}\n                onClick={handleClick}\n            />\n        </g>\n    )\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst LinePointTooltip = ({ point }) => {\n    return (\n        <BasicTooltip\n            id={\n                <span>\n                    x: <strong>{point.data.xFormatted}</strong>, y:{' '}\n                    <strong>{point.data.yFormatted}</strong>\n                </span>\n            }\n            enableChip={true}\n            color={point.serieColor}\n        />\n    )\n}\n\nLinePointTooltip.propTypes = {\n    point: PropTypes.object.isRequired,\n}\n\nexport default memo(LinePointTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTheme } from '@nivo/core'\nimport { Chip, TableTooltip } from '@nivo/tooltip'\n\nconst SliceTooltip = ({ slice, axis }) => {\n    const theme = useTheme()\n    const otherAxis = axis === 'x' ? 'y' : 'x'\n\n    return (\n        <TableTooltip\n            rows={slice.points.map(point => [\n                <Chip key=\"chip\" color={point.serieColor} style={theme.tooltip.chip} />,\n                point.serieId,\n                <span key=\"value\" style={theme.tooltip.tableCellValue}>\n                    {point.data[`${otherAxis}Formatted`]}\n                </span>,\n            ])}\n        />\n    )\n}\n\nSliceTooltip.propTypes = {\n    slice: PropTypes.object.isRequired,\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n}\n\nexport default memo(SliceTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { lineCurvePropType, blendModePropType, motionPropTypes, defsPropTypes } from '@nivo/core'\nimport { ordinalColorsPropType } from '@nivo/colors'\nimport { axisPropType } from '@nivo/axes'\nimport { LegendPropShape } from '@nivo/legends'\nimport PointTooltip from './PointTooltip'\nimport SliceTooltip from './SliceTooltip'\n\nconst commonPropTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    x: PropTypes.oneOfType([\n                        PropTypes.number,\n                        PropTypes.string,\n                        PropTypes.instanceOf(Date),\n                    ]),\n                    y: PropTypes.oneOfType([\n                        PropTypes.number,\n                        PropTypes.string,\n                        PropTypes.instanceOf(Date),\n                    ]),\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n\n    xScale: PropTypes.object.isRequired,\n    xFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    yScale: PropTypes.object.isRequired,\n    yFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.oneOf([\n                'grid',\n                'markers',\n                'axes',\n                'areas',\n                'crosshair',\n                'lines',\n                'slices',\n                'points',\n                'mesh',\n                'legends',\n            ]),\n            PropTypes.func,\n        ])\n    ).isRequired,\n\n    curve: lineCurvePropType.isRequired,\n\n    axisTop: axisPropType,\n    axisRight: axisPropType,\n    axisBottom: axisPropType,\n    axisLeft: axisPropType,\n\n    enableGridX: PropTypes.bool.isRequired,\n    enableGridY: PropTypes.bool.isRequired,\n    gridXValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n    gridYValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n\n    enablePoints: PropTypes.bool.isRequired,\n    pointSymbol: PropTypes.func,\n    pointSize: PropTypes.number.isRequired,\n    pointColor: PropTypes.any.isRequired,\n    pointBorderWidth: PropTypes.number.isRequired,\n    pointBorderColor: PropTypes.any.isRequired,\n    enablePointLabel: PropTypes.bool.isRequired,\n    pointLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n\n    markers: PropTypes.arrayOf(\n        PropTypes.shape({\n            axis: PropTypes.oneOf(['x', 'y']).isRequired,\n            value: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.string,\n                PropTypes.instanceOf(Date),\n            ]).isRequired,\n            style: PropTypes.object,\n        })\n    ),\n\n    colors: ordinalColorsPropType.isRequired,\n\n    enableArea: PropTypes.bool.isRequired,\n    areaOpacity: PropTypes.number.isRequired,\n    areaBlendMode: blendModePropType.isRequired,\n    areaBaselineValue: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.instanceOf(Date),\n    ]).isRequired,\n    lineWidth: PropTypes.number.isRequired,\n\n    legends: PropTypes.arrayOf(PropTypes.shape(LegendPropShape)).isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n    debugMesh: PropTypes.bool.isRequired,\n\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n    enableSlices: PropTypes.oneOf(['x', 'y', false]).isRequired,\n    debugSlices: PropTypes.bool.isRequired,\n    sliceTooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n    enableCrosshair: PropTypes.bool.isRequired,\n    crosshairType: PropTypes.string.isRequired,\n}\n\nexport const LinePropTypes = {\n    ...commonPropTypes,\n    enablePointLabel: PropTypes.bool.isRequired,\n    role: PropTypes.string.isRequired,\n    useMesh: PropTypes.bool.isRequired,\n    ...motionPropTypes,\n    ...defsPropTypes,\n}\n\nexport const LineCanvasPropTypes = {\n    pixelRatio: PropTypes.number.isRequired,\n    ...commonPropTypes,\n}\n\nconst commonDefaultProps = {\n    curve: 'linear',\n\n    xScale: {\n        type: 'point',\n    },\n    yScale: {\n        type: 'linear',\n        min: 0,\n        max: 'auto',\n    },\n\n    layers: [\n        'grid',\n        'markers',\n        'axes',\n        'areas',\n        'crosshair',\n        'lines',\n        'points',\n        'slices',\n        'mesh',\n        'legends',\n    ],\n    axisBottom: {},\n    axisLeft: {},\n    enableGridX: true,\n    enableGridY: true,\n\n    enablePoints: true,\n    pointSize: 6,\n    pointColor: { from: 'color' },\n    pointBorderWidth: 0,\n    pointBorderColor: { theme: 'background' },\n    enablePointLabel: false,\n    pointLabel: 'yFormatted',\n\n    colors: { scheme: 'nivo' },\n    enableArea: false,\n    areaBaselineValue: 0,\n    areaOpacity: 0.2,\n    areaBlendMode: 'normal',\n    lineWidth: 2,\n\n    legends: [],\n\n    isInteractive: true,\n    tooltip: PointTooltip,\n    enableSlices: false,\n    debugSlices: false,\n    sliceTooltip: SliceTooltip,\n    debugMesh: false,\n    enableCrosshair: true,\n    crosshairType: 'bottom-left',\n}\n\nexport const LineDefaultProps = {\n    ...commonDefaultProps,\n    enablePointLabel: false,\n    useMesh: false,\n    animate: true,\n    motionConfig: 'gentle',\n    defs: [],\n    fill: [],\n    role: 'img',\n}\n\nexport const LineCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1,\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useCallback, useMemo, useState } from 'react'\nimport { area, line } from 'd3-shape'\nimport { curveFromProp, useTheme, useValueFormatter } from '@nivo/core'\nimport { useOrdinalColorScale, useInheritedColor } from '@nivo/colors'\nimport { computeXYScalesForSeries } from '@nivo/scales'\nimport { LineDefaultProps } from './props'\n\nexport const useLineGenerator = ({ curve }) => {\n    return useMemo(\n        () =>\n            line()\n                .defined(d => d.x !== null && d.y !== null)\n                .x(d => d.x)\n                .y(d => d.y)\n                .curve(curveFromProp(curve)),\n        [curve]\n    )\n}\n\nexport const useAreaGenerator = ({ curve, yScale, areaBaselineValue }) => {\n    return useMemo(() => {\n        return area()\n            .defined(d => d.x !== null && d.y !== null)\n            .x(d => d.x)\n            .y1(d => d.y)\n            .curve(curveFromProp(curve))\n            .y0(yScale(areaBaselineValue))\n    }, [curve, yScale, areaBaselineValue])\n}\n\nconst usePoints = ({ series, getPointColor, getPointBorderColor, formatX, formatY }) => {\n    return useMemo(() => {\n        return series.reduce((acc, serie) => {\n            return [\n                ...acc,\n                ...serie.data\n                    .filter(datum => datum.position.x !== null && datum.position.y !== null)\n                    .map((datum, i) => {\n                        const point = {\n                            id: `${serie.id}.${i}`,\n                            index: acc.length + i,\n                            serieId: serie.id,\n                            serieColor: serie.color,\n                            x: datum.position.x,\n                            y: datum.position.y,\n                        }\n                        point.color = getPointColor(serie)\n                        point.borderColor = getPointBorderColor(point)\n                        point.data = {\n                            ...datum.data,\n                            xFormatted: formatX(datum.data.x),\n                            yFormatted: formatY(datum.data.y),\n                        }\n\n                        return point\n                    }),\n            ]\n        }, [])\n    }, [series, getPointColor, getPointBorderColor, formatX, formatY])\n}\n\nexport const useSlices = ({ enableSlices, points, width, height }) => {\n    return useMemo(() => {\n        if (enableSlices === false) return []\n\n        if (enableSlices === 'x') {\n            const map = new Map()\n            points.forEach(point => {\n                if (point.data.x === null || point.data.y === null) return\n                if (!map.has(point.x)) map.set(point.x, [point])\n                else map.get(point.x).push(point)\n            })\n            return Array.from(map.entries())\n                .sort((a, b) => a[0] - b[0])\n                .map(([x, slicePoints], i, slices) => {\n                    const prevSlice = slices[i - 1]\n                    const nextSlice = slices[i + 1]\n\n                    let x0\n                    if (!prevSlice) x0 = x\n                    else x0 = x - (x - prevSlice[0]) / 2\n\n                    let sliceWidth\n                    if (!nextSlice) sliceWidth = width - x0\n                    else sliceWidth = x - x0 + (nextSlice[0] - x) / 2\n\n                    return {\n                        id: x,\n                        x0,\n                        x,\n                        y0: 0,\n                        y: 0,\n                        width: sliceWidth,\n                        height,\n                        points: slicePoints.reverse(),\n                    }\n                })\n        } else if (enableSlices === 'y') {\n            const map = new Map()\n            points.forEach(point => {\n                if (point.data.x === null || point.data.y === null) return\n                if (!map.has(point.y)) map.set(point.y, [point])\n                else map.get(point.y).push(point)\n            })\n            return Array.from(map.entries())\n                .sort((a, b) => a[0] - b[0])\n                .map(([y, slicePoints], i, slices) => {\n                    const prevSlice = slices[i - 1]\n                    const nextSlice = slices[i + 1]\n\n                    let y0\n                    if (!prevSlice) y0 = y\n                    else y0 = y - (y - prevSlice[0]) / 2\n\n                    let sliceHeight\n                    if (!nextSlice) sliceHeight = height - y0\n                    else sliceHeight = y - y0 + (nextSlice[0] - y) / 2\n\n                    return {\n                        id: y,\n                        x0: 0,\n                        x: 0,\n                        y0,\n                        y,\n                        width,\n                        height: sliceHeight,\n                        points: slicePoints.reverse(),\n                    }\n                })\n        }\n    }, [enableSlices, points])\n}\n\nexport const useLine = ({\n    data,\n    xScale: xScaleSpec = LineDefaultProps.xScale,\n    xFormat,\n    yScale: yScaleSpec = LineDefaultProps.yScale,\n    yFormat,\n    width,\n    height,\n    colors = LineDefaultProps.colors,\n    curve = LineDefaultProps.curve,\n    areaBaselineValue = LineDefaultProps.areaBaselineValue,\n    pointColor = LineDefaultProps.pointColor,\n    pointBorderColor = LineDefaultProps.pointBorderColor,\n    enableSlices = LineDefaultProps.enableSlicesTooltip,\n}) => {\n    const formatX = useValueFormatter(xFormat)\n    const formatY = useValueFormatter(yFormat)\n    const getColor = useOrdinalColorScale(colors, 'id')\n    const theme = useTheme()\n    const getPointColor = useInheritedColor(pointColor, theme)\n    const getPointBorderColor = useInheritedColor(pointBorderColor, theme)\n    const [hiddenIds, setHiddenIds] = useState([])\n\n    const {\n        xScale,\n        yScale,\n        series: rawSeries,\n    } = useMemo(\n        () =>\n            computeXYScalesForSeries(\n                data.filter(item => hiddenIds.indexOf(item.id) === -1),\n                xScaleSpec,\n                yScaleSpec,\n                width,\n                height\n            ),\n        [data, hiddenIds, xScaleSpec, yScaleSpec, width, height]\n    )\n\n    const { legendData, series } = useMemo(() => {\n        const dataWithColor = data.map(line => ({\n            id: line.id,\n            label: line.id,\n            color: getColor(line),\n        }))\n        const series = dataWithColor\n            .map(datum => ({\n                ...rawSeries.find(serie => serie.id === datum.id),\n                color: datum.color,\n            }))\n            .filter(item => Boolean(item.id))\n        const legendData = dataWithColor\n            .map(item => ({ ...item, hidden: !series.find(serie => serie.id === item.id) }))\n            .reverse()\n\n        return { legendData, series }\n    }, [data, rawSeries, getColor])\n\n    const toggleSerie = useCallback(id => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const points = usePoints({\n        series,\n        getPointColor,\n        getPointBorderColor,\n        formatX,\n        formatY,\n    })\n\n    const slices = useSlices({\n        enableSlices,\n        points,\n        width,\n        height,\n    })\n\n    const lineGenerator = useLineGenerator({ curve })\n    const areaGenerator = useAreaGenerator({\n        curve,\n        yScale,\n        areaBaselineValue,\n    })\n\n    return {\n        legendData,\n        toggleSerie,\n        lineGenerator,\n        areaGenerator,\n        getColor,\n        series,\n        xScale,\n        yScale,\n        slices,\n        points,\n    }\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport line from \"./line.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useAnimatedPath, useMotionConfig, blendModePropType } from '@nivo/core'\n\nconst AreaPath = ({ areaBlendMode, areaOpacity, color, fill, path }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedPath = useAnimatedPath(path)\n    const animatedProps = useSpring({\n        color,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.path\n            d={animatedPath}\n            fill={fill ? fill : animatedProps.color}\n            fillOpacity={areaOpacity}\n            strokeWidth={0}\n            style={{\n                mixBlendMode: areaBlendMode,\n            }}\n        />\n    )\n}\n\nAreaPath.propTypes = {\n    areaBlendMode: blendModePropType.isRequired,\n    areaOpacity: PropTypes.number.isRequired,\n    color: PropTypes.string,\n    fill: PropTypes.string,\n    path: PropTypes.string.isRequired,\n}\n\nconst Areas = ({ areaGenerator, areaOpacity, areaBlendMode, lines }) => {\n    const computedLines = lines.slice(0).reverse()\n\n    return (\n        <g>\n            {computedLines.map(line => (\n                <AreaPath\n                    key={line.id}\n                    path={areaGenerator(line.data.map(d => d.position))}\n                    {...{ areaOpacity, areaBlendMode, ...line }}\n                />\n            ))}\n        </g>\n    )\n}\n\nAreas.propTypes = {\n    areaGenerator: PropTypes.func.isRequired,\n    areaOpacity: PropTypes.number.isRequired,\n    areaBlendMode: blendModePropType.isRequired,\n    lines: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n\nexport default memo(Areas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { animated } from '@react-spring/web'\nimport { useAnimatedPath } from '@nivo/core'\n\nconst LinesItem = ({ lineGenerator, points, color, thickness }) => {\n    const path = useMemo(() => lineGenerator(points), [lineGenerator, points])\n    const animatedPath = useAnimatedPath(path)\n\n    return <animated.path d={animatedPath} fill=\"none\" strokeWidth={thickness} stroke={color} />\n}\n\nLinesItem.propTypes = {\n    points: PropTypes.arrayOf(\n        PropTypes.shape({\n            x: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            y: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        })\n    ),\n    lineGenerator: PropTypes.func.isRequired,\n    color: PropTypes.string.isRequired,\n    thickness: PropTypes.number.isRequired,\n}\n\nexport default memo(LinesItem)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport LinesItem from './LinesItem'\n\nconst Lines = ({ lines, lineGenerator, lineWidth }) => {\n    return lines\n        .slice(0)\n        .reverse()\n        .map(({ id, data, color }) => (\n            <LinesItem\n                key={id}\n                id={id}\n                points={data.map(d => d.position)}\n                lineGenerator={lineGenerator}\n                color={color}\n                thickness={lineWidth}\n            />\n        ))\n}\n\nLines.propTypes = {\n    lines: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            color: PropTypes.string.isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    data: PropTypes.shape({\n                        x: PropTypes.oneOfType([\n                            PropTypes.string,\n                            PropTypes.number,\n                            PropTypes.instanceOf(Date),\n                        ]),\n                        y: PropTypes.oneOfType([\n                            PropTypes.string,\n                            PropTypes.number,\n                            PropTypes.instanceOf(Date),\n                        ]),\n                    }).isRequired,\n                    position: PropTypes.shape({\n                        x: PropTypes.number,\n                        y: PropTypes.number,\n                    }).isRequired,\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n    lineWidth: PropTypes.number.isRequired,\n    lineGenerator: PropTypes.func.isRequired,\n}\n\nexport default memo(Lines)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, memo, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTooltip } from '@nivo/tooltip'\n\nconst SlicesItem = ({\n    slice,\n    axis,\n    debug,\n    tooltip,\n    isCurrent,\n    setCurrent,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n}) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        event => {\n            showTooltipFromEvent(createElement(tooltip, { slice, axis }), event, 'right')\n            setCurrent(slice)\n            onMouseEnter && onMouseEnter(slice, event)\n        },\n        [showTooltipFromEvent, tooltip, slice, onMouseEnter]\n    )\n\n    const handleMouseMove = useCallback(\n        event => {\n            showTooltipFromEvent(createElement(tooltip, { slice, axis }), event, 'right')\n            onMouseMove && onMouseMove(slice, event)\n        },\n        [showTooltipFromEvent, tooltip, slice, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(\n        event => {\n            hideTooltip()\n            setCurrent(null)\n            onMouseLeave && onMouseLeave(slice, event)\n        },\n        [hideTooltip, slice, onMouseLeave]\n    )\n\n    const handleClick = useCallback(\n        event => {\n            onClick && onClick(slice, event)\n        },\n        [slice, onClick]\n    )\n\n    return (\n        <rect\n            x={slice.x0}\n            y={slice.y0}\n            width={slice.width}\n            height={slice.height}\n            stroke=\"red\"\n            strokeWidth={debug ? 1 : 0}\n            strokeOpacity={0.75}\n            fill=\"red\"\n            fillOpacity={isCurrent && debug ? 0.35 : 0}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n            onClick={handleClick}\n            data-testid={`slice-${slice.id}`}\n        />\n    )\n}\n\nSlicesItem.propTypes = {\n    slice: PropTypes.object.isRequired,\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n    debug: PropTypes.bool.isRequired,\n    height: PropTypes.number.isRequired,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    isCurrent: PropTypes.bool.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n}\n\nexport default memo(SlicesItem)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport SlicesItem from './SlicesItem'\n\nconst Slices = ({\n    slices,\n    axis,\n    debug,\n    height,\n    tooltip,\n    current,\n    setCurrent,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n}) => {\n    return slices.map(slice => (\n        <SlicesItem\n            key={slice.id}\n            slice={slice}\n            axis={axis}\n            debug={debug}\n            height={height}\n            tooltip={tooltip}\n            setCurrent={setCurrent}\n            isCurrent={current !== null && current.id === slice.id}\n            onMouseEnter={onMouseEnter}\n            onMouseMove={onMouseMove}\n            onMouseLeave={onMouseLeave}\n            onClick={onClick}\n        />\n    ))\n}\n\nSlices.propTypes = {\n    slices: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.string,\n                PropTypes.instanceOf(Date),\n            ]).isRequired,\n            x: PropTypes.number.isRequired,\n            y: PropTypes.number.isRequired,\n            points: PropTypes.arrayOf(PropTypes.object).isRequired,\n        })\n    ).isRequired,\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n    debug: PropTypes.bool.isRequired,\n    height: PropTypes.number.isRequired,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    current: PropTypes.object,\n    setCurrent: PropTypes.func.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n}\n\nexport default memo(Slices)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { getLabelGenerator, DotsItem, useTheme } from '@nivo/core'\n\nconst Points = ({ points, symbol, size, borderWidth, enableLabel, label, labelYOffset }) => {\n    const theme = useTheme()\n    const getLabel = getLabelGenerator(label)\n\n    /**\n     * We reverse the `points` array so that points from the lower lines in stacked lines\n     * graph are drawn on top. See https://github.com/plouc/nivo/issues/1051.\n     */\n    const mappedPoints = points\n        .slice(0)\n        .reverse()\n        .map(point => {\n            const mappedPoint = {\n                id: point.id,\n                x: point.x,\n                y: point.y,\n                datum: point.data,\n                fill: point.color,\n                stroke: point.borderColor,\n                label: enableLabel ? getLabel(point.data) : null,\n            }\n\n            return mappedPoint\n        })\n\n    return (\n        <g>\n            {mappedPoints.map(point => (\n                <DotsItem\n                    key={point.id}\n                    x={point.x}\n                    y={point.y}\n                    datum={point.datum}\n                    symbol={symbol}\n                    size={size}\n                    color={point.fill}\n                    borderWidth={borderWidth}\n                    borderColor={point.stroke}\n                    label={point.label}\n                    labelYOffset={labelYOffset}\n                    theme={theme}\n                />\n            ))}\n        </g>\n    )\n}\n\nPoints.propTypes = {\n    points: PropTypes.arrayOf(PropTypes.object),\n    symbol: PropTypes.func,\n    size: PropTypes.number.isRequired,\n    color: PropTypes.func.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.func.isRequired,\n    enableLabel: PropTypes.bool.isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    labelYOffset: PropTypes.number,\n}\n\nexport default memo(Points)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, memo, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTooltip } from '@nivo/tooltip'\nimport { Mesh as BaseMesh } from '@nivo/voronoi'\n\nconst Mesh = ({\n    points,\n    width,\n    height,\n    margin,\n    setCurrent,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n    debug,\n}) => {\n    const { showTooltipAt, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        (point, event) => {\n            showTooltipAt(\n                createElement(tooltip, { point }),\n                [point.x + margin.left, point.y + margin.top],\n                'top'\n            )\n            setCurrent(point)\n            onMouseEnter && onMouseEnter(point, event)\n        },\n        [setCurrent, showTooltipAt, tooltip, onMouseEnter, margin]\n    )\n\n    const handleMouseMove = useCallback(\n        (point, event) => {\n            showTooltipAt(\n                createElement(tooltip, { point }),\n                [point.x + margin.left, point.y + margin.top],\n                'top'\n            )\n            setCurrent(point)\n            onMouseMove && onMouseMove(point, event)\n        },\n        [setCurrent, showTooltipAt, tooltip, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(\n        (point, event) => {\n            hideTooltip()\n            setCurrent(null)\n            onMouseLeave && onMouseLeave(point, event)\n        },\n        [hideTooltip, setCurrent, onMouseLeave]\n    )\n\n    const handleClick = useCallback(\n        (point, event) => {\n            onClick && onClick(point, event)\n        },\n        [onClick]\n    )\n\n    return (\n        <BaseMesh\n            nodes={points}\n            width={width}\n            height={height}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n            onClick={handleClick}\n            debug={debug}\n        />\n    )\n}\n\nMesh.propTypes = {\n    points: PropTypes.arrayOf(PropTypes.object).isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    margin: PropTypes.object.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    debug: PropTypes.bool.isRequired,\n}\n\nexport default memo(Mesh)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { Fragment, useState } from 'react'\nimport {\n    bindDefs,\n    withContainer,\n    useDimensions,\n    useTheme,\n    SvgWrapper,\n    CartesianMarkers,\n} from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { Axes, Grid } from '@nivo/axes'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { Crosshair } from '@nivo/tooltip'\nimport { useLine } from './hooks'\nimport { LinePropTypes, LineDefaultProps } from './props'\nimport Areas from './Areas'\nimport Lines from './Lines'\nimport Slices from './Slices'\nimport Points from './Points'\nimport Mesh from './Mesh'\n\nconst Line = props => {\n    const {\n        data,\n        xScale: xScaleSpec,\n        xFormat,\n        yScale: yScaleSpec,\n        yFormat,\n        layers,\n        curve,\n        areaBaselineValue,\n\n        colors,\n\n        margin: partialMargin,\n        width,\n        height,\n\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n        enableGridX,\n        enableGridY,\n        gridXValues,\n        gridYValues,\n\n        lineWidth,\n        enableArea,\n        areaOpacity,\n        areaBlendMode,\n\n        enablePoints,\n        pointSymbol,\n        pointSize,\n        pointColor,\n        pointBorderWidth,\n        pointBorderColor,\n        enablePointLabel,\n        pointLabel,\n        pointLabelYOffset,\n\n        defs,\n        fill,\n\n        markers,\n\n        legends,\n\n        isInteractive,\n\n        useMesh,\n        debugMesh,\n\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n\n        tooltip,\n\n        enableSlices,\n        debugSlices,\n        sliceTooltip,\n\n        enableCrosshair,\n        crosshairType,\n\n        role,\n    } = props\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        legendData,\n        toggleSerie,\n        lineGenerator,\n        areaGenerator,\n        series,\n        xScale,\n        yScale,\n        slices,\n        points,\n    } = useLine({\n        data,\n        xScale: xScaleSpec,\n        xFormat,\n        yScale: yScaleSpec,\n        yFormat,\n        width: innerWidth,\n        height: innerHeight,\n        colors,\n        curve,\n        areaBaselineValue,\n        pointColor,\n        pointBorderColor,\n        enableSlices,\n    })\n\n    const theme = useTheme()\n    const getPointColor = useInheritedColor(pointColor, theme)\n    const getPointBorderColor = useInheritedColor(pointBorderColor, theme)\n\n    const [currentPoint, setCurrentPoint] = useState(null)\n    const [currentSlice, setCurrentSlice] = useState(null)\n\n    const layerById = {\n        grid: (\n            <Grid\n                key=\"grid\"\n                theme={theme}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? xScale : null}\n                yScale={enableGridY ? yScale : null}\n                xValues={gridXValues}\n                yValues={gridYValues}\n            />\n        ),\n        markers: (\n            <CartesianMarkers\n                key=\"markers\"\n                markers={markers}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={xScale}\n                yScale={yScale}\n                theme={theme}\n            />\n        ),\n        axes: (\n            <Axes\n                key=\"axes\"\n                xScale={xScale}\n                yScale={yScale}\n                width={innerWidth}\n                height={innerHeight}\n                theme={theme}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        ),\n        areas: null,\n        lines: (\n            <Lines key=\"lines\" lines={series} lineGenerator={lineGenerator} lineWidth={lineWidth} />\n        ),\n        slices: null,\n        points: null,\n        crosshair: null,\n        mesh: null,\n        legends: legends.map((legend, i) => (\n            <BoxLegendSvg\n                key={`legend.${i}`}\n                {...legend}\n                containerWidth={innerWidth}\n                containerHeight={innerHeight}\n                data={legend.data || legendData}\n                theme={theme}\n                toggleSerie={legend.toggleSerie ? toggleSerie : undefined}\n            />\n        )),\n    }\n\n    const boundDefs = bindDefs(defs, series, fill)\n\n    if (enableArea) {\n        layerById.areas = (\n            <Areas\n                key=\"areas\"\n                areaGenerator={areaGenerator}\n                areaOpacity={areaOpacity}\n                areaBlendMode={areaBlendMode}\n                lines={series}\n            />\n        )\n    }\n\n    if (isInteractive && enableSlices !== false) {\n        layerById.slices = (\n            <Slices\n                key=\"slices\"\n                slices={slices}\n                axis={enableSlices}\n                debug={debugSlices}\n                height={innerHeight}\n                tooltip={sliceTooltip}\n                current={currentSlice}\n                setCurrent={setCurrentSlice}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                onClick={onClick}\n            />\n        )\n    }\n\n    if (enablePoints) {\n        layerById.points = (\n            <Points\n                key=\"points\"\n                points={points}\n                symbol={pointSymbol}\n                size={pointSize}\n                color={getPointColor}\n                borderWidth={pointBorderWidth}\n                borderColor={getPointBorderColor}\n                enableLabel={enablePointLabel}\n                label={pointLabel}\n                labelYOffset={pointLabelYOffset}\n            />\n        )\n    }\n\n    if (isInteractive && enableCrosshair) {\n        if (currentPoint !== null) {\n            layerById.crosshair = (\n                <Crosshair\n                    key=\"crosshair\"\n                    width={innerWidth}\n                    height={innerHeight}\n                    x={currentPoint.x}\n                    y={currentPoint.y}\n                    type={crosshairType}\n                />\n            )\n        }\n        if (currentSlice !== null) {\n            layerById.crosshair = (\n                <Crosshair\n                    key=\"crosshair\"\n                    width={innerWidth}\n                    height={innerHeight}\n                    x={currentSlice.x}\n                    y={currentSlice.y}\n                    type={enableSlices}\n                />\n            )\n        }\n    }\n\n    if (isInteractive && useMesh && enableSlices === false) {\n        layerById.mesh = (\n            <Mesh\n                key=\"mesh\"\n                points={points}\n                width={innerWidth}\n                height={innerHeight}\n                margin={margin}\n                current={currentPoint}\n                setCurrent={setCurrentPoint}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                onClick={onClick}\n                tooltip={tooltip}\n                debug={debugMesh}\n            />\n        )\n    }\n\n    return (\n        <SvgWrapper\n            defs={boundDefs}\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return (\n                        <Fragment key={i}>\n                            {layer({\n                                ...props,\n                                innerWidth,\n                                innerHeight,\n                                series,\n                                slices,\n                                points,\n                                xScale,\n                                yScale,\n                                lineGenerator,\n                                areaGenerator,\n                                currentPoint,\n                                setCurrentPoint,\n                                currentSlice,\n                                setCurrentSlice,\n                            })}\n                        </Fragment>\n                    )\n                }\n\n                return layerById[layer]\n            })}\n        </SvgWrapper>\n    )\n}\n\nLine.propTypes = LinePropTypes\nLine.defaultProps = LineDefaultProps\n\nexport default withContainer(Line)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Line from './Line'\n\nconst ResponsiveLine = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Line width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveLine\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, useRef, useEffect, useState, useCallback, forwardRef } from 'react'\nimport {\n    withContainer,\n    useDimensions,\n    useTheme,\n    getRelativeCursor,\n    isCursorInRect,\n} from '@nivo/core'\nimport { renderAxesToCanvas, renderGridLinesToCanvas } from '@nivo/axes'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { useVoronoiMesh, renderVoronoiToCanvas, renderVoronoiCellToCanvas } from '@nivo/voronoi'\nimport { LineCanvasPropTypes, LineCanvasDefaultProps } from './props'\nimport { useLine } from './hooks'\n\nconst LineCanvas = ({\n    width,\n    height,\n    margin: partialMargin,\n    pixelRatio,\n\n    data,\n    xScale: xScaleSpec,\n    xFormat,\n    yScale: yScaleSpec,\n    yFormat,\n    curve,\n\n    layers,\n\n    colors,\n    lineWidth,\n\n    enableArea,\n    areaBaselineValue,\n    areaOpacity,\n\n    enablePoints,\n    pointSize,\n    pointColor,\n    pointBorderWidth,\n    pointBorderColor,\n\n    enableGridX,\n    gridXValues,\n    enableGridY,\n    gridYValues,\n    axisTop,\n    axisRight,\n    axisBottom,\n    axisLeft,\n\n    legends,\n\n    isInteractive,\n    debugMesh,\n    //onMouseEnter,\n    //onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n\n    canvasRef,\n}) => {\n    const canvasEl = useRef(null)\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n    const theme = useTheme()\n    const [currentPoint, setCurrentPoint] = useState(null)\n\n    const { lineGenerator, areaGenerator, series, xScale, yScale, points } = useLine({\n        data,\n        xScale: xScaleSpec,\n        xFormat,\n        yScale: yScaleSpec,\n        yFormat,\n        width: innerWidth,\n        height: innerHeight,\n        colors,\n        curve,\n        areaBaselineValue,\n        pointColor,\n        pointBorderColor,\n    })\n\n    const { delaunay, voronoi } = useVoronoiMesh({\n        points,\n        width: innerWidth,\n        height: innerHeight,\n        debug: debugMesh,\n    })\n\n    useEffect(() => {\n        if (canvasRef) {\n            canvasRef.current = canvasEl.current\n        }\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        layers.forEach(layer => {\n            if (typeof layer === 'function') {\n                layer({\n                    ctx,\n                    innerWidth,\n                    innerHeight,\n                    series,\n                    points,\n                    xScale,\n                    yScale,\n                    lineWidth,\n                    lineGenerator,\n                    areaGenerator,\n                    currentPoint,\n                    setCurrentPoint,\n                })\n            }\n\n            if (layer === 'grid' && theme.grid.line.strokeWidth > 0) {\n                ctx.lineWidth = theme.grid.line.strokeWidth\n                ctx.strokeStyle = theme.grid.line.stroke\n\n                enableGridX &&\n                    renderGridLinesToCanvas(ctx, {\n                        width: innerWidth,\n                        height: innerHeight,\n                        scale: xScale,\n                        axis: 'x',\n                        values: gridXValues,\n                    })\n\n                enableGridY &&\n                    renderGridLinesToCanvas(ctx, {\n                        width: innerWidth,\n                        height: innerHeight,\n                        scale: yScale,\n                        axis: 'y',\n                        values: gridYValues,\n                    })\n            }\n\n            if (layer === 'axes') {\n                renderAxesToCanvas(ctx, {\n                    xScale,\n                    yScale,\n                    width: innerWidth,\n                    height: innerHeight,\n                    top: axisTop,\n                    right: axisRight,\n                    bottom: axisBottom,\n                    left: axisLeft,\n                    theme,\n                })\n            }\n\n            if (layer === 'areas' && enableArea === true) {\n                ctx.save()\n                ctx.globalAlpha = areaOpacity\n\n                areaGenerator.context(ctx)\n                series.forEach(serie => {\n                    ctx.fillStyle = serie.color\n                    ctx.beginPath()\n                    areaGenerator(serie.data.map(d => d.position))\n                    ctx.fill()\n                })\n\n                ctx.restore()\n            }\n\n            if (layer === 'lines') {\n                lineGenerator.context(ctx)\n                series.forEach(serie => {\n                    ctx.strokeStyle = serie.color\n                    ctx.lineWidth = lineWidth\n                    ctx.beginPath()\n                    lineGenerator(serie.data.map(d => d.position))\n                    ctx.stroke()\n                })\n            }\n\n            if (layer === 'points' && enablePoints === true && pointSize > 0) {\n                points.forEach(point => {\n                    ctx.fillStyle = point.color\n                    ctx.beginPath()\n                    ctx.arc(point.x, point.y, pointSize / 2, 0, 2 * Math.PI)\n                    ctx.fill()\n\n                    if (pointBorderWidth > 0) {\n                        ctx.strokeStyle = point.borderColor\n                        ctx.lineWidth = pointBorderWidth\n                        ctx.stroke()\n                    }\n                })\n            }\n\n            if (layer === 'mesh' && debugMesh === true) {\n                renderVoronoiToCanvas(ctx, voronoi)\n                if (currentPoint) {\n                    renderVoronoiCellToCanvas(ctx, voronoi, currentPoint.index)\n                }\n            }\n\n            if (layer === 'legends') {\n                const legendData = series\n                    .map(serie => ({\n                        id: serie.id,\n                        label: serie.id,\n                        color: serie.color,\n                    }))\n                    .reverse()\n\n                legends.forEach(legend => {\n                    renderLegendToCanvas(ctx, {\n                        ...legend,\n                        data: legend.data || legendData,\n                        containerWidth: innerWidth,\n                        containerHeight: innerHeight,\n                        theme,\n                    })\n                })\n            }\n        })\n    }, [\n        canvasEl,\n        outerWidth,\n        outerHeight,\n        layers,\n        theme,\n        lineGenerator,\n        series,\n        xScale,\n        yScale,\n        enableGridX,\n        gridXValues,\n        enableGridY,\n        gridYValues,\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n        legends,\n        points,\n        enablePoints,\n        pointSize,\n        currentPoint,\n    ])\n\n    const getPointFromMouseEvent = useCallback(\n        event => {\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            if (!isCursorInRect(margin.left, margin.top, innerWidth, innerHeight, x, y)) return null\n\n            const pointIndex = delaunay.find(x - margin.left, y - margin.top)\n            return points[pointIndex]\n        },\n        [canvasEl, margin, innerWidth, innerHeight, delaunay]\n    )\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = useCallback(\n        event => {\n            const point = getPointFromMouseEvent(event)\n            setCurrentPoint(point)\n\n            if (point) {\n                showTooltipFromEvent(createElement(tooltip, { point }), event)\n            } else {\n                hideTooltip()\n            }\n        },\n        [getPointFromMouseEvent, setCurrentPoint, showTooltipFromEvent, hideTooltip, tooltip]\n    )\n\n    const handleMouseLeave = useCallback(\n        event => {\n            hideTooltip()\n            setCurrentPoint(null)\n            currentPoint && onMouseLeave && onMouseLeave(currentPoint, event)\n        },\n        [hideTooltip, setCurrentPoint, onMouseLeave]\n    )\n\n    const handleClick = useCallback(\n        event => {\n            if (onClick) {\n                const point = getPointFromMouseEvent(event)\n                point && onClick(point, event)\n            }\n        },\n        [getPointFromMouseEvent, onClick]\n    )\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nLineCanvas.propTypes = LineCanvasPropTypes\nLineCanvas.defaultProps = LineCanvasDefaultProps\n\nconst LineCanvasWithContainer = withContainer(LineCanvas)\n\nexport default forwardRef((props, ref) => <LineCanvasWithContainer {...props} canvasRef={ref} />)\n","import { Delaunay, Voronoi } from 'd3-delaunay'\n\nexport const renderVoronoiToCanvas = (\n    ctx: CanvasRenderingContext2D,\n    voronoi: Voronoi<Delaunay.Point>\n) => {\n    ctx.save()\n\n    ctx.globalAlpha = 0.75\n    ctx.beginPath()\n    voronoi.render(ctx)\n    ctx.strokeStyle = 'red'\n    ctx.lineWidth = 1\n    ctx.stroke()\n\n    ctx.restore()\n}\n\nexport const renderVoronoiCellToCanvas = (\n    ctx: CanvasRenderingContext2D,\n    voronoi: Voronoi<Delaunay.Point>,\n    index: number\n) => {\n    ctx.save()\n\n    ctx.globalAlpha = 0.35\n    ctx.beginPath()\n    voronoi.renderCell(index, ctx)\n    ctx.fillStyle = 'red'\n    ctx.fill()\n\n    ctx.restore()\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { forwardRef } from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport LineCanvas from './LineCanvas'\n\nconst ResponsiveLineCanvas = (props, ref) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <LineCanvas width={width} height={height} {...props} ref={ref} />}\n    </ResponsiveWrapper>\n)\n\nexport default forwardRef(ResponsiveLineCanvas)\n"],"names":["pi","Math","PI","tau","epsilon","tauEpsilon","Path","this","_x0","_y0","_x1","_y1","_","path","prototype","constructor","moveTo","x","y","closePath","lineTo","quadraticCurveTo","x1","y1","bezierCurveTo","x2","y2","arcTo","r","x0","y0","x21","y21","x01","y01","l01_2","Error","abs","x20","y20","l21_2","l20_2","l21","sqrt","l01","l","tan","acos","t01","t21","arc","a0","a1","ccw","dx","cos","dy","sin","cw","da","rect","w","h","toString","p","pointX","pointY","defined","constant","context","curve","curveLinear","output","line","data","i","d","buffer","n","length","defined0","lineStart","lineEnd","point","arguments","EPSILON","pow","EDGE_STACK","Uint32Array","Delaunator","coords","_classCallCheck","maxTriangles","max","_triangles","_halfedges","Int32Array","_hashSize","ceil","_hullPrev","_hullNext","_hullTri","_hullHash","fill","_ids","_dists","Float64Array","update","_createClass","key","value","hullPrev","hullNext","hullTri","hullHash","minX","Infinity","minY","maxX","maxY","i0","i1","i2","cx","cy","minDist","dist","i0x","i0y","i1x","i1y","minRadius","circumradius","i2x","i2y","quicksort","hull","j","d0","id","subarray","triangles","halfedges","orient","center","ax","ay","bx","by","ex","ey","bl","cl","circumcenter","_cx","_cy","_hullStart","hullSize","_hashKey","trianglesLen","_addTriangle","xp","yp","k","start","e","q","t","_legalize","floor","pseudoAngle","a","ar","b","b0","al","p0","pr","pl","p1","inCircle","hbl","_link","br","c","points","getX","undefined","defaultGetX","getY","defaultGetY","orientIfSure","px","py","rx","ry","qx","qy","fx","fy","bp","cp","ids","dists","left","right","temp","tempDist","swap","arr","tmp","concat","Polygon","push","slice","Voronoi","delaunay","_ref","_ref2","_slicedToArray","xmin","ymin","xmax","ymax","_circumcenters","vectors","_init","_this$delaunay","circumcenters","t1","t2","t3","x3","y3","ab","_this$delaunay2","inedges","ti","tj","xi","yi","xj","yj","_renderSegment","h0","h1","v","_project","_clip","_regeneratorRuntime","mark","cellPolygons","cell","wrap","_context","prev","next","cellPolygon","index","stop","polygon","renderCell","S","c0","_regioncode","c1","_clipSegment","_step","neighbors","ci","_iterator","cj","ai","li","aj","lj","_context2","_createForOfIteratorHelper","s","done","abrupt","t0","f","finish","_this$delaunay3","e0","_cell","V","_clipInfinite","_clipFinite","e1","P","sx0","sy0","sx1","sy1","_S","_S2","_S3","_S4","_edgecode","_edge","contains","vx0","vy0","vxn","vyn","Array","from","unshift","splice","vx","vy","flatIterable","jitter","Delaunay","_delaunator","_hullIndex","collinear","sort","bounds","hypot","hullIndex","indexOf","dc","dt","renderHull","trianglePolygons","trianglePolygon","renderTriangle","that","array","call","flatArray","_step2","_context3","_marked","g","o","width","height","u","debug","map","voronoi","O","nodes","onMouseEnter","onMouseMove","m","onMouseLeave","onClick","C","L","W","D","M","render","current","find","z","ref","children","stroke","strokeWidth","opacity","style","cursor","ne","N","Y","Q","xFormatted","yFormatted","enableChip","color","serieColor","propTypes","K","isRequired","oe","te","axis","rows","X","tooltip","chip","serieId","tableCellValue","ae","se","Date","xScale","xFormat","yScale","yFormat","layers","axisTop","axisRight","axisBottom","axisLeft","enableGridX","enableGridY","gridXValues","gridYValues","enablePoints","pointSymbol","pointSize","pointColor","pointBorderWidth","pointBorderColor","enablePointLabel","pointLabel","markers","colors","enableArea","areaOpacity","areaBlendMode","areaBaselineValue","lineWidth","legends","isInteractive","debugMesh","enableSlices","debugSlices","sliceTooltip","enableCrosshair","crosshairType","le","re","role","useMesh","ue","pixelRatio","de","type","min","theme","scheme","ce","animate","motionConfig","defs","fe","window","devicePixelRatio","pe","H","he","area","x0z","y0z","areaStart","areaEnd","arealine","lineX0","lineY0","lineY1","lineX1","I","be","R","enableSlicesTooltip","T","G","B","E","F","J","filter","series","label","Boolean","legendData","hidden","reverse","A","getPointColor","getPointBorderColor","formatX","formatY","reduce","position","borderColor","Map","forEach","has","get","set","entries","ye","toggleSerie","lineGenerator","areaGenerator","getColor","slices","ge","config","U","immediate","Z","fillOpacity","mixBlendMode","me","lines","ve","xe","thickness","Re","qe","Oe","Me","isCurrent","setCurrent","showTooltipFromEvent","hideTooltip","strokeOpacity","Ce","Se","Te","we","symbol","size","borderWidth","enableLabel","labelYOffset","datum","ke","Be","margin","showTooltipAt","top","$","Le","We","pointLabelYOffset","ee","ie","innerWidth","innerHeight","outerWidth","outerHeight","Ge","Pe","Ee","je","Fe","Ve","Ye","De","Xe","ze","Ae","grid","xValues","yValues","axes","bottom","areas","crosshair","mesh","containerWidth","containerHeight","He","currentPoint","setCurrentPoint","currentSlice","setCurrentSlice","defaultProps","canvasRef","getContext","scale","fillStyle","background","fillRect","translate","ctx","strokeStyle","values","save","globalAlpha","beginPath","restore"],"sourceRoot":""}